{
	"id": "783b890241678bd5cf259eb0a4231f6c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/wstf token launch/contracts/token/ERC20/implementation.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./OmniERC20.sol\";  // Import the abstract OmniERC20 contract\n\ncontract MyOmniToken is OmniERC20 {\n\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address omniPortal,\n        uint256 initialSupply\n    ) OmniERC20(name_, symbol_, omniPortal) {\n        // Mint initial supply to the deployer (you can change this as needed)\n        _mint(msg.sender, initialSupply);\n    }\n\n    // Public mint function, callable by the owner (if you wish to allow minting after deployment)\n    function mint(address account, uint256 value) public {\n        // Add your own access control here, e.g., onlyOwner modifier\n        _mint(account, value);\n    }\n\n    // Internal mint function\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n}\n"
			},
			"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\nimport {XApp} from \"../../../../../lib/omni/contracts/core/src/pkg/XApp.sol\";\nimport {ConfLevel} from \"../../../../../lib/omni/contracts/core/src/libraries/ConfLevel.sol\";\n\n\nabstract contract OmniERC20 is Context, IERC20, IERC20Metadata, IERC20Errors, XApp {\n    mapping(address account => uint256) private _balances;\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n    uint256 private _totalSupply;\n    string private _name;\n    string private _symbol;\n\n    constructor(string memory name_, string memory symbol_, address omniPortal) XApp(omniPortal, ConfLevel.Latest) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint256 value) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n\n    function transfer(address to, uint256 value) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n   function transfer(uint64 destChain, address to, uint256 value) external payable {\n\n        address from = _msgSender();\n        _transfer(from, address(this), value);  // Lock the tokens in this contract\n        bytes memory data = abi.encodeCall(OmniERC20.receiveTransfer, (address(this), to, value));\n        uint256 fee = xcall(destChain, address(this), data, 150000);\n        require(msg.value >= fee, \"OmniERC20: Insufficient fee\");\n\n    }\n\n    function receiveTransfer(address from, address to, uint256 value) external xrecv {\n\n        require(isXCall(), \"OmniERC20: Only callable via cross-chain message\");\n        _update(from, to, value);\n\n    }\n\n    function _transfer(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n\n        _update(from, to, value);\n    }\n\n\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"lib/omni/contracts/core/src/libraries/ConfLevel.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\n/**\n * @title ConfLevel\n * @notice XMsg confirmation levels. Matches ConfLevels in lib/xchain/types.go\n * @dev We prefer explicit constants over Enums, because we want uint8 values to start at 1, not 0, as they do in\n *      lib/xchain/types.go, such that 0 can represent \"unset\". Note only latest and finalized levels are supported\n *      on-chain.\n */\nlibrary ConfLevel {\n    /**\n     * @notice XMsg confirmation level \"latest\", last byte of xmsg.shardId.\n     */\n    uint8 internal constant Latest = 1;\n\n    /**\n     * @notice XMsg confirmation level \"finalized\", last byte of xmsg.shardId.\n     */\n    uint8 internal constant Finalized = 4;\n\n    /**\n     * @notice Returns true if the given level is valid.\n     */\n    function isValid(uint8 level) internal pure returns (bool) {\n        return level == Latest || level == Finalized;\n    }\n\n    /**\n     * @notice Returns broadcast shard version of the given level.\n     */\n    function toBroadcastShard(uint8 level) internal pure returns (uint64) {\n        return uint64(level) | 0x0100;\n    }\n}\n"
			},
			"lib/omni/contracts/core/src/pkg/XApp.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\nimport { XAppBase } from \"./XAppBase.sol\";\n\n/**\n * @title XApp\n * @notice Base contract for Omni cross-chain applications\n */\nabstract contract XApp is XAppBase {\n    constructor(address omni_, uint8 defaultConfLevel_) {\n        _setOmniPortal(omni_);\n        _setDefaultConfLevel(defaultConfLevel_);\n    }\n}\n"
			},
			"src/wstf token launch/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"src/wstf token launch/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"src/wstf token launch/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"lib/omni/contracts/core/src/pkg/XAppBase.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\nimport { IOmniPortal } from \"../interfaces/IOmniPortal.sol\";\nimport { XTypes } from \"../libraries/XTypes.sol\";\nimport { ConfLevel } from \"../libraries/ConfLevel.sol\";\n\n/**\n * @title XAppBase\n * @notice Shared XApp storage and logic.\n */\nabstract contract XAppBase {\n    /**\n     * @notice Emitted when the OmniPortal contract address is set\n     */\n    event OmniPortalSet(address omni);\n\n    /**\n     * @notice Emitted when the default confirmation level is set\n     * @param conf  Confirmation level\n     */\n    event DefaultConfLevelSet(uint8 conf);\n\n    /**\n     * @notice The OmniPortal contract\n     */\n    IOmniPortal public omni;\n\n    /**\n     * @notice Default confirmation level for xcalls\n     */\n    uint8 public defaultConfLevel;\n\n    /**\n     * @notice Transient storage for the current xmsg\n     */\n    XTypes.MsgContext internal xmsg;\n\n    /**\n     * @notice Read current xmsg into storage before execution, delete it afterwards\n     */\n    modifier xrecv() {\n        xmsg = omni.xmsg();\n        _;\n        delete xmsg;\n    }\n\n    /**\n     * @notice Return true if the current call is an xcall from the OmniPortal\n     */\n    function isXCall() internal view returns (bool) {\n        return omni.isXCall() && msg.sender == address(omni);\n    }\n\n    /**\n     * @notice Retruns the fee for calling a contract on another chain, with the specified gas limit\n     */\n    function feeFor(uint64 destChainId, bytes memory data, uint64 gasLimit) internal view returns (uint256) {\n        return omni.feeFor(destChainId, data, gasLimit);\n    }\n\n    /**\n     * @notice Returns the chain ID of the Omni EVM in this Omni network\n     */\n    function omniChainId() internal view returns (uint64) {\n        return omni.omniChainId();\n    }\n\n    /**\n     * @notice Call a contract on another. (Default ConfLevel)\n     * @param destChainId   Destination chain ID\n     * @param to            Address of contract to call on destination chain\n     * @param data          ABI Encoded function calldata\n     * @param gasLimit      Execution gas limit, enforced on destination chain\n     */\n    function xcall(uint64 destChainId, address to, bytes memory data, uint64 gasLimit) internal returns (uint256) {\n        uint256 fee = omni.feeFor(destChainId, data, gasLimit);\n        require(address(this).balance >= fee || msg.value >= fee, \"XApp: insufficient funds\");\n        omni.xcall{ value: fee }(destChainId, defaultConfLevel, to, data, gasLimit);\n        return fee;\n    }\n\n    /**\n     * @notice Call a contract on another chain. (Explicit ConfLevel)\n     * @param destChainId   Destination chain ID\n     * @param conf          Confirmation level\n     * @param to            Address of contract to call on destination chain\n     * @param data          ABI Encoded function calldata\n     * @param gasLimit      Execution gas limit, enforced on destination chain\n     */\n    function xcall(uint64 destChainId, uint8 conf, address to, bytes memory data, uint64 gasLimit)\n        internal\n        returns (uint256)\n    {\n        uint256 fee = omni.feeFor(destChainId, data, gasLimit);\n        require(address(this).balance >= fee || msg.value >= fee, \"XApp: insufficient funds\");\n        omni.xcall{ value: fee }(destChainId, conf, to, data, gasLimit);\n        return fee;\n    }\n\n    /**\n     * @notice Set the default confirmation level for xcalls\n     * @param conf  Confirmation level\n     */\n    function _setDefaultConfLevel(uint8 conf) internal {\n        require(ConfLevel.isValid(conf), \"XApp: invalid conf level\");\n        defaultConfLevel = conf;\n        emit DefaultConfLevelSet(conf);\n    }\n\n    /**\n     * @notice Set the OmniPortal contract address\n     * @param _omni    The OmniPortal contract address\n     */\n    function _setOmniPortal(address _omni) internal {\n        require(_omni != address(0), \"XApp: no zero omni\");\n        omni = IOmniPortal(_omni);\n        emit OmniPortalSet(_omni);\n    }\n}\n"
			},
			"lib/omni/contracts/core/src/libraries/XTypes.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\n/**\n * @title XTypes\n * @dev Defines xchain types, core to Omni's xchain messaging protocol. These\n *      types mirror those defined in omni/lib/xchain/types.go.\n */\nlibrary XTypes {\n    /**\n     * @notice A cross chain message - the product of an xcall. This matches the XMsg type used\n     *        throughout Omni's cross-chain messaging protocol. Msg is used to construct and verify\n     *        XSubmission merkle trees / proofs.\n     * @custom:field destChainId    Chain ID of the destination chain\n     * @custom:field shardId        Shard ID of the XStream (first byte is the confirmation level)\n     * @custom:field offset         Monotonically incremented offset of Msg in source -> dest Stream\n     * @custom:field sender         msg.sender of xcall on source chain\n     * @custom:field to             Target address to call on destination chain\n     * @custom:field data           Data to provide to call on destination chain\n     * @custom:field gasLimit       Gas limit to use for call execution on destination chain\n     */\n    struct Msg {\n        uint64 destChainId;\n        uint64 shardId;\n        uint64 offset;\n        address sender;\n        address to;\n        bytes data;\n        uint64 gasLimit;\n    }\n\n    /**\n     * @notice Msg context exposed during its execution to consuming xapps.\n     * @custom:field sourceChainId  Chain ID of the source chain\n     * @custom:field sender         msg.sender of xcall on source chain\n     */\n    struct MsgContext {\n        uint64 sourceChainId;\n        address sender;\n    }\n\n    /**\n     * @notice BlockHeader of an XBlock.\n     * @custom:field sourceChainId      Chain ID of the source chain\n     * @custom:field sourceChainId      Chain ID of the Omni consensus chain\n     * @custom:field confLevel          Confirmation level of the cross chain block\n     * @custom:field offset             Offset of the cross chain block\n     * @custom:field sourceBlockHeight  Height of the source chain block\n     * @custom:field sourceBlockHash    Hash of the source chain block\n     */\n    struct BlockHeader {\n        uint64 sourceChainId;\n        uint64 consensusChainId;\n        uint8 confLevel;\n        uint64 offset;\n        uint64 sourceBlockHeight;\n        bytes32 sourceBlockHash;\n    }\n\n    /**\n     * @notice The required parameters to submit xmsgs to an OmniPortal. Constructed by the relayer\n     *         by watching Omni's consensus chain, and source chain blocks.\n     * @custom:field attestationRoot  Merkle root of xchain block (XBlockRoot), attested to and signed by validators\n     * @custom:field validatorSetId   Unique identifier of the validator set that attested to this root\n     * @custom:field blockHeader      Block header, identifies xchain block\n     * @custom:field msgs             Messages to execute\n     * @custom:field proof            Multi proof of block header and messages, proven against attestationRoot\n     * @custom:field proofFlags       Multi proof flags\n     * @custom:field signatures       Array of validator signatures of the attestationRoot, and their public keys\n     */\n    struct Submission {\n        bytes32 attestationRoot;\n        uint64 validatorSetId;\n        BlockHeader blockHeader;\n        Msg[] msgs;\n        bytes32[] proof;\n        bool[] proofFlags;\n        SigTuple[] signatures;\n    }\n\n    /**\n     * @notice A tuple of a validator's ethereum address and signature over some digest.\n     * @custom:field validatorAddr  Validator ethereum address\n     * @custom:field signature      Validator signature over some digest; Ethereum 65 bytes [R || S || V] format.\n     */\n    struct SigTuple {\n        address validatorAddr;\n        bytes signature;\n    }\n\n    /**\n     * @notice An Omni validator, specified by their etheruem address and voting power.\n     * @custom:field addr   Validator ethereum address\n     * @custom:field power  Validator voting power\n     */\n    struct Validator {\n        address addr;\n        uint64 power;\n    }\n\n    /**\n     * @notice A chain in the \"omni network\" specified by its chain ID and supported shards.\n     * @custom:field chainId  Chain ID\n     * @custom:field shards   Supported shards\n     */\n    struct Chain {\n        uint64 chainId;\n        uint64[] shards;\n    }\n}\n"
			},
			"lib/omni/contracts/core/src/interfaces/IOmniPortal.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-only\npragma solidity ^0.8.12;\n\nimport { XTypes } from \"../libraries/XTypes.sol\";\n\n/**\n * @title IOmniPortal\n * @notice The OmniPortal is the on-chain interface to Omni's cross-chain\n *         messaging protocol. It is used to initiate and execute cross-chain calls.\n */\ninterface IOmniPortal {\n    /**\n     * @notice Emitted when an xcall is made to a contract on another chain\n     * @param destChainId   Destination chain ID\n     * @param offset        Offset this XMsg in the source -> dest XStream\n     * @param sender        msg.sender of the source xcall\n     * @param to            Address of the contract to call on the destination chain\n     * @param data          Encoded function calldata\n     * @param gasLimit      Gas limit for execution on destination chain\n     * @param fees          Fees paid for the xcall\n     */\n    event XMsg(\n        uint64 indexed destChainId,\n        uint64 indexed shardId,\n        uint64 indexed offset,\n        address sender,\n        address to,\n        bytes data,\n        uint64 gasLimit,\n        uint256 fees\n    );\n\n    /**\n     * @notice Emitted when an XMsg is executed on its destination chain\n     * @param sourceChainId Source chain ID\n     * @param shardId       Shard ID of the XStream (first byte is the confirmation level)\n     * @param offset        Offset the XMsg in the source -> dest XStream\n     * @param gasUsed       Gas used in execution of the XMsg\n     * @param success       Whether the execution succeeded\n     * @param relayer       Address of the relayer who submitted the XMsg\n     * @param error         Result of XMsg execution, if success == false. Limited to\n     *                      xreceiptMaxErrorBytes(). Empty if success == true.\n     */\n    event XReceipt(\n        uint64 indexed sourceChainId,\n        uint64 indexed shardId,\n        uint64 indexed offset,\n        uint256 gasUsed,\n        address relayer,\n        bool success,\n        bytes error\n    );\n\n    /**\n     * @notice Maximum allowed xmsg gas limit\n     */\n    function xmsgMaxGasLimit() external view returns (uint64);\n\n    /**\n     * @notice Minimum allowed xmsg gas limit\n     */\n    function xmsgMinGasLimit() external view returns (uint64);\n\n    /**\n     * @notice Maximum number of bytes allowed in xmsg data\n     */\n    function xmsgMaxDataSize() external view returns (uint16);\n\n    /**\n     * @notice Maxium number of bytes allowed in xreceipt result\n     */\n    function xreceiptMaxErrorSize() external view returns (uint16);\n\n    /**\n     * @notice Returns the fee oracle address\n     */\n    function feeOracle() external view returns (address);\n\n    /**\n     * @notice Returns the chain ID of the chain to which this portal is deployed\n     */\n    function chainId() external view returns (uint64);\n\n    /**\n     * @notice Returns the chain ID of Omni's EVM execution chain\n     */\n    function omniChainId() external view returns (uint64);\n\n    /**\n     * @notice Returns the offset of the last outbound XMsg sent to destChainId in shardId\n     */\n    function outXMsgOffset(uint64 destChainId, uint64 shardId) external view returns (uint64);\n\n    /**\n     * @notice Returns the offset of the last inbound XMsg received from srcChainId in shardId\n     */\n    function inXMsgOffset(uint64 srcChainId, uint64 shardId) external view returns (uint64);\n\n    /**\n     * @notice Returns the offset of the last inbound XBlock received from srcChainId in shardId\n     */\n    function inXBlockOffset(uint64 srcChainId, uint64 shardId) external view returns (uint64);\n\n    /**\n     * @notice Returns the current XMsg being executed via this portal.\n     *          - xmsg().sourceChainId  Chain ID of the source xcall\n     *          - xmsg().sender         msg.sender of the source xcall\n     *         If no XMsg is being executed, all fields will be zero.\n     *          - xmsg().sourceChainId  == 0\n     *          - xmsg().sender         == address(0)\n     */\n    function xmsg() external view returns (XTypes.MsgContext memory);\n\n    /**\n     * @notice Returns true the current transaction is an xcall, false otherwise\n     */\n    function isXCall() external view returns (bool);\n\n    /**\n     * @notice Returns the shard ID is supported by this portal\n     */\n    function isSupportedShard(uint64 shardId) external view returns (bool);\n\n    /**\n     * @notice Returns the destination chain ID is supported by this portal\n     */\n    function isSupportedDest(uint64 destChainId) external view returns (bool);\n\n    /**\n     * @notice Calculate the fee for calling a contract on another chain\n     *         Fees denominated in wei.\n     * @param destChainId   Destination chain ID\n     * @param data          Encoded function calldata\n     * @param gasLimit      Execution gas limit, enforced on destination chain\n     */\n    function feeFor(uint64 destChainId, bytes calldata data, uint64 gasLimit) external view returns (uint256);\n\n    /**\n     * @notice Call a contract on another chain.\n     * @param destChainId   Destination chain ID\n     * @param conf          Confirmation level;\n     * @param to            Address of contract to call on destination chain\n     * @param data          ABI Encoded function calldata\n     * @param gasLimit      Execution gas limit, enforced on destination chain\n     */\n    function xcall(uint64 destChainId, uint8 conf, address to, bytes calldata data, uint64 gasLimit) external payable;\n\n    /**\n     * @notice Submit a batch of XMsgs to be executed on this chain\n     * @param xsub  An xchain submisison, including an attestation root w/ validator signatures,\n     *              and a block header and message batch, proven against the attestation root.\n     */\n    function xsubmit(XTypes.Submission calldata xsub) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"lib/omni/contracts/core/src/interfaces/IOmniPortal.sol": {
				"IOmniPortal": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "destChainId",
									"type": "uint64"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "shardId",
									"type": "uint64"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "offset",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "gasLimit",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fees",
									"type": "uint256"
								}
							],
							"name": "XMsg",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "sourceChainId",
									"type": "uint64"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "shardId",
									"type": "uint64"
								},
								{
									"indexed": true,
									"internalType": "uint64",
									"name": "offset",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gasUsed",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "relayer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "error",
									"type": "bytes"
								}
							],
							"name": "XReceipt",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "chainId",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destChainId",
									"type": "uint64"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "uint64",
									"name": "gasLimit",
									"type": "uint64"
								}
							],
							"name": "feeFor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeOracle",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "srcChainId",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "shardId",
									"type": "uint64"
								}
							],
							"name": "inXBlockOffset",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "srcChainId",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "shardId",
									"type": "uint64"
								}
							],
							"name": "inXMsgOffset",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destChainId",
									"type": "uint64"
								}
							],
							"name": "isSupportedDest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "shardId",
									"type": "uint64"
								}
							],
							"name": "isSupportedShard",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isXCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "omniChainId",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destChainId",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "shardId",
									"type": "uint64"
								}
							],
							"name": "outXMsgOffset",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destChainId",
									"type": "uint64"
								},
								{
									"internalType": "uint8",
									"name": "conf",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "uint64",
									"name": "gasLimit",
									"type": "uint64"
								}
							],
							"name": "xcall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xmsg",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint64",
											"name": "sourceChainId",
											"type": "uint64"
										},
										{
											"internalType": "address",
											"name": "sender",
											"type": "address"
										}
									],
									"internalType": "struct XTypes.MsgContext",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xmsgMaxDataSize",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xmsgMaxGasLimit",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xmsgMinGasLimit",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xreceiptMaxErrorSize",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "attestationRoot",
											"type": "bytes32"
										},
										{
											"internalType": "uint64",
											"name": "validatorSetId",
											"type": "uint64"
										},
										{
											"components": [
												{
													"internalType": "uint64",
													"name": "sourceChainId",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "consensusChainId",
													"type": "uint64"
												},
												{
													"internalType": "uint8",
													"name": "confLevel",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "offset",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "sourceBlockHeight",
													"type": "uint64"
												},
												{
													"internalType": "bytes32",
													"name": "sourceBlockHash",
													"type": "bytes32"
												}
											],
											"internalType": "struct XTypes.BlockHeader",
											"name": "blockHeader",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "uint64",
													"name": "destChainId",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "shardId",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "offset",
													"type": "uint64"
												},
												{
													"internalType": "address",
													"name": "sender",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "to",
													"type": "address"
												},
												{
													"internalType": "bytes",
													"name": "data",
													"type": "bytes"
												},
												{
													"internalType": "uint64",
													"name": "gasLimit",
													"type": "uint64"
												}
											],
											"internalType": "struct XTypes.Msg[]",
											"name": "msgs",
											"type": "tuple[]"
										},
										{
											"internalType": "bytes32[]",
											"name": "proof",
											"type": "bytes32[]"
										},
										{
											"internalType": "bool[]",
											"name": "proofFlags",
											"type": "bool[]"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "validatorAddr",
													"type": "address"
												},
												{
													"internalType": "bytes",
													"name": "signature",
													"type": "bytes"
												}
											],
											"internalType": "struct XTypes.SigTuple[]",
											"name": "signatures",
											"type": "tuple[]"
										}
									],
									"internalType": "struct XTypes.Submission",
									"name": "xsub",
									"type": "tuple"
								}
							],
							"name": "xsubmit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"XMsg(uint64,uint64,uint64,address,address,bytes,uint64,uint256)": {
								"params": {
									"data": "Encoded function calldata",
									"destChainId": "Destination chain ID",
									"fees": "Fees paid for the xcall",
									"gasLimit": "Gas limit for execution on destination chain",
									"offset": "Offset this XMsg in the source -> dest XStream",
									"sender": "msg.sender of the source xcall",
									"to": "Address of the contract to call on the destination chain"
								}
							},
							"XReceipt(uint64,uint64,uint64,uint256,address,bool,bytes)": {
								"params": {
									"error": "Result of XMsg execution, if success == false. Limited to                      xreceiptMaxErrorBytes(). Empty if success == true.",
									"gasUsed": "Gas used in execution of the XMsg",
									"offset": "Offset the XMsg in the source -> dest XStream",
									"relayer": "Address of the relayer who submitted the XMsg",
									"shardId": "Shard ID of the XStream (first byte is the confirmation level)",
									"sourceChainId": "Source chain ID",
									"success": "Whether the execution succeeded"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"feeFor(uint64,bytes,uint64)": {
								"params": {
									"data": "Encoded function calldata",
									"destChainId": "Destination chain ID",
									"gasLimit": "Execution gas limit, enforced on destination chain"
								}
							},
							"xcall(uint64,uint8,address,bytes,uint64)": {
								"params": {
									"conf": "Confirmation level;",
									"data": "ABI Encoded function calldata",
									"destChainId": "Destination chain ID",
									"gasLimit": "Execution gas limit, enforced on destination chain",
									"to": "Address of contract to call on destination chain"
								}
							},
							"xsubmit((bytes32,uint64,(uint64,uint64,uint8,uint64,uint64,bytes32),(uint64,uint64,uint64,address,address,bytes,uint64)[],bytes32[],bool[],(address,bytes)[]))": {
								"params": {
									"xsub": "An xchain submisison, including an attestation root w/ validator signatures,              and a block header and message batch, proven against the attestation root."
								}
							}
						},
						"title": "IOmniPortal",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"chainId()": "9a8a0592",
							"feeFor(uint64,bytes,uint64)": "8dd9523c",
							"feeOracle()": "500b19e7",
							"inXBlockOffset(uint64,uint64)": "3fd3b15e",
							"inXMsgOffset(uint64,uint64)": "d051c97d",
							"isSupportedDest(uint64)": "24278bbe",
							"isSupportedShard(uint64)": "aaf1bc97",
							"isXCall()": "55e2448e",
							"omniChainId()": "110ff5f1",
							"outXMsgOffset(uint64,uint64)": "3aa87330",
							"xcall(uint64,uint8,address,bytes,uint64)": "c21dda4f",
							"xmsg()": "2f32700e",
							"xmsgMaxDataSize()": "b4d5afd1",
							"xmsgMaxGasLimit()": "cf84c818",
							"xmsgMinGasLimit()": "78fe5307",
							"xreceiptMaxErrorSize()": "c26dfc05",
							"xsubmit((bytes32,uint64,(uint64,uint64,uint8,uint64,uint64,bytes32),(uint64,uint64,uint64,address,address,bytes,uint64)[],bytes32[],bool[],(address,bytes)[]))": "66a1eaf3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"destChainId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"shardId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"offset\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fees\",\"type\":\"uint256\"}],\"name\":\"XMsg\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"sourceChainId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"shardId\",\"type\":\"uint64\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"offset\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"relayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"error\",\"type\":\"bytes\"}],\"name\":\"XReceipt\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"}],\"name\":\"feeFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"srcChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"shardId\",\"type\":\"uint64\"}],\"name\":\"inXBlockOffset\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"srcChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"shardId\",\"type\":\"uint64\"}],\"name\":\"inXMsgOffset\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainId\",\"type\":\"uint64\"}],\"name\":\"isSupportedDest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"shardId\",\"type\":\"uint64\"}],\"name\":\"isSupportedShard\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isXCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"omniChainId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"shardId\",\"type\":\"uint64\"}],\"name\":\"outXMsgOffset\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"conf\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"}],\"name\":\"xcall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xmsg\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"sourceChainId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"internalType\":\"struct XTypes.MsgContext\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xmsgMaxDataSize\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xmsgMaxGasLimit\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xmsgMinGasLimit\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xreceiptMaxErrorSize\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"attestationRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"validatorSetId\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"sourceChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"consensusChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint8\",\"name\":\"confLevel\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"offset\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"sourceBlockHeight\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"sourceBlockHash\",\"type\":\"bytes32\"}],\"internalType\":\"struct XTypes.BlockHeader\",\"name\":\"blockHeader\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"destChainId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"shardId\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"offset\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"}],\"internalType\":\"struct XTypes.Msg[]\",\"name\":\"msgs\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"bool[]\",\"name\":\"proofFlags\",\"type\":\"bool[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"validatorAddr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct XTypes.SigTuple[]\",\"name\":\"signatures\",\"type\":\"tuple[]\"}],\"internalType\":\"struct XTypes.Submission\",\"name\":\"xsub\",\"type\":\"tuple\"}],\"name\":\"xsubmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"XMsg(uint64,uint64,uint64,address,address,bytes,uint64,uint256)\":{\"params\":{\"data\":\"Encoded function calldata\",\"destChainId\":\"Destination chain ID\",\"fees\":\"Fees paid for the xcall\",\"gasLimit\":\"Gas limit for execution on destination chain\",\"offset\":\"Offset this XMsg in the source -> dest XStream\",\"sender\":\"msg.sender of the source xcall\",\"to\":\"Address of the contract to call on the destination chain\"}},\"XReceipt(uint64,uint64,uint64,uint256,address,bool,bytes)\":{\"params\":{\"error\":\"Result of XMsg execution, if success == false. Limited to                      xreceiptMaxErrorBytes(). Empty if success == true.\",\"gasUsed\":\"Gas used in execution of the XMsg\",\"offset\":\"Offset the XMsg in the source -> dest XStream\",\"relayer\":\"Address of the relayer who submitted the XMsg\",\"shardId\":\"Shard ID of the XStream (first byte is the confirmation level)\",\"sourceChainId\":\"Source chain ID\",\"success\":\"Whether the execution succeeded\"}}},\"kind\":\"dev\",\"methods\":{\"feeFor(uint64,bytes,uint64)\":{\"params\":{\"data\":\"Encoded function calldata\",\"destChainId\":\"Destination chain ID\",\"gasLimit\":\"Execution gas limit, enforced on destination chain\"}},\"xcall(uint64,uint8,address,bytes,uint64)\":{\"params\":{\"conf\":\"Confirmation level;\",\"data\":\"ABI Encoded function calldata\",\"destChainId\":\"Destination chain ID\",\"gasLimit\":\"Execution gas limit, enforced on destination chain\",\"to\":\"Address of contract to call on destination chain\"}},\"xsubmit((bytes32,uint64,(uint64,uint64,uint8,uint64,uint64,bytes32),(uint64,uint64,uint64,address,address,bytes,uint64)[],bytes32[],bool[],(address,bytes)[]))\":{\"params\":{\"xsub\":\"An xchain submisison, including an attestation root w/ validator signatures,              and a block header and message batch, proven against the attestation root.\"}}},\"title\":\"IOmniPortal\",\"version\":1},\"userdoc\":{\"events\":{\"XMsg(uint64,uint64,uint64,address,address,bytes,uint64,uint256)\":{\"notice\":\"Emitted when an xcall is made to a contract on another chain\"},\"XReceipt(uint64,uint64,uint64,uint256,address,bool,bytes)\":{\"notice\":\"Emitted when an XMsg is executed on its destination chain\"}},\"kind\":\"user\",\"methods\":{\"chainId()\":{\"notice\":\"Returns the chain ID of the chain to which this portal is deployed\"},\"feeFor(uint64,bytes,uint64)\":{\"notice\":\"Calculate the fee for calling a contract on another chain         Fees denominated in wei.\"},\"feeOracle()\":{\"notice\":\"Returns the fee oracle address\"},\"inXBlockOffset(uint64,uint64)\":{\"notice\":\"Returns the offset of the last inbound XBlock received from srcChainId in shardId\"},\"inXMsgOffset(uint64,uint64)\":{\"notice\":\"Returns the offset of the last inbound XMsg received from srcChainId in shardId\"},\"isSupportedDest(uint64)\":{\"notice\":\"Returns the destination chain ID is supported by this portal\"},\"isSupportedShard(uint64)\":{\"notice\":\"Returns the shard ID is supported by this portal\"},\"isXCall()\":{\"notice\":\"Returns true the current transaction is an xcall, false otherwise\"},\"omniChainId()\":{\"notice\":\"Returns the chain ID of Omni's EVM execution chain\"},\"outXMsgOffset(uint64,uint64)\":{\"notice\":\"Returns the offset of the last outbound XMsg sent to destChainId in shardId\"},\"xcall(uint64,uint8,address,bytes,uint64)\":{\"notice\":\"Call a contract on another chain.\"},\"xmsg()\":{\"notice\":\"Returns the current XMsg being executed via this portal.          - xmsg().sourceChainId  Chain ID of the source xcall          - xmsg().sender         msg.sender of the source xcall         If no XMsg is being executed, all fields will be zero.          - xmsg().sourceChainId  == 0          - xmsg().sender         == address(0)\"},\"xmsgMaxDataSize()\":{\"notice\":\"Maximum number of bytes allowed in xmsg data\"},\"xmsgMaxGasLimit()\":{\"notice\":\"Maximum allowed xmsg gas limit\"},\"xmsgMinGasLimit()\":{\"notice\":\"Minimum allowed xmsg gas limit\"},\"xreceiptMaxErrorSize()\":{\"notice\":\"Maxium number of bytes allowed in xreceipt result\"},\"xsubmit((bytes32,uint64,(uint64,uint64,uint8,uint64,uint64,bytes32),(uint64,uint64,uint64,address,address,bytes,uint64)[],bytes32[],bool[],(address,bytes)[]))\":{\"notice\":\"Submit a batch of XMsgs to be executed on this chain\"}},\"notice\":\"The OmniPortal is the on-chain interface to Omni's cross-chain         messaging protocol. It is used to initiate and execute cross-chain calls.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/omni/contracts/core/src/interfaces/IOmniPortal.sol\":\"IOmniPortal\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/omni/contracts/core/src/interfaces/IOmniPortal.sol\":{\"keccak256\":\"0x8010a586e7abcf478044249c104a6f01c1c6830b96f14273289e01303163342d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ac0f21a8ef960f9752f9dca194e53eb7073f66c9124ba86d827087b5e9ce6656\",\"dweb:/ipfs/QmT1UYic7cJg58iEN8pNF6CbhXyYiR16G4ihB9NsDwZpkG\"]},\"lib/omni/contracts/core/src/libraries/XTypes.sol\":{\"keccak256\":\"0x1a670aafb257d8d16c08b03b70a9ba2e4b9f4755198f52d14f5c8e6c5dc3b96a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7513bb80e3db2dbaccb687304988f3992f7097b16967f1844acb4038e833e511\",\"dweb:/ipfs/QmYBPaJ3PWnxxKywRVeZZ14YWH7bSMcKuUCPhcfjk8PENT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"XMsg(uint64,uint64,uint64,address,address,bytes,uint64,uint256)": {
								"notice": "Emitted when an xcall is made to a contract on another chain"
							},
							"XReceipt(uint64,uint64,uint64,uint256,address,bool,bytes)": {
								"notice": "Emitted when an XMsg is executed on its destination chain"
							}
						},
						"kind": "user",
						"methods": {
							"chainId()": {
								"notice": "Returns the chain ID of the chain to which this portal is deployed"
							},
							"feeFor(uint64,bytes,uint64)": {
								"notice": "Calculate the fee for calling a contract on another chain         Fees denominated in wei."
							},
							"feeOracle()": {
								"notice": "Returns the fee oracle address"
							},
							"inXBlockOffset(uint64,uint64)": {
								"notice": "Returns the offset of the last inbound XBlock received from srcChainId in shardId"
							},
							"inXMsgOffset(uint64,uint64)": {
								"notice": "Returns the offset of the last inbound XMsg received from srcChainId in shardId"
							},
							"isSupportedDest(uint64)": {
								"notice": "Returns the destination chain ID is supported by this portal"
							},
							"isSupportedShard(uint64)": {
								"notice": "Returns the shard ID is supported by this portal"
							},
							"isXCall()": {
								"notice": "Returns true the current transaction is an xcall, false otherwise"
							},
							"omniChainId()": {
								"notice": "Returns the chain ID of Omni's EVM execution chain"
							},
							"outXMsgOffset(uint64,uint64)": {
								"notice": "Returns the offset of the last outbound XMsg sent to destChainId in shardId"
							},
							"xcall(uint64,uint8,address,bytes,uint64)": {
								"notice": "Call a contract on another chain."
							},
							"xmsg()": {
								"notice": "Returns the current XMsg being executed via this portal.          - xmsg().sourceChainId  Chain ID of the source xcall          - xmsg().sender         msg.sender of the source xcall         If no XMsg is being executed, all fields will be zero.          - xmsg().sourceChainId  == 0          - xmsg().sender         == address(0)"
							},
							"xmsgMaxDataSize()": {
								"notice": "Maximum number of bytes allowed in xmsg data"
							},
							"xmsgMaxGasLimit()": {
								"notice": "Maximum allowed xmsg gas limit"
							},
							"xmsgMinGasLimit()": {
								"notice": "Minimum allowed xmsg gas limit"
							},
							"xreceiptMaxErrorSize()": {
								"notice": "Maxium number of bytes allowed in xreceipt result"
							},
							"xsubmit((bytes32,uint64,(uint64,uint64,uint8,uint64,uint64,bytes32),(uint64,uint64,uint64,address,address,bytes,uint64)[],bytes32[],bool[],(address,bytes)[]))": {
								"notice": "Submit a batch of XMsgs to be executed on this chain"
							}
						},
						"notice": "The OmniPortal is the on-chain interface to Omni's cross-chain         messaging protocol. It is used to initiate and execute cross-chain calls.",
						"version": 1
					}
				}
			},
			"lib/omni/contracts/core/src/libraries/ConfLevel.sol": {
				"ConfLevel": {
					"abi": [],
					"devdoc": {
						"details": "We prefer explicit constants over Enums, because we want uint8 values to start at 1, not 0, as they do in      lib/xchain/types.go, such that 0 can represent \"unset\". Note only latest and finalized levels are supported      on-chain.",
						"kind": "dev",
						"methods": {},
						"title": "ConfLevel",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":422:1118  library ConfLevel {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":422:1118  library ConfLevel {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201bb47b1f6755c366d36b1a8fdab8044b308154e6e82654e05088496eb3b2256564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201bb47b1f6755c366d36b1a8fdab8044b308154e6e82654e05088496eb3b2256564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xB4 PUSH28 0x1F6755C366D36B1A8FDAB8044B308154E6E82654E05088496EB3B225 PUSH6 0x64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "422:696:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201bb47b1f6755c366d36b1a8fdab8044b308154e6e82654e05088496eb3b2256564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHL 0xB4 PUSH28 0x1F6755C366D36B1A8FDAB8044B308154E6E82654E05088496EB3B225 PUSH6 0x64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "422:696:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"isValid(uint8)": "infinite",
								"toBroadcastShard(uint8)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 422,
									"end": 1118,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201bb47b1f6755c366d36b1a8fdab8044b308154e6e82654e05088496eb3b2256564736f6c634300081a0033",
									".code": [
										{
											"begin": 422,
											"end": 1118,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 422,
											"end": 1118,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 422,
											"end": 1118,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 422,
											"end": 1118,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 422,
											"end": 1118,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 422,
											"end": 1118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 422,
											"end": 1118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 422,
											"end": 1118,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 422,
											"end": 1118,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"lib/omni/contracts/core/src/interfaces/IOmniPortal.sol",
								"lib/omni/contracts/core/src/libraries/ConfLevel.sol",
								"lib/omni/contracts/core/src/libraries/XTypes.sol",
								"lib/omni/contracts/core/src/pkg/XApp.sol",
								"lib/omni/contracts/core/src/pkg/XAppBase.sol",
								"src/wstf token launch/contracts/interfaces/draft-IERC6093.sol",
								"src/wstf token launch/contracts/token/ERC20/IERC20.sol",
								"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol",
								"src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"src/wstf token launch/contracts/token/ERC20/implementation.sol",
								"src/wstf token launch/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"We prefer explicit constants over Enums, because we want uint8 values to start at 1, not 0, as they do in      lib/xchain/types.go, such that 0 can represent \\\"unset\\\". Note only latest and finalized levels are supported      on-chain.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ConfLevel\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"XMsg confirmation levels. Matches ConfLevels in lib/xchain/types.go\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":\"ConfLevel\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":{\"keccak256\":\"0xfce1f35d6bbec9bb0729a7322657cec8f1f7a8a25ae6318531b08ad928f58c32\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://cb8e1467528079ac0ff70e86207f1b4d25bbb236e5830fab9991c1c76b6ca623\",\"dweb:/ipfs/QmawXHbFRrPppPAG45mHRnCWJuQMYhe534CoicW4pF43EZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "XMsg confirmation levels. Matches ConfLevels in lib/xchain/types.go",
						"version": 1
					}
				}
			},
			"lib/omni/contracts/core/src/libraries/XTypes.sol": {
				"XTypes": {
					"abi": [],
					"devdoc": {
						"details": "Defines xchain types, core to Omni's xchain messaging protocol. These      types mirror those defined in omni/lib/xchain/types.go.",
						"kind": "dev",
						"methods": {},
						"title": "XTypes",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"lib/omni/contracts/core/src/libraries/XTypes.sol\":234:4303  library XTypes {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"lib/omni/contracts/core/src/libraries/XTypes.sol\":234:4303  library XTypes {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220300be53b3af105128fecdc614b9945903502db66371c0d5143cc7491f4a49a9664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220300be53b3af105128fecdc614b9945903502db66371c0d5143cc7491f4a49a9664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS SIGNEXTEND 0xE5 EXTCODESIZE GASPRICE CALL SDIV SLT DUP16 0xEC 0xDC PUSH2 0x4B99 GASLIMIT SWAP1 CALLDATALOAD MUL 0xDB PUSH7 0x371C0D5143CC74 SWAP2 DELEGATECALL LOG4 SWAP11 SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "234:4069:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220300be53b3af105128fecdc614b9945903502db66371c0d5143cc7491f4a49a9664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS SIGNEXTEND 0xE5 EXTCODESIZE GASPRICE CALL SDIV SLT DUP16 0xEC 0xDC PUSH2 0x4B99 GASLIMIT SWAP1 CALLDATALOAD MUL 0xDB PUSH7 0x371C0D5143CC74 SWAP2 DELEGATECALL LOG4 SWAP11 SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "234:4069:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 234,
									"end": 4303,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220300be53b3af105128fecdc614b9945903502db66371c0d5143cc7491f4a49a9664736f6c634300081a0033",
									".code": [
										{
											"begin": 234,
											"end": 4303,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 234,
											"end": 4303,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 234,
											"end": 4303,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 234,
											"end": 4303,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 234,
											"end": 4303,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 234,
											"end": 4303,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 234,
											"end": 4303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 4303,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 234,
											"end": 4303,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"lib/omni/contracts/core/src/interfaces/IOmniPortal.sol",
								"lib/omni/contracts/core/src/libraries/ConfLevel.sol",
								"lib/omni/contracts/core/src/libraries/XTypes.sol",
								"lib/omni/contracts/core/src/pkg/XApp.sol",
								"lib/omni/contracts/core/src/pkg/XAppBase.sol",
								"src/wstf token launch/contracts/interfaces/draft-IERC6093.sol",
								"src/wstf token launch/contracts/token/ERC20/IERC20.sol",
								"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol",
								"src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"src/wstf token launch/contracts/token/ERC20/implementation.sol",
								"src/wstf token launch/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Defines xchain types, core to Omni's xchain messaging protocol. These      types mirror those defined in omni/lib/xchain/types.go.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"XTypes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/omni/contracts/core/src/libraries/XTypes.sol\":\"XTypes\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/omni/contracts/core/src/libraries/XTypes.sol\":{\"keccak256\":\"0x1a670aafb257d8d16c08b03b70a9ba2e4b9f4755198f52d14f5c8e6c5dc3b96a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7513bb80e3db2dbaccb687304988f3992f7097b16967f1844acb4038e833e511\",\"dweb:/ipfs/QmYBPaJ3PWnxxKywRVeZZ14YWH7bSMcKuUCPhcfjk8PENT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/omni/contracts/core/src/pkg/XApp.sol": {
				"XApp": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "conf",
									"type": "uint8"
								}
							],
							"name": "DefaultConfLevelSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "omni",
									"type": "address"
								}
							],
							"name": "OmniPortalSet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "defaultConfLevel",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "omni",
							"outputs": [
								{
									"internalType": "contract IOmniPortal",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"DefaultConfLevelSet(uint8)": {
								"params": {
									"conf": "Confirmation level"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "XApp",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"defaultConfLevel()": "74eeb847",
							"omni()": "39acf9f1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"conf\",\"type\":\"uint8\"}],\"name\":\"DefaultConfLevelSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"omni\",\"type\":\"address\"}],\"name\":\"OmniPortalSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"defaultConfLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"omni\",\"outputs\":[{\"internalType\":\"contract IOmniPortal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DefaultConfLevelSet(uint8)\":{\"params\":{\"conf\":\"Confirmation level\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"XApp\",\"version\":1},\"userdoc\":{\"events\":{\"DefaultConfLevelSet(uint8)\":{\"notice\":\"Emitted when the default confirmation level is set\"},\"OmniPortalSet(address)\":{\"notice\":\"Emitted when the OmniPortal contract address is set\"}},\"kind\":\"user\",\"methods\":{\"defaultConfLevel()\":{\"notice\":\"Default confirmation level for xcalls\"},\"omni()\":{\"notice\":\"The OmniPortal contract\"}},\"notice\":\"Base contract for Omni cross-chain applications\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/omni/contracts/core/src/pkg/XApp.sol\":\"XApp\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/omni/contracts/core/src/interfaces/IOmniPortal.sol\":{\"keccak256\":\"0x8010a586e7abcf478044249c104a6f01c1c6830b96f14273289e01303163342d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ac0f21a8ef960f9752f9dca194e53eb7073f66c9124ba86d827087b5e9ce6656\",\"dweb:/ipfs/QmT1UYic7cJg58iEN8pNF6CbhXyYiR16G4ihB9NsDwZpkG\"]},\"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":{\"keccak256\":\"0xfce1f35d6bbec9bb0729a7322657cec8f1f7a8a25ae6318531b08ad928f58c32\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://cb8e1467528079ac0ff70e86207f1b4d25bbb236e5830fab9991c1c76b6ca623\",\"dweb:/ipfs/QmawXHbFRrPppPAG45mHRnCWJuQMYhe534CoicW4pF43EZ\"]},\"lib/omni/contracts/core/src/libraries/XTypes.sol\":{\"keccak256\":\"0x1a670aafb257d8d16c08b03b70a9ba2e4b9f4755198f52d14f5c8e6c5dc3b96a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7513bb80e3db2dbaccb687304988f3992f7097b16967f1844acb4038e833e511\",\"dweb:/ipfs/QmYBPaJ3PWnxxKywRVeZZ14YWH7bSMcKuUCPhcfjk8PENT\"]},\"lib/omni/contracts/core/src/pkg/XApp.sol\":{\"keccak256\":\"0x05f07a7701a5c34ecac52efcb76856b995fd655d97b4360118cb8ccb2ae49a8f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://fb3d62b18f80c88d04eb0489194be62be66d09390d75b1b4f18faa5df247959a\",\"dweb:/ipfs/QmZPmYoUw4BBfVBbfeBPcRHwcnHjSf9XJa7iu7CmfjUg4T\"]},\"lib/omni/contracts/core/src/pkg/XAppBase.sol\":{\"keccak256\":\"0xf2344afc8b2e59b84582a80db601c7550b8b96b2a0c55cc10dc734ff57d0e959\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://72ebf8503ca6283b1002be4f2d9309dafe5082514820dae3268115b5501c08f3\",\"dweb:/ipfs/QmTTbmECQD7p8mBjhgwPS2mpZkW8iQvKdaBFRaunw1BxKJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "lib/omni/contracts/core/src/pkg/XApp.sol:XApp",
								"label": "omni",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IOmniPortal)175"
							},
							{
								"astId": 352,
								"contract": "lib/omni/contracts/core/src/pkg/XApp.sol:XApp",
								"label": "defaultConfLevel",
								"offset": 20,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 356,
								"contract": "lib/omni/contracts/core/src/pkg/XApp.sol:XApp",
								"label": "xmsg",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(MsgContext)245_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IOmniPortal)175": {
								"encoding": "inplace",
								"label": "contract IOmniPortal",
								"numberOfBytes": "20"
							},
							"t_struct(MsgContext)245_storage": {
								"encoding": "inplace",
								"label": "struct XTypes.MsgContext",
								"members": [
									{
										"astId": 242,
										"contract": "lib/omni/contracts/core/src/pkg/XApp.sol:XApp",
										"label": "sourceChainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 244,
										"contract": "lib/omni/contracts/core/src/pkg/XApp.sol:XApp",
										"label": "sender",
										"offset": 8,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"DefaultConfLevelSet(uint8)": {
								"notice": "Emitted when the default confirmation level is set"
							},
							"OmniPortalSet(address)": {
								"notice": "Emitted when the OmniPortal contract address is set"
							}
						},
						"kind": "user",
						"methods": {
							"defaultConfLevel()": {
								"notice": "Default confirmation level for xcalls"
							},
							"omni()": {
								"notice": "The OmniPortal contract"
							}
						},
						"notice": "Base contract for Omni cross-chain applications",
						"version": 1
					}
				}
			},
			"lib/omni/contracts/core/src/pkg/XAppBase.sol": {
				"XAppBase": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "conf",
									"type": "uint8"
								}
							],
							"name": "DefaultConfLevelSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "omni",
									"type": "address"
								}
							],
							"name": "OmniPortalSet",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "defaultConfLevel",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "omni",
							"outputs": [
								{
									"internalType": "contract IOmniPortal",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"DefaultConfLevelSet(uint8)": {
								"params": {
									"conf": "Confirmation level"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "XAppBase",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"defaultConfLevel()": "74eeb847",
							"omni()": "39acf9f1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"conf\",\"type\":\"uint8\"}],\"name\":\"DefaultConfLevelSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"omni\",\"type\":\"address\"}],\"name\":\"OmniPortalSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"defaultConfLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"omni\",\"outputs\":[{\"internalType\":\"contract IOmniPortal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"DefaultConfLevelSet(uint8)\":{\"params\":{\"conf\":\"Confirmation level\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"XAppBase\",\"version\":1},\"userdoc\":{\"events\":{\"DefaultConfLevelSet(uint8)\":{\"notice\":\"Emitted when the default confirmation level is set\"},\"OmniPortalSet(address)\":{\"notice\":\"Emitted when the OmniPortal contract address is set\"}},\"kind\":\"user\",\"methods\":{\"defaultConfLevel()\":{\"notice\":\"Default confirmation level for xcalls\"},\"omni()\":{\"notice\":\"The OmniPortal contract\"}},\"notice\":\"Shared XApp storage and logic.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/omni/contracts/core/src/pkg/XAppBase.sol\":\"XAppBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/omni/contracts/core/src/interfaces/IOmniPortal.sol\":{\"keccak256\":\"0x8010a586e7abcf478044249c104a6f01c1c6830b96f14273289e01303163342d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ac0f21a8ef960f9752f9dca194e53eb7073f66c9124ba86d827087b5e9ce6656\",\"dweb:/ipfs/QmT1UYic7cJg58iEN8pNF6CbhXyYiR16G4ihB9NsDwZpkG\"]},\"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":{\"keccak256\":\"0xfce1f35d6bbec9bb0729a7322657cec8f1f7a8a25ae6318531b08ad928f58c32\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://cb8e1467528079ac0ff70e86207f1b4d25bbb236e5830fab9991c1c76b6ca623\",\"dweb:/ipfs/QmawXHbFRrPppPAG45mHRnCWJuQMYhe534CoicW4pF43EZ\"]},\"lib/omni/contracts/core/src/libraries/XTypes.sol\":{\"keccak256\":\"0x1a670aafb257d8d16c08b03b70a9ba2e4b9f4755198f52d14f5c8e6c5dc3b96a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7513bb80e3db2dbaccb687304988f3992f7097b16967f1844acb4038e833e511\",\"dweb:/ipfs/QmYBPaJ3PWnxxKywRVeZZ14YWH7bSMcKuUCPhcfjk8PENT\"]},\"lib/omni/contracts/core/src/pkg/XAppBase.sol\":{\"keccak256\":\"0xf2344afc8b2e59b84582a80db601c7550b8b96b2a0c55cc10dc734ff57d0e959\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://72ebf8503ca6283b1002be4f2d9309dafe5082514820dae3268115b5501c08f3\",\"dweb:/ipfs/QmTTbmECQD7p8mBjhgwPS2mpZkW8iQvKdaBFRaunw1BxKJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "lib/omni/contracts/core/src/pkg/XAppBase.sol:XAppBase",
								"label": "omni",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IOmniPortal)175"
							},
							{
								"astId": 352,
								"contract": "lib/omni/contracts/core/src/pkg/XAppBase.sol:XAppBase",
								"label": "defaultConfLevel",
								"offset": 20,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 356,
								"contract": "lib/omni/contracts/core/src/pkg/XAppBase.sol:XAppBase",
								"label": "xmsg",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(MsgContext)245_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IOmniPortal)175": {
								"encoding": "inplace",
								"label": "contract IOmniPortal",
								"numberOfBytes": "20"
							},
							"t_struct(MsgContext)245_storage": {
								"encoding": "inplace",
								"label": "struct XTypes.MsgContext",
								"members": [
									{
										"astId": 242,
										"contract": "lib/omni/contracts/core/src/pkg/XAppBase.sol:XAppBase",
										"label": "sourceChainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 244,
										"contract": "lib/omni/contracts/core/src/pkg/XAppBase.sol:XAppBase",
										"label": "sender",
										"offset": 8,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"DefaultConfLevelSet(uint8)": {
								"notice": "Emitted when the default confirmation level is set"
							},
							"OmniPortalSet(address)": {
								"notice": "Emitted when the OmniPortal contract address is set"
							}
						},
						"kind": "user",
						"methods": {
							"defaultConfLevel()": {
								"notice": "Default confirmation level for xcalls"
							},
							"omni()": {
								"notice": "The OmniPortal contract"
							}
						},
						"notice": "Shared XApp storage and logic.",
						"version": 1
					}
				}
			},
			"src/wstf token launch/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/wstf token launch/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/wstf token launch/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/wstf token launch/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/wstf token launch/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/wstf token launch/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/wstf token launch/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/wstf token launch/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/wstf token launch/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/wstf token launch/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol": {
				"OmniERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "conf",
									"type": "uint8"
								}
							],
							"name": "DefaultConfLevelSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "omni",
									"type": "address"
								}
							],
							"name": "OmniPortalSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultConfLevel",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "omni",
							"outputs": [
								{
									"internalType": "contract IOmniPortal",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "receiveTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destChain",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"DefaultConfLevelSet(uint8)": {
								"params": {
									"conf": "Confirmation level"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"defaultConfLevel()": "74eeb847",
							"name()": "06fdde03",
							"omni()": "39acf9f1",
							"receiveTransfer(address,address,uint256)": "4a536a06",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transfer(uint64,address,uint256)": "d15dcd62",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"conf\",\"type\":\"uint8\"}],\"name\":\"DefaultConfLevelSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"omni\",\"type\":\"address\"}],\"name\":\"OmniPortalSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultConfLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"omni\",\"outputs\":[{\"internalType\":\"contract IOmniPortal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"receiveTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChain\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DefaultConfLevelSet(uint8)\":{\"params\":{\"conf\":\"Confirmation level\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DefaultConfLevelSet(uint8)\":{\"notice\":\"Emitted when the default confirmation level is set\"},\"OmniPortalSet(address)\":{\"notice\":\"Emitted when the OmniPortal contract address is set\"}},\"kind\":\"user\",\"methods\":{\"defaultConfLevel()\":{\"notice\":\"Default confirmation level for xcalls\"},\"omni()\":{\"notice\":\"The OmniPortal contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":\"OmniERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/omni/contracts/core/src/interfaces/IOmniPortal.sol\":{\"keccak256\":\"0x8010a586e7abcf478044249c104a6f01c1c6830b96f14273289e01303163342d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ac0f21a8ef960f9752f9dca194e53eb7073f66c9124ba86d827087b5e9ce6656\",\"dweb:/ipfs/QmT1UYic7cJg58iEN8pNF6CbhXyYiR16G4ihB9NsDwZpkG\"]},\"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":{\"keccak256\":\"0xfce1f35d6bbec9bb0729a7322657cec8f1f7a8a25ae6318531b08ad928f58c32\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://cb8e1467528079ac0ff70e86207f1b4d25bbb236e5830fab9991c1c76b6ca623\",\"dweb:/ipfs/QmawXHbFRrPppPAG45mHRnCWJuQMYhe534CoicW4pF43EZ\"]},\"lib/omni/contracts/core/src/libraries/XTypes.sol\":{\"keccak256\":\"0x1a670aafb257d8d16c08b03b70a9ba2e4b9f4755198f52d14f5c8e6c5dc3b96a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7513bb80e3db2dbaccb687304988f3992f7097b16967f1844acb4038e833e511\",\"dweb:/ipfs/QmYBPaJ3PWnxxKywRVeZZ14YWH7bSMcKuUCPhcfjk8PENT\"]},\"lib/omni/contracts/core/src/pkg/XApp.sol\":{\"keccak256\":\"0x05f07a7701a5c34ecac52efcb76856b995fd655d97b4360118cb8ccb2ae49a8f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://fb3d62b18f80c88d04eb0489194be62be66d09390d75b1b4f18faa5df247959a\",\"dweb:/ipfs/QmZPmYoUw4BBfVBbfeBPcRHwcnHjSf9XJa7iu7CmfjUg4T\"]},\"lib/omni/contracts/core/src/pkg/XAppBase.sol\":{\"keccak256\":\"0xf2344afc8b2e59b84582a80db601c7550b8b96b2a0c55cc10dc734ff57d0e959\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://72ebf8503ca6283b1002be4f2d9309dafe5082514820dae3268115b5501c08f3\",\"dweb:/ipfs/QmTTbmECQD7p8mBjhgwPS2mpZkW8iQvKdaBFRaunw1BxKJ\"]},\"src/wstf token launch/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"src/wstf token launch/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":{\"keccak256\":\"0x38a91ca8999d6653dcbbb425e554569a977f4f1cd079f6f8fe59317a9a3d9044\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65b37c0e41685fa901401fa52cf50bcec23ad81acc3c77ff86ffec2e99723fad\",\"dweb:/ipfs/QmfMjoj5GW6YWnjQM4BMbNfyJMdv4GonRmphTtTNLS6Xak\"]},\"src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"src/wstf token launch/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
								"label": "omni",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IOmniPortal)175"
							},
							{
								"astId": 352,
								"contract": "src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
								"label": "defaultConfLevel",
								"offset": 20,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 356,
								"contract": "src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
								"label": "xmsg",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(MsgContext)245_storage"
							},
							{
								"astId": 824,
								"contract": "src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 830,
								"contract": "src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 832,
								"contract": "src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 834,
								"contract": "src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
								"label": "_name",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 836,
								"contract": "src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IOmniPortal)175": {
								"encoding": "inplace",
								"label": "contract IOmniPortal",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(MsgContext)245_storage": {
								"encoding": "inplace",
								"label": "struct XTypes.MsgContext",
								"members": [
									{
										"astId": 242,
										"contract": "src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
										"label": "sourceChainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 244,
										"contract": "src/wstf token launch/contracts/token/ERC20/OmniERC20.sol:OmniERC20",
										"label": "sender",
										"offset": 8,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"DefaultConfLevelSet(uint8)": {
								"notice": "Emitted when the default confirmation level is set"
							},
							"OmniPortalSet(address)": {
								"notice": "Emitted when the OmniPortal contract address is set"
							}
						},
						"kind": "user",
						"methods": {
							"defaultConfLevel()": {
								"notice": "Default confirmation level for xcalls"
							},
							"omni()": {
								"notice": "The OmniPortal contract"
							}
						},
						"version": 1
					}
				}
			},
			"src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/wstf token launch/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/wstf token launch/contracts/token/ERC20/implementation.sol": {
				"MyOmniToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "omniPortal",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "conf",
									"type": "uint8"
								}
							],
							"name": "DefaultConfLevelSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "omni",
									"type": "address"
								}
							],
							"name": "OmniPortalSet",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "defaultConfLevel",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "omni",
							"outputs": [
								{
									"internalType": "contract IOmniPortal",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "receiveTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint64",
									"name": "destChain",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"DefaultConfLevelSet(uint8)": {
								"params": {
									"conf": "Confirmation level"
								}
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":128:984  contract MyOmniToken is OmniERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":169:472  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":316:321  name_ */\n  dup4\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":323:330  symbol_ */\n  dup4\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":332:342  omniPortal */\n  dup4\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":855:865  omniPortal */\n  dup1\n    /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":571:572  1 */\n  0x01\n    /* \"lib/omni/contracts/core/src/pkg/XApp.sol\":296:317  _setOmniPortal(omni_) */\n  tag_8\n    /* \"lib/omni/contracts/core/src/pkg/XApp.sol\":311:316  omni_ */\n  dup3\n    /* \"lib/omni/contracts/core/src/pkg/XApp.sol\":296:310  _setOmniPortal */\n  shl(0x20, tag_9)\n    /* \"lib/omni/contracts/core/src/pkg/XApp.sol\":296:317  _setOmniPortal(omni_) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"lib/omni/contracts/core/src/pkg/XApp.sol\":327:366  _setDefaultConfLevel(defaultConfLevel_) */\n  tag_10\n    /* \"lib/omni/contracts/core/src/pkg/XApp.sol\":348:365  defaultConfLevel_ */\n  dup2\n    /* \"lib/omni/contracts/core/src/pkg/XApp.sol\":327:347  _setDefaultConfLevel */\n  shl(0x20, tag_11)\n    /* \"lib/omni/contracts/core/src/pkg/XApp.sol\":327:366  _setDefaultConfLevel(defaultConfLevel_) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"lib/omni/contracts/core/src/pkg/XApp.sol\":234:373  constructor(address omni_, uint8 defaultConfLevel_) {... */\n  pop\n  pop\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":903:908  name_ */\n  dup3\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":895:900  _name */\n  0x05\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":895:908  _name = name_ */\n  swap1\n  dup2\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  pop\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":928:935  symbol_ */\n  dup2\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":918:925  _symbol */\n  0x06\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":918:935  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_15\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_15:\n  pop\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":774:942  constructor(string memory name_, string memory symbol_, address omniPortal) XApp(omniPortal, ConfLevel.Latest) {... */\n  pop\n  pop\n  pop\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":433:465  _mint(msg.sender, initialSupply) */\n  tag_17\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":439:449  msg.sender */\n  caller\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":451:464  initialSupply */\n  dup3\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":433:438  _mint */\n  shl(0x20, tag_18)\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":433:465  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":169:472  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":128:984  contract MyOmniToken is OmniERC20 {... */\n  jump(tag_19)\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3791:3976  function _setOmniPortal(address _omni) internal {... */\ntag_9:\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3874:3875  0 */\n  0x00\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3857:3876  _omni != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3857:3862  _omni */\n  dup2\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3857:3876  _omni != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3849:3899  require(_omni != address(0), \"XApp: no zero omni\") */\n  tag_21\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_22\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_21:\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3928:3933  _omni */\n  dup1\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3909:3913  omni */\n  0x00\n  dup1\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3909:3934  omni = IOmniPortal(_omni) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3949:3969  OmniPortalSet(_omni) */\n  0x79162c8d053a07e70cdc1ccc536f0440b571f8508377d2bef51094fadab98f47\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3963:3968  _omni */\n  dup2\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3949:3969  OmniPortalSet(_omni) */\n  mload(0x40)\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3791:3976  function _setOmniPortal(address _omni) internal {... */\n  pop\n  jump\t// out\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3462:3663  function _setDefaultConfLevel(uint8 conf) internal {... */\ntag_11:\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3531:3554  ConfLevel.isValid(conf) */\n  tag_27\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3549:3553  conf */\n  dup2\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3531:3548  ConfLevel.isValid */\n  shl(0x20, tag_28)\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3531:3554  ConfLevel.isValid(conf) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3523:3583  require(ConfLevel.isValid(conf), \"XApp: invalid conf level\") */\n  tag_29\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_30\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_29:\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3612:3616  conf */\n  dup1\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3593:3609  defaultConfLevel */\n  0x00\n  0x14\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3593:3616  defaultConfLevel = conf */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3631:3656  DefaultConfLevelSet(conf) */\n  0x8de08a798b4e50b4f351c1eaa91a11530043802be3ffac2df87db0c45a2e8483\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3651:3655  conf */\n  dup2\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3631:3656  DefaultConfLevelSet(conf) */\n  mload(0x40)\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":3462:3663  function _setDefaultConfLevel(uint8 conf) internal {... */\n  pop\n  jump\t// out\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":774:982  function _mint(address account, uint256 value) internal {... */\ntag_18:\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":863:864  0 */\n  0x00\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":844:865  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":844:851  account */\n  dup3\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":844:865  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":840:931  if (account == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":917:918  0 */\n  0x00\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":888:920  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_36\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":840:931  if (account == address(0)) {... */\ntag_35:\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":940:975  _update(address(0), account, value) */\n  tag_37\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":956:957  0 */\n  0x00\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":960:967  account */\n  dup4\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":969:974  value */\n  dup4\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":940:947  _update */\n  shl(0x20, tag_38)\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":940:975  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_37:\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":774:982  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":791:911  function isValid(uint8 level) internal pure returns (bool) {... */\ntag_28:\n    /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":844:848  bool */\n  0x00\n    /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":571:572  1 */\n  0x01\n    /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":867:882  level == Latest */\n  0xff\n  and\n    /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":867:872  level */\n  dup3\n    /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":867:882  level == Latest */\n  0xff\n  and\n  eq\n    /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":867:904  level == Latest || level == Finalized */\n  dup1\n  tag_40\n  jumpi\n  pop\n    /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":710:711  4 */\n  0x04\n    /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":886:904  level == Finalized */\n  0xff\n  and\n    /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":886:891  level */\n  dup3\n    /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":886:904  level == Finalized */\n  0xff\n  and\n  eq\n    /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":867:904  level == Latest || level == Finalized */\ntag_40:\n    /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":860:904  return level == Latest || level == Finalized */\n  swap1\n  pop\n    /* \"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":791:911  function isValid(uint8 level) internal pure returns (bool) {... */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3285:3991  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_38:\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3390:3391  0 */\n  0x00\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3374:3392  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3374:3378  from */\n  dup4\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3374:3392  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3370:3729  if (from == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3424:3429  value */\n  dup1\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3408:3420  _totalSupply */\n  0x04\n  0x00\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3408:3429  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_43\n  swap2\n  swap1\n  tag_44\n  jump\t// in\ntag_43:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3370:3729  if (from == address(0)) {... */\n  jump(tag_45)\ntag_42:\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3460:3479  uint256 fromBalance */\n  0x00\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3482:3491  _balances */\n  0x02\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3482:3497  _balances[from] */\n  0x00\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3492:3496  from */\n  dup6\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3482:3497  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3460:3497  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3529:3534  value */\n  dup2\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3515:3526  fromBalance */\n  dup2\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3515:3534  fromBalance < value */\n  lt\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3511:3626  if (fromBalance < value) {... */\n  iszero\n  tag_46\n  jumpi\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3586:3590  from */\n  dup4\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3592:3603  fromBalance */\n  dup2\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3605:3610  value */\n  dup4\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3561:3611  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_47\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_48\n  jump\t// in\ntag_47:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3511:3626  if (fromBalance < value) {... */\ntag_46:\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3699:3704  value */\n  dup2\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3685:3696  fromBalance */\n  dup2\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3685:3704  fromBalance - value */\n  sub\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3667:3676  _balances */\n  0x02\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3667:3682  _balances[from] */\n  0x00\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3677:3681  from */\n  dup7\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3667:3682  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3667:3704  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3446:3729  {... */\n  pop\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3370:3729  if (from == address(0)) {... */\ntag_45:\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3757:3758  0 */\n  0x00\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3743:3759  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3743:3745  to */\n  dup3\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3743:3759  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3739:3944  if (to == address(0)) {... */\n  tag_49\n  jumpi\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3819:3824  value */\n  dup1\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3803:3815  _totalSupply */\n  0x04\n  0x00\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3803:3824  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3739:3944  if (to == address(0)) {... */\n  jump(tag_50)\ntag_49:\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3914:3919  value */\n  dup1\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3897:3906  _balances */\n  0x02\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3897:3910  _balances[to] */\n  0x00\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3907:3909  to */\n  dup5\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3897:3910  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3897:3919  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3739:3944  if (to == address(0)) {... */\ntag_50:\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3974:3976  to */\n  dup2\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3959:3984  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3968:3972  from */\n  dup4\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3959:3984  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3978:3983  value */\n  dup4\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3959:3984  Transfer(from, to, value) */\n  mload(0x40)\n  tag_51\n  swap2\n  swap1\n  tag_52\n  jump\t// in\ntag_51:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3285:3991  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_53:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_54:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_55:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_56:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_57:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_58:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_59:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_60:\n    /* \"#utility.yul\":957:984   */\n  tag_110\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_58\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_111\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_112\n  tag_59\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":1030:1118   */\ntag_111:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_61:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_114\n  tag_53\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_115\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_60\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_62:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_118\n  tag_59\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":1434:1490   */\ntag_117:\n    /* \"#utility.yul\":1508:1537   */\n  tag_119\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_58\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_63:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_64:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_122\n    /* \"#utility.yul\":1885:1934   */\n  tag_123\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_62\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":1869:1935   */\n  tag_61\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_125\n  tag_57\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":2010:2122   */\ntag_124:\n    /* \"#utility.yul\":2131:2183   */\n  tag_126\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_63\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_65:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_128\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_129\n  tag_56\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":2292:2414   */\ntag_128:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_130\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_64\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2696   */\ntag_66:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2647:2689   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2640:2645   */\n  dup3\n    /* \"#utility.yul\":2636:2690   */\n  and\n    /* \"#utility.yul\":2625:2690   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2696   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2702:2798   */\ntag_67:\n    /* \"#utility.yul\":2739:2746   */\n  0x00\n    /* \"#utility.yul\":2768:2792   */\n  tag_133\n    /* \"#utility.yul\":2786:2791   */\n  dup3\n    /* \"#utility.yul\":2768:2792   */\n  tag_66\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":2757:2792   */\n  swap1\n  pop\n    /* \"#utility.yul\":2702:2798   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2804:2926   */\ntag_68:\n    /* \"#utility.yul\":2877:2901   */\n  tag_135\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2877:2901   */\n  tag_67\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":2870:2875   */\n  dup2\n    /* \"#utility.yul\":2867:2902   */\n  eq\n    /* \"#utility.yul\":2857:2920   */\n  tag_136\n  jumpi\n    /* \"#utility.yul\":2916:2917   */\n  0x00\n    /* \"#utility.yul\":2913:2914   */\n  dup1\n    /* \"#utility.yul\":2906:2918   */\n  revert\n    /* \"#utility.yul\":2857:2920   */\ntag_136:\n    /* \"#utility.yul\":2804:2926   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2932:3075   */\ntag_69:\n    /* \"#utility.yul\":2989:2994   */\n  0x00\n    /* \"#utility.yul\":3020:3026   */\n  dup2\n    /* \"#utility.yul\":3014:3027   */\n  mload\n    /* \"#utility.yul\":3005:3027   */\n  swap1\n  pop\n    /* \"#utility.yul\":3036:3069   */\n  tag_138\n    /* \"#utility.yul\":3063:3068   */\n  dup2\n    /* \"#utility.yul\":3036:3069   */\n  tag_68\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":2932:3075   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:3158   */\ntag_70:\n    /* \"#utility.yul\":3118:3125   */\n  0x00\n    /* \"#utility.yul\":3147:3152   */\n  dup2\n    /* \"#utility.yul\":3136:3152   */\n  swap1\n  pop\n    /* \"#utility.yul\":3081:3158   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3164:3286   */\ntag_71:\n    /* \"#utility.yul\":3237:3261   */\n  tag_141\n    /* \"#utility.yul\":3255:3260   */\n  dup2\n    /* \"#utility.yul\":3237:3261   */\n  tag_70\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":3230:3235   */\n  dup2\n    /* \"#utility.yul\":3227:3262   */\n  eq\n    /* \"#utility.yul\":3217:3280   */\n  tag_142\n  jumpi\n    /* \"#utility.yul\":3276:3277   */\n  0x00\n    /* \"#utility.yul\":3273:3274   */\n  dup1\n    /* \"#utility.yul\":3266:3278   */\n  revert\n    /* \"#utility.yul\":3217:3280   */\ntag_142:\n    /* \"#utility.yul\":3164:3286   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3292:3435   */\ntag_72:\n    /* \"#utility.yul\":3349:3354   */\n  0x00\n    /* \"#utility.yul\":3380:3386   */\n  dup2\n    /* \"#utility.yul\":3374:3387   */\n  mload\n    /* \"#utility.yul\":3365:3387   */\n  swap1\n  pop\n    /* \"#utility.yul\":3396:3429   */\n  tag_144\n    /* \"#utility.yul\":3423:3428   */\n  dup2\n    /* \"#utility.yul\":3396:3429   */\n  tag_71\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":3292:3435   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3441:4607   */\ntag_3:\n    /* \"#utility.yul\":3558:3564   */\n  0x00\n    /* \"#utility.yul\":3566:3572   */\n  dup1\n    /* \"#utility.yul\":3574:3580   */\n  0x00\n    /* \"#utility.yul\":3582:3588   */\n  dup1\n    /* \"#utility.yul\":3631:3634   */\n  0x80\n    /* \"#utility.yul\":3619:3628   */\n  dup6\n    /* \"#utility.yul\":3610:3617   */\n  dup8\n    /* \"#utility.yul\":3606:3629   */\n  sub\n    /* \"#utility.yul\":3602:3635   */\n  slt\n    /* \"#utility.yul\":3599:3719   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":3638:3717   */\n  tag_147\n  tag_54\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":3599:3719   */\ntag_146:\n    /* \"#utility.yul\":3779:3780   */\n  0x00\n    /* \"#utility.yul\":3768:3777   */\n  dup6\n    /* \"#utility.yul\":3764:3781   */\n  add\n    /* \"#utility.yul\":3758:3782   */\n  mload\n    /* \"#utility.yul\":3809:3827   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3801:3807   */\n  dup2\n    /* \"#utility.yul\":3798:3828   */\n  gt\n    /* \"#utility.yul\":3795:3912   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":3831:3910   */\n  tag_149\n  tag_55\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":3795:3912   */\ntag_148:\n    /* \"#utility.yul\":3936:4010   */\n  tag_150\n    /* \"#utility.yul\":4002:4009   */\n  dup8\n    /* \"#utility.yul\":3993:3999   */\n  dup3\n    /* \"#utility.yul\":3982:3991   */\n  dup9\n    /* \"#utility.yul\":3978:4000   */\n  add\n    /* \"#utility.yul\":3936:4010   */\n  tag_65\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":3926:4010   */\n  swap5\n  pop\n    /* \"#utility.yul\":3729:4020   */\n  pop\n    /* \"#utility.yul\":4080:4082   */\n  0x20\n    /* \"#utility.yul\":4069:4078   */\n  dup6\n    /* \"#utility.yul\":4065:4083   */\n  add\n    /* \"#utility.yul\":4059:4084   */\n  mload\n    /* \"#utility.yul\":4111:4129   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4103:4109   */\n  dup2\n    /* \"#utility.yul\":4100:4130   */\n  gt\n    /* \"#utility.yul\":4097:4214   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":4133:4212   */\n  tag_152\n  tag_55\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":4097:4214   */\ntag_151:\n    /* \"#utility.yul\":4238:4312   */\n  tag_153\n    /* \"#utility.yul\":4304:4311   */\n  dup8\n    /* \"#utility.yul\":4295:4301   */\n  dup3\n    /* \"#utility.yul\":4284:4293   */\n  dup9\n    /* \"#utility.yul\":4280:4302   */\n  add\n    /* \"#utility.yul\":4238:4312   */\n  tag_65\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":4228:4312   */\n  swap4\n  pop\n    /* \"#utility.yul\":4030:4322   */\n  pop\n    /* \"#utility.yul\":4361:4363   */\n  0x40\n    /* \"#utility.yul\":4387:4451   */\n  tag_154\n    /* \"#utility.yul\":4443:4450   */\n  dup8\n    /* \"#utility.yul\":4434:4440   */\n  dup3\n    /* \"#utility.yul\":4423:4432   */\n  dup9\n    /* \"#utility.yul\":4419:4441   */\n  add\n    /* \"#utility.yul\":4387:4451   */\n  tag_69\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":4377:4451   */\n  swap3\n  pop\n    /* \"#utility.yul\":4332:4461   */\n  pop\n    /* \"#utility.yul\":4500:4502   */\n  0x60\n    /* \"#utility.yul\":4526:4590   */\n  tag_155\n    /* \"#utility.yul\":4582:4589   */\n  dup8\n    /* \"#utility.yul\":4573:4579   */\n  dup3\n    /* \"#utility.yul\":4562:4571   */\n  dup9\n    /* \"#utility.yul\":4558:4580   */\n  add\n    /* \"#utility.yul\":4526:4590   */\n  tag_72\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":4516:4590   */\n  swap2\n  pop\n    /* \"#utility.yul\":4471:4600   */\n  pop\n    /* \"#utility.yul\":3441:4607   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4613:4712   */\ntag_73:\n    /* \"#utility.yul\":4665:4671   */\n  0x00\n    /* \"#utility.yul\":4699:4704   */\n  dup2\n    /* \"#utility.yul\":4693:4705   */\n  mload\n    /* \"#utility.yul\":4683:4705   */\n  swap1\n  pop\n    /* \"#utility.yul\":4613:4712   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4718:4898   */\ntag_74:\n    /* \"#utility.yul\":4766:4843   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4763:4764   */\n  0x00\n    /* \"#utility.yul\":4756:4844   */\n  mstore\n    /* \"#utility.yul\":4863:4867   */\n  0x22\n    /* \"#utility.yul\":4860:4861   */\n  0x04\n    /* \"#utility.yul\":4853:4868   */\n  mstore\n    /* \"#utility.yul\":4887:4891   */\n  0x24\n    /* \"#utility.yul\":4884:4885   */\n  0x00\n    /* \"#utility.yul\":4877:4892   */\n  revert\n    /* \"#utility.yul\":4904:5224   */\ntag_75:\n    /* \"#utility.yul\":4948:4954   */\n  0x00\n    /* \"#utility.yul\":4985:4986   */\n  0x02\n    /* \"#utility.yul\":4979:4983   */\n  dup3\n    /* \"#utility.yul\":4975:4987   */\n  div\n    /* \"#utility.yul\":4965:4987   */\n  swap1\n  pop\n    /* \"#utility.yul\":5032:5033   */\n  0x01\n    /* \"#utility.yul\":5026:5030   */\n  dup3\n    /* \"#utility.yul\":5022:5034   */\n  and\n    /* \"#utility.yul\":5053:5071   */\n  dup1\n    /* \"#utility.yul\":5043:5124   */\n  tag_159\n  jumpi\n    /* \"#utility.yul\":5109:5113   */\n  0x7f\n    /* \"#utility.yul\":5101:5107   */\n  dup3\n    /* \"#utility.yul\":5097:5114   */\n  and\n    /* \"#utility.yul\":5087:5114   */\n  swap2\n  pop\n    /* \"#utility.yul\":5043:5124   */\ntag_159:\n    /* \"#utility.yul\":5171:5173   */\n  0x20\n    /* \"#utility.yul\":5163:5169   */\n  dup3\n    /* \"#utility.yul\":5160:5174   */\n  lt\n    /* \"#utility.yul\":5140:5158   */\n  dup2\n    /* \"#utility.yul\":5137:5175   */\n  sub\n    /* \"#utility.yul\":5134:5218   */\n  tag_160\n  jumpi\n    /* \"#utility.yul\":5190:5208   */\n  tag_161\n  tag_74\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":5134:5218   */\ntag_160:\n    /* \"#utility.yul\":4955:5224   */\n  pop\n    /* \"#utility.yul\":4904:5224   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5230:5371   */\ntag_76:\n    /* \"#utility.yul\":5279:5283   */\n  0x00\n    /* \"#utility.yul\":5302:5305   */\n  dup2\n    /* \"#utility.yul\":5294:5305   */\n  swap1\n  pop\n    /* \"#utility.yul\":5325:5328   */\n  dup2\n    /* \"#utility.yul\":5322:5323   */\n  0x00\n    /* \"#utility.yul\":5315:5329   */\n  mstore\n    /* \"#utility.yul\":5359:5363   */\n  0x20\n    /* \"#utility.yul\":5356:5357   */\n  0x00\n    /* \"#utility.yul\":5346:5364   */\n  keccak256\n    /* \"#utility.yul\":5338:5364   */\n  swap1\n  pop\n    /* \"#utility.yul\":5230:5371   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5377:5470   */\ntag_77:\n    /* \"#utility.yul\":5414:5420   */\n  0x00\n    /* \"#utility.yul\":5461:5463   */\n  0x20\n    /* \"#utility.yul\":5456:5458   */\n  0x1f\n    /* \"#utility.yul\":5449:5454   */\n  dup4\n    /* \"#utility.yul\":5445:5459   */\n  add\n    /* \"#utility.yul\":5441:5464   */\n  div\n    /* \"#utility.yul\":5431:5464   */\n  swap1\n  pop\n    /* \"#utility.yul\":5377:5470   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5476:5583   */\ntag_78:\n    /* \"#utility.yul\":5520:5528   */\n  0x00\n    /* \"#utility.yul\":5570:5575   */\n  dup3\n    /* \"#utility.yul\":5564:5568   */\n  dup3\n    /* \"#utility.yul\":5560:5576   */\n  shl\n    /* \"#utility.yul\":5539:5576   */\n  swap1\n  pop\n    /* \"#utility.yul\":5476:5583   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5589:5982   */\ntag_79:\n    /* \"#utility.yul\":5658:5664   */\n  0x00\n    /* \"#utility.yul\":5708:5709   */\n  0x08\n    /* \"#utility.yul\":5696:5706   */\n  dup4\n    /* \"#utility.yul\":5692:5710   */\n  mul\n    /* \"#utility.yul\":5731:5828   */\n  tag_166\n    /* \"#utility.yul\":5761:5827   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5750:5759   */\n  dup3\n    /* \"#utility.yul\":5731:5828   */\n  tag_78\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":5849:5888   */\n  tag_167\n    /* \"#utility.yul\":5879:5887   */\n  dup7\n    /* \"#utility.yul\":5868:5877   */\n  dup4\n    /* \"#utility.yul\":5849:5888   */\n  tag_78\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":5837:5888   */\n  swap6\n  pop\n    /* \"#utility.yul\":5921:5925   */\n  dup1\n    /* \"#utility.yul\":5917:5926   */\n  not\n    /* \"#utility.yul\":5910:5915   */\n  dup5\n    /* \"#utility.yul\":5906:5927   */\n  and\n    /* \"#utility.yul\":5897:5927   */\n  swap4\n  pop\n    /* \"#utility.yul\":5970:5974   */\n  dup1\n    /* \"#utility.yul\":5960:5968   */\n  dup7\n    /* \"#utility.yul\":5956:5975   */\n  and\n    /* \"#utility.yul\":5949:5954   */\n  dup5\n    /* \"#utility.yul\":5946:5976   */\n  or\n    /* \"#utility.yul\":5936:5976   */\n  swap3\n  pop\n    /* \"#utility.yul\":5665:5982   */\n  pop\n  pop\n    /* \"#utility.yul\":5589:5982   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5988:6048   */\ntag_80:\n    /* \"#utility.yul\":6016:6019   */\n  0x00\n    /* \"#utility.yul\":6037:6042   */\n  dup2\n    /* \"#utility.yul\":6030:6042   */\n  swap1\n  pop\n    /* \"#utility.yul\":5988:6048   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6054:6196   */\ntag_81:\n    /* \"#utility.yul\":6104:6113   */\n  0x00\n    /* \"#utility.yul\":6137:6190   */\n  tag_170\n    /* \"#utility.yul\":6155:6189   */\n  tag_171\n    /* \"#utility.yul\":6164:6188   */\n  tag_172\n    /* \"#utility.yul\":6182:6187   */\n  dup5\n    /* \"#utility.yul\":6164:6188   */\n  tag_70\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":6155:6189   */\n  tag_80\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":6137:6190   */\n  tag_70\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":6124:6190   */\n  swap1\n  pop\n    /* \"#utility.yul\":6054:6196   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6202:6277   */\ntag_82:\n    /* \"#utility.yul\":6245:6248   */\n  0x00\n    /* \"#utility.yul\":6266:6271   */\n  dup2\n    /* \"#utility.yul\":6259:6271   */\n  swap1\n  pop\n    /* \"#utility.yul\":6202:6277   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6283:6552   */\ntag_83:\n    /* \"#utility.yul\":6393:6432   */\n  tag_175\n    /* \"#utility.yul\":6424:6431   */\n  dup4\n    /* \"#utility.yul\":6393:6432   */\n  tag_81\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":6454:6545   */\n  tag_176\n    /* \"#utility.yul\":6503:6544   */\n  tag_177\n    /* \"#utility.yul\":6527:6543   */\n  dup3\n    /* \"#utility.yul\":6503:6544   */\n  tag_82\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6495:6501   */\n  dup5\n    /* \"#utility.yul\":6488:6492   */\n  dup5\n    /* \"#utility.yul\":6482:6493   */\n  sload\n    /* \"#utility.yul\":6454:6545   */\n  tag_79\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":6448:6452   */\n  dup3\n    /* \"#utility.yul\":6441:6546   */\n  sstore\n    /* \"#utility.yul\":6359:6552   */\n  pop\n    /* \"#utility.yul\":6283:6552   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6558:6631   */\ntag_84:\n    /* \"#utility.yul\":6603:6606   */\n  0x00\n    /* \"#utility.yul\":6558:6631   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6637:6826   */\ntag_85:\n    /* \"#utility.yul\":6714:6746   */\n  tag_180\n  tag_84\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":6755:6820   */\n  tag_181\n    /* \"#utility.yul\":6813:6819   */\n  dup2\n    /* \"#utility.yul\":6805:6811   */\n  dup5\n    /* \"#utility.yul\":6799:6803   */\n  dup5\n    /* \"#utility.yul\":6755:6820   */\n  tag_83\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":6690:6826   */\n  pop\n    /* \"#utility.yul\":6637:6826   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6832:7018   */\ntag_86:\n    /* \"#utility.yul\":6892:7012   */\ntag_183:\n    /* \"#utility.yul\":6909:6912   */\n  dup2\n    /* \"#utility.yul\":6902:6907   */\n  dup2\n    /* \"#utility.yul\":6899:6913   */\n  lt\n    /* \"#utility.yul\":6892:7012   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":6963:7002   */\n  tag_186\n    /* \"#utility.yul\":7000:7001   */\n  0x00\n    /* \"#utility.yul\":6993:6998   */\n  dup3\n    /* \"#utility.yul\":6963:7002   */\n  tag_85\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":6936:6937   */\n  0x01\n    /* \"#utility.yul\":6929:6934   */\n  dup2\n    /* \"#utility.yul\":6925:6938   */\n  add\n    /* \"#utility.yul\":6916:6938   */\n  swap1\n  pop\n    /* \"#utility.yul\":6892:7012   */\n  jump(tag_183)\ntag_185:\n    /* \"#utility.yul\":6832:7018   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7024:7567   */\ntag_87:\n    /* \"#utility.yul\":7125:7127   */\n  0x1f\n    /* \"#utility.yul\":7120:7123   */\n  dup3\n    /* \"#utility.yul\":7117:7128   */\n  gt\n    /* \"#utility.yul\":7114:7560   */\n  iszero\n  tag_188\n  jumpi\n    /* \"#utility.yul\":7159:7197   */\n  tag_189\n    /* \"#utility.yul\":7191:7196   */\n  dup2\n    /* \"#utility.yul\":7159:7197   */\n  tag_76\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":7243:7272   */\n  tag_190\n    /* \"#utility.yul\":7261:7271   */\n  dup5\n    /* \"#utility.yul\":7243:7272   */\n  tag_77\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":7233:7241   */\n  dup2\n    /* \"#utility.yul\":7229:7273   */\n  add\n    /* \"#utility.yul\":7426:7428   */\n  0x20\n    /* \"#utility.yul\":7414:7424   */\n  dup6\n    /* \"#utility.yul\":7411:7429   */\n  lt\n    /* \"#utility.yul\":7408:7457   */\n  iszero\n  tag_191\n  jumpi\n    /* \"#utility.yul\":7447:7455   */\n  dup2\n    /* \"#utility.yul\":7432:7455   */\n  swap1\n  pop\n    /* \"#utility.yul\":7408:7457   */\ntag_191:\n    /* \"#utility.yul\":7470:7550   */\n  tag_192\n    /* \"#utility.yul\":7526:7548   */\n  tag_193\n    /* \"#utility.yul\":7544:7547   */\n  dup6\n    /* \"#utility.yul\":7526:7548   */\n  tag_77\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":7516:7524   */\n  dup4\n    /* \"#utility.yul\":7512:7549   */\n  add\n    /* \"#utility.yul\":7499:7510   */\n  dup3\n    /* \"#utility.yul\":7470:7550   */\n  tag_86\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":7129:7560   */\n  pop\n  pop\n    /* \"#utility.yul\":7114:7560   */\ntag_188:\n    /* \"#utility.yul\":7024:7567   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7573:7690   */\ntag_88:\n    /* \"#utility.yul\":7627:7635   */\n  0x00\n    /* \"#utility.yul\":7677:7682   */\n  dup3\n    /* \"#utility.yul\":7671:7675   */\n  dup3\n    /* \"#utility.yul\":7667:7683   */\n  shr\n    /* \"#utility.yul\":7646:7683   */\n  swap1\n  pop\n    /* \"#utility.yul\":7573:7690   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7696:7865   */\ntag_89:\n    /* \"#utility.yul\":7740:7746   */\n  0x00\n    /* \"#utility.yul\":7773:7824   */\n  tag_196\n    /* \"#utility.yul\":7821:7822   */\n  0x00\n    /* \"#utility.yul\":7817:7823   */\n  not\n    /* \"#utility.yul\":7809:7814   */\n  dup5\n    /* \"#utility.yul\":7806:7807   */\n  0x08\n    /* \"#utility.yul\":7802:7815   */\n  mul\n    /* \"#utility.yul\":7773:7824   */\n  tag_88\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":7769:7825   */\n  not\n    /* \"#utility.yul\":7854:7858   */\n  dup1\n    /* \"#utility.yul\":7848:7852   */\n  dup4\n    /* \"#utility.yul\":7844:7859   */\n  and\n    /* \"#utility.yul\":7834:7859   */\n  swap2\n  pop\n    /* \"#utility.yul\":7747:7865   */\n  pop\n    /* \"#utility.yul\":7696:7865   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7870:8165   */\ntag_90:\n    /* \"#utility.yul\":7946:7950   */\n  0x00\n    /* \"#utility.yul\":8092:8121   */\n  tag_198\n    /* \"#utility.yul\":8117:8120   */\n  dup4\n    /* \"#utility.yul\":8111:8115   */\n  dup4\n    /* \"#utility.yul\":8092:8121   */\n  tag_89\n  jump\t// in\ntag_198:\n    /* \"#utility.yul\":8084:8121   */\n  swap2\n  pop\n    /* \"#utility.yul\":8154:8157   */\n  dup3\n    /* \"#utility.yul\":8151:8152   */\n  0x02\n    /* \"#utility.yul\":8147:8158   */\n  mul\n    /* \"#utility.yul\":8141:8145   */\n  dup3\n    /* \"#utility.yul\":8138:8159   */\n  or\n    /* \"#utility.yul\":8130:8159   */\n  swap1\n  pop\n    /* \"#utility.yul\":7870:8165   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8170:9565   */\ntag_14:\n    /* \"#utility.yul\":8287:8324   */\n  tag_200\n    /* \"#utility.yul\":8320:8323   */\n  dup3\n    /* \"#utility.yul\":8287:8324   */\n  tag_73\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":8389:8407   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":8381:8387   */\n  dup2\n    /* \"#utility.yul\":8378:8408   */\n  gt\n    /* \"#utility.yul\":8375:8431   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":8411:8429   */\n  tag_202\n  tag_59\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":8375:8431   */\ntag_201:\n    /* \"#utility.yul\":8455:8493   */\n  tag_203\n    /* \"#utility.yul\":8487:8491   */\n  dup3\n    /* \"#utility.yul\":8481:8492   */\n  sload\n    /* \"#utility.yul\":8455:8493   */\n  tag_75\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":8540:8607   */\n  tag_204\n    /* \"#utility.yul\":8600:8606   */\n  dup3\n    /* \"#utility.yul\":8592:8598   */\n  dup3\n    /* \"#utility.yul\":8586:8590   */\n  dup6\n    /* \"#utility.yul\":8540:8607   */\n  tag_87\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":8634:8635   */\n  0x00\n    /* \"#utility.yul\":8658:8662   */\n  0x20\n    /* \"#utility.yul\":8645:8662   */\n  swap1\n  pop\n    /* \"#utility.yul\":8690:8692   */\n  0x1f\n    /* \"#utility.yul\":8682:8688   */\n  dup4\n    /* \"#utility.yul\":8679:8693   */\n  gt\n    /* \"#utility.yul\":8707:8708   */\n  0x01\n    /* \"#utility.yul\":8702:9320   */\n  dup2\n  eq\n  tag_206\n  jumpi\n    /* \"#utility.yul\":9364:9365   */\n  0x00\n    /* \"#utility.yul\":9381:9387   */\n  dup5\n    /* \"#utility.yul\":9378:9455   */\n  iszero\n  tag_207\n  jumpi\n    /* \"#utility.yul\":9430:9439   */\n  dup3\n    /* \"#utility.yul\":9425:9428   */\n  dup8\n    /* \"#utility.yul\":9421:9440   */\n  add\n    /* \"#utility.yul\":9415:9441   */\n  mload\n    /* \"#utility.yul\":9406:9441   */\n  swap1\n  pop\n    /* \"#utility.yul\":9378:9455   */\ntag_207:\n    /* \"#utility.yul\":9481:9548   */\n  tag_208\n    /* \"#utility.yul\":9541:9547   */\n  dup6\n    /* \"#utility.yul\":9534:9539   */\n  dup3\n    /* \"#utility.yul\":9481:9548   */\n  tag_90\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":9475:9479   */\n  dup7\n    /* \"#utility.yul\":9468:9549   */\n  sstore\n    /* \"#utility.yul\":9337:9559   */\n  pop\n    /* \"#utility.yul\":8672:9559   */\n  jump(tag_205)\n    /* \"#utility.yul\":8702:9320   */\ntag_206:\n    /* \"#utility.yul\":8754:8758   */\n  0x1f\n    /* \"#utility.yul\":8750:8759   */\n  not\n    /* \"#utility.yul\":8742:8748   */\n  dup5\n    /* \"#utility.yul\":8738:8760   */\n  and\n    /* \"#utility.yul\":8788:8825   */\n  tag_209\n    /* \"#utility.yul\":8820:8824   */\n  dup7\n    /* \"#utility.yul\":8788:8825   */\n  tag_76\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":8847:8848   */\n  0x00\n    /* \"#utility.yul\":8861:9069   */\ntag_210:\n    /* \"#utility.yul\":8875:8882   */\n  dup3\n    /* \"#utility.yul\":8872:8873   */\n  dup2\n    /* \"#utility.yul\":8869:8883   */\n  lt\n    /* \"#utility.yul\":8861:9069   */\n  iszero\n  tag_212\n  jumpi\n    /* \"#utility.yul\":8954:8963   */\n  dup5\n    /* \"#utility.yul\":8949:8952   */\n  dup10\n    /* \"#utility.yul\":8945:8964   */\n  add\n    /* \"#utility.yul\":8939:8965   */\n  mload\n    /* \"#utility.yul\":8931:8937   */\n  dup3\n    /* \"#utility.yul\":8924:8966   */\n  sstore\n    /* \"#utility.yul\":9005:9006   */\n  0x01\n    /* \"#utility.yul\":8997:9003   */\n  dup3\n    /* \"#utility.yul\":8993:9007   */\n  add\n    /* \"#utility.yul\":8983:9007   */\n  swap2\n  pop\n    /* \"#utility.yul\":9052:9054   */\n  0x20\n    /* \"#utility.yul\":9041:9050   */\n  dup6\n    /* \"#utility.yul\":9037:9055   */\n  add\n    /* \"#utility.yul\":9024:9055   */\n  swap5\n  pop\n    /* \"#utility.yul\":8898:8902   */\n  0x20\n    /* \"#utility.yul\":8895:8896   */\n  dup2\n    /* \"#utility.yul\":8891:8903   */\n  add\n    /* \"#utility.yul\":8886:8903   */\n  swap1\n  pop\n    /* \"#utility.yul\":8861:9069   */\n  jump(tag_210)\ntag_212:\n    /* \"#utility.yul\":9097:9103   */\n  dup7\n    /* \"#utility.yul\":9088:9095   */\n  dup4\n    /* \"#utility.yul\":9085:9104   */\n  lt\n    /* \"#utility.yul\":9082:9261   */\n  iszero\n  tag_213\n  jumpi\n    /* \"#utility.yul\":9155:9164   */\n  dup5\n    /* \"#utility.yul\":9150:9153   */\n  dup10\n    /* \"#utility.yul\":9146:9165   */\n  add\n    /* \"#utility.yul\":9140:9166   */\n  mload\n    /* \"#utility.yul\":9198:9246   */\n  tag_214\n    /* \"#utility.yul\":9240:9244   */\n  0x1f\n    /* \"#utility.yul\":9232:9238   */\n  dup10\n    /* \"#utility.yul\":9228:9245   */\n  and\n    /* \"#utility.yul\":9217:9226   */\n  dup3\n    /* \"#utility.yul\":9198:9246   */\n  tag_89\n  jump\t// in\ntag_214:\n    /* \"#utility.yul\":9190:9196   */\n  dup4\n    /* \"#utility.yul\":9183:9247   */\n  sstore\n    /* \"#utility.yul\":9105:9261   */\n  pop\n    /* \"#utility.yul\":9082:9261   */\ntag_213:\n    /* \"#utility.yul\":9307:9308   */\n  0x01\n    /* \"#utility.yul\":9303:9304   */\n  0x02\n    /* \"#utility.yul\":9295:9301   */\n  dup9\n    /* \"#utility.yul\":9291:9305   */\n  mul\n    /* \"#utility.yul\":9287:9309   */\n  add\n    /* \"#utility.yul\":9281:9285   */\n  dup9\n    /* \"#utility.yul\":9274:9310   */\n  sstore\n    /* \"#utility.yul\":8709:9320   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8672:9559   */\ntag_205:\n  pop\n    /* \"#utility.yul\":8262:9565   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8170:9565   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9571:9740   */\ntag_91:\n    /* \"#utility.yul\":9655:9666   */\n  0x00\n    /* \"#utility.yul\":9689:9695   */\n  dup3\n    /* \"#utility.yul\":9684:9687   */\n  dup3\n    /* \"#utility.yul\":9677:9696   */\n  mstore\n    /* \"#utility.yul\":9729:9733   */\n  0x20\n    /* \"#utility.yul\":9724:9727   */\n  dup3\n    /* \"#utility.yul\":9720:9734   */\n  add\n    /* \"#utility.yul\":9705:9734   */\n  swap1\n  pop\n    /* \"#utility.yul\":9571:9740   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9746:9914   */\ntag_92:\n    /* \"#utility.yul\":9886:9906   */\n  0x584170703a206e6f207a65726f206f6d6e690000000000000000000000000000\n    /* \"#utility.yul\":9882:9883   */\n  0x00\n    /* \"#utility.yul\":9874:9880   */\n  dup3\n    /* \"#utility.yul\":9870:9884   */\n  add\n    /* \"#utility.yul\":9863:9907   */\n  mstore\n    /* \"#utility.yul\":9746:9914   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9920:10286   */\ntag_93:\n    /* \"#utility.yul\":10062:10065   */\n  0x00\n    /* \"#utility.yul\":10083:10150   */\n  tag_218\n    /* \"#utility.yul\":10147:10149   */\n  0x12\n    /* \"#utility.yul\":10142:10145   */\n  dup4\n    /* \"#utility.yul\":10083:10150   */\n  tag_91\n  jump\t// in\ntag_218:\n    /* \"#utility.yul\":10076:10150   */\n  swap2\n  pop\n    /* \"#utility.yul\":10159:10252   */\n  tag_219\n    /* \"#utility.yul\":10248:10251   */\n  dup3\n    /* \"#utility.yul\":10159:10252   */\n  tag_92\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":10277:10279   */\n  0x20\n    /* \"#utility.yul\":10272:10275   */\n  dup3\n    /* \"#utility.yul\":10268:10280   */\n  add\n    /* \"#utility.yul\":10261:10280   */\n  swap1\n  pop\n    /* \"#utility.yul\":9920:10286   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10292:10711   */\ntag_23:\n    /* \"#utility.yul\":10458:10462   */\n  0x00\n    /* \"#utility.yul\":10496:10498   */\n  0x20\n    /* \"#utility.yul\":10485:10494   */\n  dup3\n    /* \"#utility.yul\":10481:10499   */\n  add\n    /* \"#utility.yul\":10473:10499   */\n  swap1\n  pop\n    /* \"#utility.yul\":10545:10554   */\n  dup2\n    /* \"#utility.yul\":10539:10543   */\n  dup2\n    /* \"#utility.yul\":10535:10555   */\n  sub\n    /* \"#utility.yul\":10531:10532   */\n  0x00\n    /* \"#utility.yul\":10520:10529   */\n  dup4\n    /* \"#utility.yul\":10516:10533   */\n  add\n    /* \"#utility.yul\":10509:10556   */\n  mstore\n    /* \"#utility.yul\":10573:10704   */\n  tag_221\n    /* \"#utility.yul\":10699:10703   */\n  dup2\n    /* \"#utility.yul\":10573:10704   */\n  tag_93\n  jump\t// in\ntag_221:\n    /* \"#utility.yul\":10565:10704   */\n  swap1\n  pop\n    /* \"#utility.yul\":10292:10711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10717:10835   */\ntag_94:\n    /* \"#utility.yul\":10804:10828   */\n  tag_223\n    /* \"#utility.yul\":10822:10827   */\n  dup2\n    /* \"#utility.yul\":10804:10828   */\n  tag_67\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":10799:10802   */\n  dup3\n    /* \"#utility.yul\":10792:10829   */\n  mstore\n    /* \"#utility.yul\":10717:10835   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10841:11063   */\ntag_25:\n    /* \"#utility.yul\":10934:10938   */\n  0x00\n    /* \"#utility.yul\":10972:10974   */\n  0x20\n    /* \"#utility.yul\":10961:10970   */\n  dup3\n    /* \"#utility.yul\":10957:10975   */\n  add\n    /* \"#utility.yul\":10949:10975   */\n  swap1\n  pop\n    /* \"#utility.yul\":10985:11056   */\n  tag_225\n    /* \"#utility.yul\":11053:11054   */\n  0x00\n    /* \"#utility.yul\":11042:11051   */\n  dup4\n    /* \"#utility.yul\":11038:11055   */\n  add\n    /* \"#utility.yul\":11029:11035   */\n  dup5\n    /* \"#utility.yul\":10985:11056   */\n  tag_94\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":10841:11063   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11069:11243   */\ntag_95:\n    /* \"#utility.yul\":11209:11235   */\n  0x584170703a20696e76616c696420636f6e66206c6576656c0000000000000000\n    /* \"#utility.yul\":11205:11206   */\n  0x00\n    /* \"#utility.yul\":11197:11203   */\n  dup3\n    /* \"#utility.yul\":11193:11207   */\n  add\n    /* \"#utility.yul\":11186:11236   */\n  mstore\n    /* \"#utility.yul\":11069:11243   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11249:11615   */\ntag_96:\n    /* \"#utility.yul\":11391:11394   */\n  0x00\n    /* \"#utility.yul\":11412:11479   */\n  tag_228\n    /* \"#utility.yul\":11476:11478   */\n  0x18\n    /* \"#utility.yul\":11471:11474   */\n  dup4\n    /* \"#utility.yul\":11412:11479   */\n  tag_91\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":11405:11479   */\n  swap2\n  pop\n    /* \"#utility.yul\":11488:11581   */\n  tag_229\n    /* \"#utility.yul\":11577:11580   */\n  dup3\n    /* \"#utility.yul\":11488:11581   */\n  tag_95\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":11606:11608   */\n  0x20\n    /* \"#utility.yul\":11601:11604   */\n  dup3\n    /* \"#utility.yul\":11597:11609   */\n  add\n    /* \"#utility.yul\":11590:11609   */\n  swap1\n  pop\n    /* \"#utility.yul\":11249:11615   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11621:12040   */\ntag_31:\n    /* \"#utility.yul\":11787:11791   */\n  0x00\n    /* \"#utility.yul\":11825:11827   */\n  0x20\n    /* \"#utility.yul\":11814:11823   */\n  dup3\n    /* \"#utility.yul\":11810:11828   */\n  add\n    /* \"#utility.yul\":11802:11828   */\n  swap1\n  pop\n    /* \"#utility.yul\":11874:11883   */\n  dup2\n    /* \"#utility.yul\":11868:11872   */\n  dup2\n    /* \"#utility.yul\":11864:11884   */\n  sub\n    /* \"#utility.yul\":11860:11861   */\n  0x00\n    /* \"#utility.yul\":11849:11858   */\n  dup4\n    /* \"#utility.yul\":11845:11862   */\n  add\n    /* \"#utility.yul\":11838:11885   */\n  mstore\n    /* \"#utility.yul\":11902:12033   */\n  tag_231\n    /* \"#utility.yul\":12028:12032   */\n  dup2\n    /* \"#utility.yul\":11902:12033   */\n  tag_96\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":11894:12033   */\n  swap1\n  pop\n    /* \"#utility.yul\":11621:12040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12046:12132   */\ntag_97:\n    /* \"#utility.yul\":12081:12088   */\n  0x00\n    /* \"#utility.yul\":12121:12125   */\n  0xff\n    /* \"#utility.yul\":12114:12119   */\n  dup3\n    /* \"#utility.yul\":12110:12126   */\n  and\n    /* \"#utility.yul\":12099:12126   */\n  swap1\n  pop\n    /* \"#utility.yul\":12046:12132   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12138:12250   */\ntag_98:\n    /* \"#utility.yul\":12221:12243   */\n  tag_234\n    /* \"#utility.yul\":12237:12242   */\n  dup2\n    /* \"#utility.yul\":12221:12243   */\n  tag_97\n  jump\t// in\ntag_234:\n    /* \"#utility.yul\":12216:12219   */\n  dup3\n    /* \"#utility.yul\":12209:12244   */\n  mstore\n    /* \"#utility.yul\":12138:12250   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12256:12470   */\ntag_33:\n    /* \"#utility.yul\":12345:12349   */\n  0x00\n    /* \"#utility.yul\":12383:12385   */\n  0x20\n    /* \"#utility.yul\":12372:12381   */\n  dup3\n    /* \"#utility.yul\":12368:12386   */\n  add\n    /* \"#utility.yul\":12360:12386   */\n  swap1\n  pop\n    /* \"#utility.yul\":12396:12463   */\n  tag_236\n    /* \"#utility.yul\":12460:12461   */\n  0x00\n    /* \"#utility.yul\":12449:12458   */\n  dup4\n    /* \"#utility.yul\":12445:12462   */\n  add\n    /* \"#utility.yul\":12436:12442   */\n  dup5\n    /* \"#utility.yul\":12396:12463   */\n  tag_98\n  jump\t// in\ntag_236:\n    /* \"#utility.yul\":12256:12470   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12476:12656   */\ntag_99:\n    /* \"#utility.yul\":12524:12601   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":12521:12522   */\n  0x00\n    /* \"#utility.yul\":12514:12602   */\n  mstore\n    /* \"#utility.yul\":12621:12625   */\n  0x11\n    /* \"#utility.yul\":12618:12619   */\n  0x04\n    /* \"#utility.yul\":12611:12626   */\n  mstore\n    /* \"#utility.yul\":12645:12649   */\n  0x24\n    /* \"#utility.yul\":12642:12643   */\n  0x00\n    /* \"#utility.yul\":12635:12650   */\n  revert\n    /* \"#utility.yul\":12662:12853   */\ntag_44:\n    /* \"#utility.yul\":12702:12705   */\n  0x00\n    /* \"#utility.yul\":12721:12741   */\n  tag_239\n    /* \"#utility.yul\":12739:12740   */\n  dup3\n    /* \"#utility.yul\":12721:12741   */\n  tag_70\n  jump\t// in\ntag_239:\n    /* \"#utility.yul\":12716:12741   */\n  swap2\n  pop\n    /* \"#utility.yul\":12755:12775   */\n  tag_240\n    /* \"#utility.yul\":12773:12774   */\n  dup4\n    /* \"#utility.yul\":12755:12775   */\n  tag_70\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":12750:12775   */\n  swap3\n  pop\n    /* \"#utility.yul\":12798:12799   */\n  dup3\n    /* \"#utility.yul\":12795:12796   */\n  dup3\n    /* \"#utility.yul\":12791:12800   */\n  add\n    /* \"#utility.yul\":12784:12800   */\n  swap1\n  pop\n    /* \"#utility.yul\":12819:12822   */\n  dup1\n    /* \"#utility.yul\":12816:12817   */\n  dup3\n    /* \"#utility.yul\":12813:12823   */\n  gt\n    /* \"#utility.yul\":12810:12846   */\n  iszero\n  tag_241\n  jumpi\n    /* \"#utility.yul\":12826:12844   */\n  tag_242\n  tag_99\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":12810:12846   */\ntag_241:\n    /* \"#utility.yul\":12662:12853   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12859:12977   */\ntag_100:\n    /* \"#utility.yul\":12946:12970   */\n  tag_244\n    /* \"#utility.yul\":12964:12969   */\n  dup2\n    /* \"#utility.yul\":12946:12970   */\n  tag_70\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":12941:12944   */\n  dup3\n    /* \"#utility.yul\":12934:12971   */\n  mstore\n    /* \"#utility.yul\":12859:12977   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12983:13425   */\ntag_48:\n    /* \"#utility.yul\":13132:13136   */\n  0x00\n    /* \"#utility.yul\":13170:13172   */\n  0x60\n    /* \"#utility.yul\":13159:13168   */\n  dup3\n    /* \"#utility.yul\":13155:13173   */\n  add\n    /* \"#utility.yul\":13147:13173   */\n  swap1\n  pop\n    /* \"#utility.yul\":13183:13254   */\n  tag_246\n    /* \"#utility.yul\":13251:13252   */\n  0x00\n    /* \"#utility.yul\":13240:13249   */\n  dup4\n    /* \"#utility.yul\":13236:13253   */\n  add\n    /* \"#utility.yul\":13227:13233   */\n  dup7\n    /* \"#utility.yul\":13183:13254   */\n  tag_94\n  jump\t// in\ntag_246:\n    /* \"#utility.yul\":13264:13336   */\n  tag_247\n    /* \"#utility.yul\":13332:13334   */\n  0x20\n    /* \"#utility.yul\":13321:13330   */\n  dup4\n    /* \"#utility.yul\":13317:13335   */\n  add\n    /* \"#utility.yul\":13308:13314   */\n  dup6\n    /* \"#utility.yul\":13264:13336   */\n  tag_100\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":13346:13418   */\n  tag_248\n    /* \"#utility.yul\":13414:13416   */\n  0x40\n    /* \"#utility.yul\":13403:13412   */\n  dup4\n    /* \"#utility.yul\":13399:13417   */\n  add\n    /* \"#utility.yul\":13390:13396   */\n  dup5\n    /* \"#utility.yul\":13346:13418   */\n  tag_100\n  jump\t// in\ntag_248:\n    /* \"#utility.yul\":12983:13425   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13431:13653   */\ntag_52:\n    /* \"#utility.yul\":13524:13528   */\n  0x00\n    /* \"#utility.yul\":13562:13564   */\n  0x20\n    /* \"#utility.yul\":13551:13560   */\n  dup3\n    /* \"#utility.yul\":13547:13565   */\n  add\n    /* \"#utility.yul\":13539:13565   */\n  swap1\n  pop\n    /* \"#utility.yul\":13575:13646   */\n  tag_250\n    /* \"#utility.yul\":13643:13644   */\n  0x00\n    /* \"#utility.yul\":13632:13641   */\n  dup4\n    /* \"#utility.yul\":13628:13645   */\n  add\n    /* \"#utility.yul\":13619:13625   */\n  dup5\n    /* \"#utility.yul\":13575:13646   */\n  tag_100\n  jump\t// in\ntag_250:\n    /* \"#utility.yul\":13431:13653   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":128:984  contract MyOmniToken is OmniERC20 {... */\ntag_19:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":128:984  contract MyOmniToken is OmniERC20 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4a536a06\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd15dcd62\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x4a536a06\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x74eeb847\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x23b872dd\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x39acf9f1\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":948:1046  function name() public view virtual override returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1656:1851  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1257:1363  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1857:2110  function transferFrom(address from, address to, uint256 value) public virtual override returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1160:1251  function decimals() public view virtual override returns (uint8) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":680:703  IOmniPortal public omni */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":577:738  function mint(address account, uint256 value) public {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2759:2963  function receiveTransfer(address from, address to, uint256 value) external xrecv {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1369:1494  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      pop\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":779:808  uint8 public defaultConfLevel */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1052:1154  function symbol() public view virtual override returns (string memory) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2117:2304  function transfer(address to, uint256 value) public virtual override returns (bool) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2309:2753  function transfer(uint64 destChain, address to, uint256 value) external payable {... */\n    tag_14:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1501:1650  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":948:1046  function name() public view virtual override returns (string memory) {... */\n    tag_21:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1002:1015  string memory */\n      0x60\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1034:1039  _name */\n      0x05\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1027:1039  return _name */\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_91\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":948:1046  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1656:1851  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1738:1742  bool */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1754:1767  address owner */\n      dup1\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1770:1782  _msgSender() */\n      tag_97\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1770:1780  _msgSender */\n      tag_98\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1770:1782  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1754:1782  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1792:1823  _approve(owner, spender, value) */\n      tag_99\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1801:1806  owner */\n      dup2\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1808:1815  spender */\n      dup6\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1817:1822  value */\n      dup6\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1792:1800  _approve */\n      tag_100\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1792:1823  _approve(owner, spender, value) */\n      jump\t// in\n    tag_99:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1840:1844  true */\n      0x01\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1833:1844  return true */\n      swap2\n      pop\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1656:1851  function approve(address spender, uint256 value) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1257:1363  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_33:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1318:1325  uint256 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1344:1356  _totalSupply */\n      sload(0x04)\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1337:1356  return _totalSupply */\n      swap1\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1257:1363  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1857:2110  function transferFrom(address from, address to, uint256 value) public virtual override returns (bool) {... */\n    tag_40:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1953:1957  bool */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1969:1984  address spender */\n      dup1\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1987:1999  _msgSender() */\n      tag_103\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1987:1997  _msgSender */\n      tag_98\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1987:1999  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1969:1999  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2009:2046  _spendAllowance(from, spender, value) */\n      tag_104\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2025:2029  from */\n      dup6\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2031:2038  spender */\n      dup3\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2040:2045  value */\n      dup6\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2009:2024  _spendAllowance */\n      tag_105\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2009:2046  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_104:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2056:2082  _transfer(from, to, value) */\n      tag_106\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2066:2070  from */\n      dup6\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2072:2074  to */\n      dup6\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2076:2081  value */\n      dup6\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2056:2065  _transfer */\n      tag_107\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2056:2082  _transfer(from, to, value) */\n      jump\t// in\n    tag_106:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2099:2103  true */\n      0x01\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2092:2103  return true */\n      swap2\n      pop\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1857:2110  function transferFrom(address from, address to, uint256 value) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1160:1251  function decimals() public view virtual override returns (uint8) {... */\n    tag_44:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1218:1223  uint8 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1242:1244  18 */\n      0x12\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1235:1244  return 18 */\n      swap1\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1160:1251  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":680:703  IOmniPortal public omni */\n    tag_49:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":577:738  function mint(address account, uint256 value) public {... */\n    tag_55:\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":710:731  _mint(account, value) */\n      tag_110\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":716:723  account */\n      dup3\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":725:730  value */\n      dup3\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":710:715  _mint */\n      tag_111\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":710:731  _mint(account, value) */\n      jump\t// in\n    tag_110:\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":577:738  function mint(address account, uint256 value) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2759:2963  function receiveTransfer(address from, address to, uint256 value) external xrecv {... */\n    tag_59:\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1058:1062  omni */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1058:1067  omni.xmsg */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2f32700e\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1058:1069  omni.xmsg() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1051:1055  xmsg */\n      0x01\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1051:1069  xmsg = omni.xmsg() */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x08)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2859:2868  isXCall() */\n      tag_118\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2859:2866  isXCall */\n      tag_119\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2859:2868  isXCall() */\n      jump\t// in\n    tag_118:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2851:2921  require(isXCall(), \"OmniERC20: Only callable via cross-chain message\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2931:2955  _update(from, to, value) */\n      tag_123\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2939:2943  from */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2945:2947  to */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2949:2954  value */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2931:2938  _update */\n      tag_124\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2931:2955  _update(from, to, value) */\n      jump\t// in\n    tag_123:\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1097:1101  xmsg */\n      0x01\n      0x00\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1090:1101  delete xmsg */\n      dup1\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      0x00\n      dup3\n      add\n      exp(0x0100, 0x08)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2759:2963  function receiveTransfer(address from, address to, uint256 value) external xrecv {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1369:1494  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_64:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1443:1450  uint256 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1469:1478  _balances */\n      0x02\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1469:1487  _balances[account] */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1479:1486  account */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1469:1487  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1462:1487  return _balances[account] */\n      swap1\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1369:1494  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":779:808  uint8 public defaultConfLevel */\n    tag_68:\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1052:1154  function symbol() public view virtual override returns (string memory) {... */\n    tag_72:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1108:1121  string memory */\n      0x60\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1140:1147  _symbol */\n      0x06\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1133:1147  return _symbol */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_91\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_91\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1052:1154  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2117:2304  function transfer(address to, uint256 value) public virtual override returns (bool) {... */\n    tag_77:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2195:2199  bool */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2211:2224  address owner */\n      dup1\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2227:2239  _msgSender() */\n      tag_133\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2227:2237  _msgSender */\n      tag_98\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2227:2239  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2211:2239  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2249:2276  _transfer(owner, to, value) */\n      tag_134\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2259:2264  owner */\n      dup2\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2266:2268  to */\n      dup6\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2270:2275  value */\n      dup6\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2249:2258  _transfer */\n      tag_107\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2249:2276  _transfer(owner, to, value) */\n      jump\t// in\n    tag_134:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2293:2297  true */\n      0x01\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2286:2297  return true */\n      swap2\n      pop\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2117:2304  function transfer(address to, uint256 value) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2309:2753  function transfer(uint64 destChain, address to, uint256 value) external payable {... */\n    tag_82:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2400:2412  address from */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2415:2427  _msgSender() */\n      tag_136\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2415:2425  _msgSender */\n      tag_98\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2415:2427  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2400:2427  address from = _msgSender() */\n      swap1\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2437:2474  _transfer(from, address(this), value) */\n      tag_137\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2447:2451  from */\n      dup2\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2461:2465  this */\n      address\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2468:2473  value */\n      dup5\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2437:2446  _transfer */\n      tag_107\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2437:2474  _transfer(from, address(this), value) */\n      jump\t// in\n    tag_137:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2521:2538  bytes memory data */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2592:2596  this */\n      address\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2599:2601  to */\n      dup5\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2603:2608  value */\n      dup5\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2541:2610  abi.encodeCall(OmniERC20.receiveTransfer, (address(this), to, value)) */\n      add(0x24, mload(0x40))\n      tag_138\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      shl(0xe0, 0x4a536a06)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2521:2610  bytes memory data = abi.encodeCall(OmniERC20.receiveTransfer, (address(this), to, value)) */\n      swap1\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2620:2631  uint256 fee */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2634:2679  xcall(destChain, address(this), data, 150000) */\n      tag_140\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2640:2649  destChain */\n      dup7\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2659:2663  this */\n      address\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2666:2670  data */\n      dup5\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2672:2678  150000 */\n      0x0249f0\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2634:2639  xcall */\n      tag_141\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2634:2679  xcall(destChain, address(this), data, 150000) */\n      jump\t// in\n    tag_140:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2620:2679  uint256 fee = xcall(destChain, address(this), data, 150000) */\n      swap1\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2710:2713  fee */\n      dup1\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2697:2706  msg.value */\n      callvalue\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2697:2713  msg.value >= fee */\n      lt\n      iszero\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2689:2745  require(msg.value >= fee, \"OmniERC20: Insufficient fee\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2389:2753  {... */\n      pop\n      pop\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2309:2753  function transfer(uint64 destChain, address to, uint256 value) external payable {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1501:1650  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_87:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1590:1597  uint256 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1616:1627  _allowances */\n      0x03\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1616:1634  _allowances[owner] */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1628:1633  owner */\n      dup5\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1616:1634  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1616:1643  _allowances[owner][spender] */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1635:1642  spender */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1616:1643  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1609:1643  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":1501:1650  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/wstf token launch/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_98:\n        /* \"src/wstf token launch/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"src/wstf token launch/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"src/wstf token launch/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"src/wstf token launch/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3998:4126  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_100:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4082:4119  _approve(owner, spender, value, true) */\n      tag_148\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4091:4096  owner */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4098:4105  spender */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4107:4112  value */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4114:4118  true */\n      0x01\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4082:4090  _approve */\n      tag_149\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4082:4119  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_148:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3998:4126  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4570:5047  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_105:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4669:4693  uint256 currentAllowance */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4696:4721  allowance(owner, spender) */\n      tag_151\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4706:4711  owner */\n      dup5\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4713:4720  spender */\n      dup5\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4696:4705  allowance */\n      tag_87\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4696:4721  allowance(owner, spender) */\n      jump\t// in\n    tag_151:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4669:4721  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4755:4772  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4735:4751  currentAllowance */\n      dup2\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4735:4772  currentAllowance != type(uint256).max */\n      eq\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4731:5041  if (currentAllowance != type(uint256).max) {... */\n      tag_152\n      jumpi\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4811:4816  value */\n      dup2\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4792:4808  currentAllowance */\n      dup2\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4792:4816  currentAllowance < value */\n      lt\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4788:4918  if (currentAllowance < value) {... */\n      iszero\n      tag_153\n      jumpi\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4870:4877  spender */\n      dup3\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4879:4895  currentAllowance */\n      dup2\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4897:4902  value */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4843:4903  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4788:4918  if (currentAllowance < value) {... */\n    tag_153:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4959:5016  _approve(owner, spender, currentAllowance - value, false) */\n      tag_156\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4968:4973  owner */\n      dup5\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4975:4982  spender */\n      dup5\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":5003:5008  value */\n      dup5\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4984:5000  currentAllowance */\n      dup5\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4984:5008  currentAllowance - value */\n      sub\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":5010:5015  false */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4959:4967  _approve */\n      tag_149\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4959:5016  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_156:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4731:5041  if (currentAllowance != type(uint256).max) {... */\n    tag_152:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4659:5047  {... */\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4570:5047  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2969:3278  function _transfer(address from, address to, uint256 value) internal virtual {... */\n    tag_107:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3076:3077  0 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3060:3078  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3060:3064  from */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3060:3078  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3056:3142  if (from == address(0)) {... */\n      tag_158\n      jumpi\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3128:3129  0 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3101:3131  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3056:3142  if (from == address(0)) {... */\n    tag_158:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3169:3170  0 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3155:3171  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3155:3157  to */\n      dup3\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3155:3171  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3151:3237  if (to == address(0)) {... */\n      tag_161\n      jumpi\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3223:3224  0 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3194:3226  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3151:3237  if (to == address(0)) {... */\n    tag_161:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3247:3271  _update(from, to, value) */\n      tag_163\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3255:3259  from */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3261:3263  to */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3265:3270  value */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3247:3254  _update */\n      tag_124\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3247:3271  _update(from, to, value) */\n      jump\t// in\n    tag_163:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":2969:3278  function _transfer(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":774:982  function _mint(address account, uint256 value) internal {... */\n    tag_111:\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":863:864  0 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":844:865  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":844:851  account */\n      dup3\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":844:865  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":840:931  if (account == address(0)) {... */\n      tag_165\n      jumpi\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":917:918  0 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":888:920  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":840:931  if (account == address(0)) {... */\n    tag_165:\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":940:975  _update(address(0), account, value) */\n      tag_167\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":956:957  0 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":960:967  account */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":969:974  value */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":940:947  _update */\n      tag_124\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":940:975  _update(address(0), account, value) */\n      jump\t// in\n    tag_167:\n        /* \"src/wstf token launch/contracts/token/ERC20/implementation.sol\":774:982  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1209:1326  function isXCall() internal view returns (bool) {... */\n    tag_119:\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1251:1255  bool */\n      0x00\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1274:1278  omni */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1274:1286  omni.isXCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x55e2448e\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1274:1288  omni.isXCall() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1274:1319  omni.isXCall() && msg.sender == address(omni) */\n      dup1\n      iszero\n      tag_173\n      jumpi\n      pop\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1314:1318  omni */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1292:1319  msg.sender == address(omni) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1292:1302  msg.sender */\n      caller\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1292:1319  msg.sender == address(omni) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1274:1319  omni.isXCall() && msg.sender == address(omni) */\n    tag_173:\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1267:1319  return omni.isXCall() && msg.sender == address(omni) */\n      swap1\n      pop\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":1209:1326  function isXCall() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3285:3991  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_124:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3390:3391  0 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3374:3392  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3374:3378  from */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3374:3392  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3370:3729  if (from == address(0)) {... */\n      tag_175\n      jumpi\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3424:3429  value */\n      dup1\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3408:3420  _totalSupply */\n      0x04\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3408:3429  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3370:3729  if (from == address(0)) {... */\n      jump(tag_178)\n    tag_175:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3460:3479  uint256 fromBalance */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3482:3491  _balances */\n      0x02\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3482:3497  _balances[from] */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3492:3496  from */\n      dup6\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3482:3497  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3460:3497  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3529:3534  value */\n      dup2\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3515:3526  fromBalance */\n      dup2\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3515:3534  fromBalance < value */\n      lt\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3511:3626  if (fromBalance < value) {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3586:3590  from */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3592:3603  fromBalance */\n      dup2\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3605:3610  value */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3561:3611  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3511:3626  if (fromBalance < value) {... */\n    tag_179:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3699:3704  value */\n      dup2\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3685:3696  fromBalance */\n      dup2\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3685:3704  fromBalance - value */\n      sub\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3667:3676  _balances */\n      0x02\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3667:3682  _balances[from] */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3677:3681  from */\n      dup7\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3667:3682  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3667:3704  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3446:3729  {... */\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3370:3729  if (from == address(0)) {... */\n    tag_178:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3757:3758  0 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3743:3759  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3743:3745  to */\n      dup3\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3743:3759  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3739:3944  if (to == address(0)) {... */\n      tag_181\n      jumpi\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3819:3824  value */\n      dup1\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3803:3815  _totalSupply */\n      0x04\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3803:3824  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3739:3944  if (to == address(0)) {... */\n      jump(tag_182)\n    tag_181:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3914:3919  value */\n      dup1\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3897:3906  _balances */\n      0x02\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3897:3910  _balances[to] */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3907:3909  to */\n      dup5\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3897:3910  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3897:3919  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3739:3944  if (to == address(0)) {... */\n    tag_182:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3974:3976  to */\n      dup2\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3959:3984  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3968:3972  from */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3959:3984  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3978:3983  value */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3959:3984  Transfer(from, to, value) */\n      mload(0x40)\n      tag_183\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":3285:3991  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2156:2537  function xcall(uint64 destChainId, address to, bytes memory data, uint64 gasLimit) internal returns (uint256) {... */\n    tag_141:\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2257:2264  uint256 */\n      0x00\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2276:2287  uint256 fee */\n      dup1\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2290:2294  omni */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2290:2301  omni.feeFor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8dd9523c\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2302:2313  destChainId */\n      dup8\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2315:2319  data */\n      dup7\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2321:2329  gasLimit */\n      dup7\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2290:2330  omni.feeFor(destChainId, data, gasLimit) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2276:2330  uint256 fee = omni.feeFor(destChainId, data, gasLimit) */\n      swap1\n      pop\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2373:2376  fee */\n      dup1\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2348:2369  address(this).balance */\n      selfbalance\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2348:2376  address(this).balance >= fee */\n      lt\n      iszero\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2348:2396  address(this).balance >= fee || msg.value >= fee */\n      dup1\n      tag_191\n      jumpi\n      pop\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2393:2396  fee */\n      dup1\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2380:2389  msg.value */\n      callvalue\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2380:2396  msg.value >= fee */\n      lt\n      iszero\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2348:2396  address(this).balance >= fee || msg.value >= fee */\n    tag_191:\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2340:2425  require(address(this).balance >= fee || msg.value >= fee, \"XApp: insufficient funds\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2435:2439  omni */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2435:2445  omni.xcall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc21dda4f\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2454:2457  fee */\n      dup3\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2460:2471  destChainId */\n      dup9\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2473:2489  defaultConfLevel */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2491:2493  to */\n      dup10\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2495:2499  data */\n      dup10\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2501:2509  gasLimit */\n      dup10\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2435:2510  omni.xcall{ value: fee }(destChainId, defaultConfLevel, to, data, gasLimit) */\n      mload(0x40)\n      dup8\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_199\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_199:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2527:2530  fee */\n      dup1\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2520:2530  return fee */\n      swap2\n      pop\n      pop\n        /* \"lib/omni/contracts/core/src/pkg/XAppBase.sol\":2156:2537  function xcall(uint64 destChainId, address to, bytes memory data, uint64 gasLimit) internal returns (uint256) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4132:4564  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_149:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4261:4262  0 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4244:4263  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4244:4249  owner */\n      dup5\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4244:4263  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4240:4329  if (owner == address(0)) {... */\n      tag_201\n      jumpi\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4315:4316  0 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4286:4318  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4240:4329  if (owner == address(0)) {... */\n    tag_201:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4361:4362  0 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4342:4363  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4342:4349  spender */\n      dup4\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4342:4363  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4338:4428  if (spender == address(0)) {... */\n      tag_203\n      jumpi\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4414:4415  0 */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4386:4417  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4338:4428  if (spender == address(0)) {... */\n    tag_203:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4467:4472  value */\n      dup2\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4437:4448  _allowances */\n      0x03\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4437:4455  _allowances[owner] */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4449:4454  owner */\n      dup7\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4437:4455  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4437:4464  _allowances[owner][spender] */\n      0x00\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4456:4463  spender */\n      dup6\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4437:4464  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4437:4472  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4486:4495  emitEvent */\n      dup1\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4482:4558  if (emitEvent) {... */\n      iszero\n      tag_205\n      jumpi\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4532:4539  spender */\n      dup3\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4516:4547  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4525:4530  owner */\n      dup5\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4516:4547  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4541:4546  value */\n      dup5\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4516:4547  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4482:4558  if (emitEvent) {... */\n    tag_205:\n        /* \"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":4132:4564  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_207:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_208:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_209:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_210:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_211:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_265\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_207\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":711:782   */\n      tag_266\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_208\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_267\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_209\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":881:910   */\n      tag_268\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_210\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_23:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_270\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_211\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_212:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_213:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_215:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_216:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_276\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_215\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_217:\n        /* \"#utility.yul\":1876:1900   */\n      tag_278\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_216\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_279\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_279:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_218:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_281\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_217\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_219:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_220:\n        /* \"#utility.yul\":2232:2256   */\n      tag_284\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_219\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_285:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_221:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_287\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_220\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_27:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_290\n      tag_213\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2525:2644   */\n    tag_289:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_291\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_218\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_292\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_221\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_222:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_223:\n        /* \"#utility.yul\":3089:3110   */\n      tag_295\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_222\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_30:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_297\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_223\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_224:\n        /* \"#utility.yul\":3426:3450   */\n      tag_299\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_219\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_35:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_301\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_224\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_39:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_304\n      tag_213\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3801:3920   */\n    tag_303:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_305\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_218\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_306\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_218\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_307\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_221\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_225:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_226:\n        /* \"#utility.yul\":4491:4513   */\n      tag_310\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_225\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_46:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_312\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_226\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:4806   */\n    tag_227:\n        /* \"#utility.yul\":4774:4777   */\n      0x00\n        /* \"#utility.yul\":4795:4800   */\n      dup2\n        /* \"#utility.yul\":4788:4800   */\n      swap1\n      pop\n        /* \"#utility.yul\":4746:4806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4812:4954   */\n    tag_228:\n        /* \"#utility.yul\":4862:4871   */\n      0x00\n        /* \"#utility.yul\":4895:4948   */\n      tag_315\n        /* \"#utility.yul\":4913:4947   */\n      tag_316\n        /* \"#utility.yul\":4922:4946   */\n      tag_317\n        /* \"#utility.yul\":4940:4945   */\n      dup5\n        /* \"#utility.yul\":4922:4946   */\n      tag_215\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4913:4947   */\n      tag_227\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":4895:4948   */\n      tag_215\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4882:4948   */\n      swap1\n      pop\n        /* \"#utility.yul\":4812:4954   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4960:5086   */\n    tag_229:\n        /* \"#utility.yul\":5010:5019   */\n      0x00\n        /* \"#utility.yul\":5043:5080   */\n      tag_319\n        /* \"#utility.yul\":5074:5079   */\n      dup3\n        /* \"#utility.yul\":5043:5080   */\n      tag_228\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5030:5080   */\n      swap1\n      pop\n        /* \"#utility.yul\":4960:5086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5092:5237   */\n    tag_230:\n        /* \"#utility.yul\":5161:5170   */\n      0x00\n        /* \"#utility.yul\":5194:5231   */\n      tag_321\n        /* \"#utility.yul\":5225:5230   */\n      dup3\n        /* \"#utility.yul\":5194:5231   */\n      tag_229\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5181:5231   */\n      swap1\n      pop\n        /* \"#utility.yul\":5092:5237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5243:5412   */\n    tag_231:\n        /* \"#utility.yul\":5349:5405   */\n      tag_323\n        /* \"#utility.yul\":5399:5404   */\n      dup2\n        /* \"#utility.yul\":5349:5405   */\n      tag_230\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5344:5347   */\n      dup3\n        /* \"#utility.yul\":5337:5406   */\n      mstore\n        /* \"#utility.yul\":5243:5412   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5418:5678   */\n    tag_51:\n        /* \"#utility.yul\":5530:5534   */\n      0x00\n        /* \"#utility.yul\":5568:5570   */\n      0x20\n        /* \"#utility.yul\":5557:5566   */\n      dup3\n        /* \"#utility.yul\":5553:5571   */\n      add\n        /* \"#utility.yul\":5545:5571   */\n      swap1\n      pop\n        /* \"#utility.yul\":5581:5671   */\n      tag_325\n        /* \"#utility.yul\":5668:5669   */\n      0x00\n        /* \"#utility.yul\":5657:5666   */\n      dup4\n        /* \"#utility.yul\":5653:5670   */\n      add\n        /* \"#utility.yul\":5644:5650   */\n      dup5\n        /* \"#utility.yul\":5581:5671   */\n      tag_231\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5418:5678   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5684:6013   */\n    tag_63:\n        /* \"#utility.yul\":5743:5749   */\n      0x00\n        /* \"#utility.yul\":5792:5794   */\n      0x20\n        /* \"#utility.yul\":5780:5789   */\n      dup3\n        /* \"#utility.yul\":5771:5778   */\n      dup5\n        /* \"#utility.yul\":5767:5790   */\n      sub\n        /* \"#utility.yul\":5763:5795   */\n      slt\n        /* \"#utility.yul\":5760:5879   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":5798:5877   */\n      tag_328\n      tag_213\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5760:5879   */\n    tag_327:\n        /* \"#utility.yul\":5918:5919   */\n      0x00\n        /* \"#utility.yul\":5943:5996   */\n      tag_329\n        /* \"#utility.yul\":5988:5995   */\n      dup5\n        /* \"#utility.yul\":5979:5985   */\n      dup3\n        /* \"#utility.yul\":5968:5977   */\n      dup6\n        /* \"#utility.yul\":5964:5986   */\n      add\n        /* \"#utility.yul\":5943:5996   */\n      tag_218\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5933:5996   */\n      swap2\n      pop\n        /* \"#utility.yul\":5889:6006   */\n      pop\n        /* \"#utility.yul\":5684:6013   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6019:6120   */\n    tag_232:\n        /* \"#utility.yul\":6055:6062   */\n      0x00\n        /* \"#utility.yul\":6095:6113   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6088:6093   */\n      dup3\n        /* \"#utility.yul\":6084:6114   */\n      and\n        /* \"#utility.yul\":6073:6114   */\n      swap1\n      pop\n        /* \"#utility.yul\":6019:6120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6126:6246   */\n    tag_233:\n        /* \"#utility.yul\":6198:6221   */\n      tag_332\n        /* \"#utility.yul\":6215:6220   */\n      dup2\n        /* \"#utility.yul\":6198:6221   */\n      tag_232\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6191:6196   */\n      dup2\n        /* \"#utility.yul\":6188:6222   */\n      eq\n        /* \"#utility.yul\":6178:6240   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":6236:6237   */\n      0x00\n        /* \"#utility.yul\":6233:6234   */\n      dup1\n        /* \"#utility.yul\":6226:6238   */\n      revert\n        /* \"#utility.yul\":6178:6240   */\n    tag_333:\n        /* \"#utility.yul\":6126:6246   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6252:6389   */\n    tag_234:\n        /* \"#utility.yul\":6297:6302   */\n      0x00\n        /* \"#utility.yul\":6335:6341   */\n      dup2\n        /* \"#utility.yul\":6322:6342   */\n      calldataload\n        /* \"#utility.yul\":6313:6342   */\n      swap1\n      pop\n        /* \"#utility.yul\":6351:6383   */\n      tag_335\n        /* \"#utility.yul\":6377:6382   */\n      dup2\n        /* \"#utility.yul\":6351:6383   */\n      tag_233\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6252:6389   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6395:7012   */\n    tag_81:\n        /* \"#utility.yul\":6471:6477   */\n      0x00\n        /* \"#utility.yul\":6479:6485   */\n      dup1\n        /* \"#utility.yul\":6487:6493   */\n      0x00\n        /* \"#utility.yul\":6536:6538   */\n      0x60\n        /* \"#utility.yul\":6524:6533   */\n      dup5\n        /* \"#utility.yul\":6515:6522   */\n      dup7\n        /* \"#utility.yul\":6511:6534   */\n      sub\n        /* \"#utility.yul\":6507:6539   */\n      slt\n        /* \"#utility.yul\":6504:6623   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":6542:6621   */\n      tag_338\n      tag_213\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":6504:6623   */\n    tag_337:\n        /* \"#utility.yul\":6662:6663   */\n      0x00\n        /* \"#utility.yul\":6687:6739   */\n      tag_339\n        /* \"#utility.yul\":6731:6738   */\n      dup7\n        /* \"#utility.yul\":6722:6728   */\n      dup3\n        /* \"#utility.yul\":6711:6720   */\n      dup8\n        /* \"#utility.yul\":6707:6729   */\n      add\n        /* \"#utility.yul\":6687:6739   */\n      tag_234\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":6677:6739   */\n      swap4\n      pop\n        /* \"#utility.yul\":6633:6749   */\n      pop\n        /* \"#utility.yul\":6788:6790   */\n      0x20\n        /* \"#utility.yul\":6814:6867   */\n      tag_340\n        /* \"#utility.yul\":6859:6866   */\n      dup7\n        /* \"#utility.yul\":6850:6856   */\n      dup3\n        /* \"#utility.yul\":6839:6848   */\n      dup8\n        /* \"#utility.yul\":6835:6857   */\n      add\n        /* \"#utility.yul\":6814:6867   */\n      tag_218\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6804:6867   */\n      swap3\n      pop\n        /* \"#utility.yul\":6759:6877   */\n      pop\n        /* \"#utility.yul\":6916:6918   */\n      0x40\n        /* \"#utility.yul\":6942:6995   */\n      tag_341\n        /* \"#utility.yul\":6987:6994   */\n      dup7\n        /* \"#utility.yul\":6978:6984   */\n      dup3\n        /* \"#utility.yul\":6967:6976   */\n      dup8\n        /* \"#utility.yul\":6963:6985   */\n      add\n        /* \"#utility.yul\":6942:6995   */\n      tag_221\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":6932:6995   */\n      swap2\n      pop\n        /* \"#utility.yul\":6887:7005   */\n      pop\n        /* \"#utility.yul\":6395:7012   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7018:7492   */\n    tag_86:\n        /* \"#utility.yul\":7086:7092   */\n      0x00\n        /* \"#utility.yul\":7094:7100   */\n      dup1\n        /* \"#utility.yul\":7143:7145   */\n      0x40\n        /* \"#utility.yul\":7131:7140   */\n      dup4\n        /* \"#utility.yul\":7122:7129   */\n      dup6\n        /* \"#utility.yul\":7118:7141   */\n      sub\n        /* \"#utility.yul\":7114:7146   */\n      slt\n        /* \"#utility.yul\":7111:7230   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":7149:7228   */\n      tag_344\n      tag_213\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":7111:7230   */\n    tag_343:\n        /* \"#utility.yul\":7269:7270   */\n      0x00\n        /* \"#utility.yul\":7294:7347   */\n      tag_345\n        /* \"#utility.yul\":7339:7346   */\n      dup6\n        /* \"#utility.yul\":7330:7336   */\n      dup3\n        /* \"#utility.yul\":7319:7328   */\n      dup7\n        /* \"#utility.yul\":7315:7337   */\n      add\n        /* \"#utility.yul\":7294:7347   */\n      tag_218\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":7284:7347   */\n      swap3\n      pop\n        /* \"#utility.yul\":7240:7357   */\n      pop\n        /* \"#utility.yul\":7396:7398   */\n      0x20\n        /* \"#utility.yul\":7422:7475   */\n      tag_346\n        /* \"#utility.yul\":7467:7474   */\n      dup6\n        /* \"#utility.yul\":7458:7464   */\n      dup3\n        /* \"#utility.yul\":7447:7456   */\n      dup7\n        /* \"#utility.yul\":7443:7465   */\n      add\n        /* \"#utility.yul\":7422:7475   */\n      tag_218\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":7412:7475   */\n      swap2\n      pop\n        /* \"#utility.yul\":7367:7485   */\n      pop\n        /* \"#utility.yul\":7018:7492   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7498:7678   */\n    tag_235:\n        /* \"#utility.yul\":7546:7623   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7543:7544   */\n      0x00\n        /* \"#utility.yul\":7536:7624   */\n      mstore\n        /* \"#utility.yul\":7643:7647   */\n      0x22\n        /* \"#utility.yul\":7640:7641   */\n      0x04\n        /* \"#utility.yul\":7633:7648   */\n      mstore\n        /* \"#utility.yul\":7667:7671   */\n      0x24\n        /* \"#utility.yul\":7664:7665   */\n      0x00\n        /* \"#utility.yul\":7657:7672   */\n      revert\n        /* \"#utility.yul\":7684:8004   */\n    tag_91:\n        /* \"#utility.yul\":7728:7734   */\n      0x00\n        /* \"#utility.yul\":7765:7766   */\n      0x02\n        /* \"#utility.yul\":7759:7763   */\n      dup3\n        /* \"#utility.yul\":7755:7767   */\n      div\n        /* \"#utility.yul\":7745:7767   */\n      swap1\n      pop\n        /* \"#utility.yul\":7812:7813   */\n      0x01\n        /* \"#utility.yul\":7806:7810   */\n      dup3\n        /* \"#utility.yul\":7802:7814   */\n      and\n        /* \"#utility.yul\":7833:7851   */\n      dup1\n        /* \"#utility.yul\":7823:7904   */\n      tag_349\n      jumpi\n        /* \"#utility.yul\":7889:7893   */\n      0x7f\n        /* \"#utility.yul\":7881:7887   */\n      dup3\n        /* \"#utility.yul\":7877:7894   */\n      and\n        /* \"#utility.yul\":7867:7894   */\n      swap2\n      pop\n        /* \"#utility.yul\":7823:7904   */\n    tag_349:\n        /* \"#utility.yul\":7951:7953   */\n      0x20\n        /* \"#utility.yul\":7943:7949   */\n      dup3\n        /* \"#utility.yul\":7940:7954   */\n      lt\n        /* \"#utility.yul\":7920:7938   */\n      dup2\n        /* \"#utility.yul\":7917:7955   */\n      sub\n        /* \"#utility.yul\":7914:7998   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":7970:7988   */\n      tag_351\n      tag_235\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":7914:7998   */\n    tag_350:\n        /* \"#utility.yul\":7735:8004   */\n      pop\n        /* \"#utility.yul\":7684:8004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8010:8127   */\n    tag_236:\n        /* \"#utility.yul\":8119:8120   */\n      0x00\n        /* \"#utility.yul\":8116:8117   */\n      dup1\n        /* \"#utility.yul\":8109:8121   */\n      revert\n        /* \"#utility.yul\":8133:8313   */\n    tag_237:\n        /* \"#utility.yul\":8181:8258   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8178:8179   */\n      0x00\n        /* \"#utility.yul\":8171:8259   */\n      mstore\n        /* \"#utility.yul\":8278:8282   */\n      0x41\n        /* \"#utility.yul\":8275:8276   */\n      0x04\n        /* \"#utility.yul\":8268:8283   */\n      mstore\n        /* \"#utility.yul\":8302:8306   */\n      0x24\n        /* \"#utility.yul\":8299:8300   */\n      0x00\n        /* \"#utility.yul\":8292:8307   */\n      revert\n        /* \"#utility.yul\":8319:8600   */\n    tag_238:\n        /* \"#utility.yul\":8402:8429   */\n      tag_355\n        /* \"#utility.yul\":8424:8428   */\n      dup3\n        /* \"#utility.yul\":8402:8429   */\n      tag_210\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":8394:8400   */\n      dup2\n        /* \"#utility.yul\":8390:8430   */\n      add\n        /* \"#utility.yul\":8532:8538   */\n      dup2\n        /* \"#utility.yul\":8520:8530   */\n      dup2\n        /* \"#utility.yul\":8517:8539   */\n      lt\n        /* \"#utility.yul\":8496:8514   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8484:8494   */\n      dup3\n        /* \"#utility.yul\":8481:8515   */\n      gt\n        /* \"#utility.yul\":8478:8540   */\n      or\n        /* \"#utility.yul\":8475:8563   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":8543:8561   */\n      tag_357\n      tag_237\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":8475:8563   */\n    tag_356:\n        /* \"#utility.yul\":8583:8593   */\n      dup1\n        /* \"#utility.yul\":8579:8581   */\n      0x40\n        /* \"#utility.yul\":8572:8594   */\n      mstore\n        /* \"#utility.yul\":8362:8600   */\n      pop\n        /* \"#utility.yul\":8319:8600   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8606:8735   */\n    tag_239:\n        /* \"#utility.yul\":8640:8646   */\n      0x00\n        /* \"#utility.yul\":8667:8687   */\n      tag_359\n      tag_212\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":8657:8687   */\n      swap1\n      pop\n        /* \"#utility.yul\":8696:8729   */\n      tag_360\n        /* \"#utility.yul\":8724:8728   */\n      dup3\n        /* \"#utility.yul\":8716:8722   */\n      dup3\n        /* \"#utility.yul\":8696:8729   */\n      tag_238\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":8606:8735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8864:9005   */\n    tag_241:\n        /* \"#utility.yul\":8920:8925   */\n      0x00\n        /* \"#utility.yul\":8951:8957   */\n      dup2\n        /* \"#utility.yul\":8945:8958   */\n      mload\n        /* \"#utility.yul\":8936:8958   */\n      swap1\n      pop\n        /* \"#utility.yul\":8967:8999   */\n      tag_363\n        /* \"#utility.yul\":8993:8998   */\n      dup2\n        /* \"#utility.yul\":8967:8999   */\n      tag_233\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":8864:9005   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9011:9154   */\n    tag_242:\n        /* \"#utility.yul\":9068:9073   */\n      0x00\n        /* \"#utility.yul\":9099:9105   */\n      dup2\n        /* \"#utility.yul\":9093:9106   */\n      mload\n        /* \"#utility.yul\":9084:9106   */\n      swap1\n      pop\n        /* \"#utility.yul\":9115:9148   */\n      tag_365\n        /* \"#utility.yul\":9142:9147   */\n      dup2\n        /* \"#utility.yul\":9115:9148   */\n      tag_217\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":9011:9154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9192:9811   */\n    tag_243:\n        /* \"#utility.yul\":9279:9284   */\n      0x00\n        /* \"#utility.yul\":9323:9327   */\n      0x40\n        /* \"#utility.yul\":9311:9320   */\n      dup3\n        /* \"#utility.yul\":9306:9309   */\n      dup5\n        /* \"#utility.yul\":9302:9321   */\n      sub\n        /* \"#utility.yul\":9298:9328   */\n      slt\n        /* \"#utility.yul\":9295:9412   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":9331:9410   */\n      tag_368\n      tag_236\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":9295:9412   */\n    tag_367:\n        /* \"#utility.yul\":9430:9451   */\n      tag_369\n        /* \"#utility.yul\":9446:9450   */\n      0x40\n        /* \"#utility.yul\":9430:9451   */\n      tag_239\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":9421:9451   */\n      swap1\n      pop\n        /* \"#utility.yul\":9519:9520   */\n      0x00\n        /* \"#utility.yul\":9559:9618   */\n      tag_370\n        /* \"#utility.yul\":9614:9617   */\n      dup5\n        /* \"#utility.yul\":9605:9611   */\n      dup3\n        /* \"#utility.yul\":9594:9603   */\n      dup6\n        /* \"#utility.yul\":9590:9612   */\n      add\n        /* \"#utility.yul\":9559:9618   */\n      tag_241\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":9552:9556   */\n      0x00\n        /* \"#utility.yul\":9545:9550   */\n      dup4\n        /* \"#utility.yul\":9541:9557   */\n      add\n        /* \"#utility.yul\":9534:9619   */\n      mstore\n        /* \"#utility.yul\":9461:9630   */\n      pop\n        /* \"#utility.yul\":9691:9693   */\n      0x20\n        /* \"#utility.yul\":9732:9792   */\n      tag_371\n        /* \"#utility.yul\":9788:9791   */\n      dup5\n        /* \"#utility.yul\":9779:9785   */\n      dup3\n        /* \"#utility.yul\":9768:9777   */\n      dup6\n        /* \"#utility.yul\":9764:9786   */\n      add\n        /* \"#utility.yul\":9732:9792   */\n      tag_242\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":9725:9729   */\n      0x20\n        /* \"#utility.yul\":9718:9723   */\n      dup4\n        /* \"#utility.yul\":9714:9730   */\n      add\n        /* \"#utility.yul\":9707:9793   */\n      mstore\n        /* \"#utility.yul\":9640:9804   */\n      pop\n        /* \"#utility.yul\":9192:9811   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9817:10222   */\n    tag_116:\n        /* \"#utility.yul\":9914:9920   */\n      0x00\n        /* \"#utility.yul\":9963:9965   */\n      0x40\n        /* \"#utility.yul\":9951:9960   */\n      dup3\n        /* \"#utility.yul\":9942:9949   */\n      dup5\n        /* \"#utility.yul\":9938:9961   */\n      sub\n        /* \"#utility.yul\":9934:9966   */\n      slt\n        /* \"#utility.yul\":9931:10050   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":9969:10048   */\n      tag_374\n      tag_213\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":9931:10050   */\n    tag_373:\n        /* \"#utility.yul\":10089:10090   */\n      0x00\n        /* \"#utility.yul\":10114:10205   */\n      tag_375\n        /* \"#utility.yul\":10197:10204   */\n      dup5\n        /* \"#utility.yul\":10188:10194   */\n      dup3\n        /* \"#utility.yul\":10177:10186   */\n      dup6\n        /* \"#utility.yul\":10173:10195   */\n      add\n        /* \"#utility.yul\":10114:10205   */\n      tag_243\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":10104:10205   */\n      swap2\n      pop\n        /* \"#utility.yul\":10060:10215   */\n      pop\n        /* \"#utility.yul\":9817:10222   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10228:10463   */\n    tag_244:\n        /* \"#utility.yul\":10368:10402   */\n      0x4f6d6e6945524332303a204f6e6c792063616c6c61626c65207669612063726f\n        /* \"#utility.yul\":10364:10365   */\n      0x00\n        /* \"#utility.yul\":10356:10362   */\n      dup3\n        /* \"#utility.yul\":10352:10366   */\n      add\n        /* \"#utility.yul\":10345:10403   */\n      mstore\n        /* \"#utility.yul\":10437:10455   */\n      0x73732d636861696e206d65737361676500000000000000000000000000000000\n        /* \"#utility.yul\":10432:10434   */\n      0x20\n        /* \"#utility.yul\":10424:10430   */\n      dup3\n        /* \"#utility.yul\":10420:10435   */\n      add\n        /* \"#utility.yul\":10413:10456   */\n      mstore\n        /* \"#utility.yul\":10228:10463   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10469:10835   */\n    tag_245:\n        /* \"#utility.yul\":10611:10614   */\n      0x00\n        /* \"#utility.yul\":10632:10699   */\n      tag_378\n        /* \"#utility.yul\":10696:10698   */\n      0x30\n        /* \"#utility.yul\":10691:10694   */\n      dup4\n        /* \"#utility.yul\":10632:10699   */\n      tag_208\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":10625:10699   */\n      swap2\n      pop\n        /* \"#utility.yul\":10708:10801   */\n      tag_379\n        /* \"#utility.yul\":10797:10800   */\n      dup3\n        /* \"#utility.yul\":10708:10801   */\n      tag_244\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":10826:10828   */\n      0x40\n        /* \"#utility.yul\":10821:10824   */\n      dup3\n        /* \"#utility.yul\":10817:10829   */\n      add\n        /* \"#utility.yul\":10810:10829   */\n      swap1\n      pop\n        /* \"#utility.yul\":10469:10835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10841:11260   */\n    tag_122:\n        /* \"#utility.yul\":11007:11011   */\n      0x00\n        /* \"#utility.yul\":11045:11047   */\n      0x20\n        /* \"#utility.yul\":11034:11043   */\n      dup3\n        /* \"#utility.yul\":11030:11048   */\n      add\n        /* \"#utility.yul\":11022:11048   */\n      swap1\n      pop\n        /* \"#utility.yul\":11094:11103   */\n      dup2\n        /* \"#utility.yul\":11088:11092   */\n      dup2\n        /* \"#utility.yul\":11084:11104   */\n      sub\n        /* \"#utility.yul\":11080:11081   */\n      0x00\n        /* \"#utility.yul\":11069:11078   */\n      dup4\n        /* \"#utility.yul\":11065:11082   */\n      add\n        /* \"#utility.yul\":11058:11105   */\n      mstore\n        /* \"#utility.yul\":11122:11253   */\n      tag_381\n        /* \"#utility.yul\":11248:11252   */\n      dup2\n        /* \"#utility.yul\":11122:11253   */\n      tag_245\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":11114:11253   */\n      swap1\n      pop\n        /* \"#utility.yul\":10841:11260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11266:11384   */\n    tag_246:\n        /* \"#utility.yul\":11353:11377   */\n      tag_383\n        /* \"#utility.yul\":11371:11376   */\n      dup2\n        /* \"#utility.yul\":11353:11377   */\n      tag_216\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":11348:11351   */\n      dup3\n        /* \"#utility.yul\":11341:11378   */\n      mstore\n        /* \"#utility.yul\":11266:11384   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11390:11832   */\n    tag_139:\n        /* \"#utility.yul\":11539:11543   */\n      0x00\n        /* \"#utility.yul\":11577:11579   */\n      0x60\n        /* \"#utility.yul\":11566:11575   */\n      dup3\n        /* \"#utility.yul\":11562:11580   */\n      add\n        /* \"#utility.yul\":11554:11580   */\n      swap1\n      pop\n        /* \"#utility.yul\":11590:11661   */\n      tag_385\n        /* \"#utility.yul\":11658:11659   */\n      0x00\n        /* \"#utility.yul\":11647:11656   */\n      dup4\n        /* \"#utility.yul\":11643:11660   */\n      add\n        /* \"#utility.yul\":11634:11640   */\n      dup7\n        /* \"#utility.yul\":11590:11661   */\n      tag_246\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":11671:11743   */\n      tag_386\n        /* \"#utility.yul\":11739:11741   */\n      0x20\n        /* \"#utility.yul\":11728:11737   */\n      dup4\n        /* \"#utility.yul\":11724:11742   */\n      add\n        /* \"#utility.yul\":11715:11721   */\n      dup6\n        /* \"#utility.yul\":11671:11743   */\n      tag_246\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":11753:11825   */\n      tag_387\n        /* \"#utility.yul\":11821:11823   */\n      0x40\n        /* \"#utility.yul\":11810:11819   */\n      dup4\n        /* \"#utility.yul\":11806:11824   */\n      add\n        /* \"#utility.yul\":11797:11803   */\n      dup5\n        /* \"#utility.yul\":11753:11825   */\n      tag_224\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":11390:11832   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11838:12015   */\n    tag_247:\n        /* \"#utility.yul\":11978:12007   */\n      0x4f6d6e6945524332303a20496e73756666696369656e74206665650000000000\n        /* \"#utility.yul\":11974:11975   */\n      0x00\n        /* \"#utility.yul\":11966:11972   */\n      dup3\n        /* \"#utility.yul\":11962:11976   */\n      add\n        /* \"#utility.yul\":11955:12008   */\n      mstore\n        /* \"#utility.yul\":11838:12015   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12021:12387   */\n    tag_248:\n        /* \"#utility.yul\":12163:12166   */\n      0x00\n        /* \"#utility.yul\":12184:12251   */\n      tag_390\n        /* \"#utility.yul\":12248:12250   */\n      0x1b\n        /* \"#utility.yul\":12243:12246   */\n      dup4\n        /* \"#utility.yul\":12184:12251   */\n      tag_208\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":12177:12251   */\n      swap2\n      pop\n        /* \"#utility.yul\":12260:12353   */\n      tag_391\n        /* \"#utility.yul\":12349:12352   */\n      dup3\n        /* \"#utility.yul\":12260:12353   */\n      tag_247\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":12378:12380   */\n      0x20\n        /* \"#utility.yul\":12373:12376   */\n      dup3\n        /* \"#utility.yul\":12369:12381   */\n      add\n        /* \"#utility.yul\":12362:12381   */\n      swap1\n      pop\n        /* \"#utility.yul\":12021:12387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12393:12812   */\n    tag_144:\n        /* \"#utility.yul\":12559:12563   */\n      0x00\n        /* \"#utility.yul\":12597:12599   */\n      0x20\n        /* \"#utility.yul\":12586:12595   */\n      dup3\n        /* \"#utility.yul\":12582:12600   */\n      add\n        /* \"#utility.yul\":12574:12600   */\n      swap1\n      pop\n        /* \"#utility.yul\":12646:12655   */\n      dup2\n        /* \"#utility.yul\":12640:12644   */\n      dup2\n        /* \"#utility.yul\":12636:12656   */\n      sub\n        /* \"#utility.yul\":12632:12633   */\n      0x00\n        /* \"#utility.yul\":12621:12630   */\n      dup4\n        /* \"#utility.yul\":12617:12634   */\n      add\n        /* \"#utility.yul\":12610:12657   */\n      mstore\n        /* \"#utility.yul\":12674:12805   */\n      tag_393\n        /* \"#utility.yul\":12800:12804   */\n      dup2\n        /* \"#utility.yul\":12674:12805   */\n      tag_248\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":12666:12805   */\n      swap1\n      pop\n        /* \"#utility.yul\":12393:12812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12818:13260   */\n    tag_155:\n        /* \"#utility.yul\":12967:12971   */\n      0x00\n        /* \"#utility.yul\":13005:13007   */\n      0x60\n        /* \"#utility.yul\":12994:13003   */\n      dup3\n        /* \"#utility.yul\":12990:13008   */\n      add\n        /* \"#utility.yul\":12982:13008   */\n      swap1\n      pop\n        /* \"#utility.yul\":13018:13089   */\n      tag_395\n        /* \"#utility.yul\":13086:13087   */\n      0x00\n        /* \"#utility.yul\":13075:13084   */\n      dup4\n        /* \"#utility.yul\":13071:13088   */\n      add\n        /* \"#utility.yul\":13062:13068   */\n      dup7\n        /* \"#utility.yul\":13018:13089   */\n      tag_246\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":13099:13171   */\n      tag_396\n        /* \"#utility.yul\":13167:13169   */\n      0x20\n        /* \"#utility.yul\":13156:13165   */\n      dup4\n        /* \"#utility.yul\":13152:13170   */\n      add\n        /* \"#utility.yul\":13143:13149   */\n      dup6\n        /* \"#utility.yul\":13099:13171   */\n      tag_224\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":13181:13253   */\n      tag_397\n        /* \"#utility.yul\":13249:13251   */\n      0x40\n        /* \"#utility.yul\":13238:13247   */\n      dup4\n        /* \"#utility.yul\":13234:13252   */\n      add\n        /* \"#utility.yul\":13225:13231   */\n      dup5\n        /* \"#utility.yul\":13181:13253   */\n      tag_224\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":12818:13260   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13266:13488   */\n    tag_160:\n        /* \"#utility.yul\":13359:13363   */\n      0x00\n        /* \"#utility.yul\":13397:13399   */\n      0x20\n        /* \"#utility.yul\":13386:13395   */\n      dup3\n        /* \"#utility.yul\":13382:13400   */\n      add\n        /* \"#utility.yul\":13374:13400   */\n      swap1\n      pop\n        /* \"#utility.yul\":13410:13481   */\n      tag_399\n        /* \"#utility.yul\":13478:13479   */\n      0x00\n        /* \"#utility.yul\":13467:13476   */\n      dup4\n        /* \"#utility.yul\":13463:13480   */\n      add\n        /* \"#utility.yul\":13454:13460   */\n      dup5\n        /* \"#utility.yul\":13410:13481   */\n      tag_246\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":13266:13488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13494:13610   */\n    tag_249:\n        /* \"#utility.yul\":13564:13585   */\n      tag_401\n        /* \"#utility.yul\":13579:13584   */\n      dup2\n        /* \"#utility.yul\":13564:13585   */\n      tag_222\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":13557:13562   */\n      dup2\n        /* \"#utility.yul\":13554:13586   */\n      eq\n        /* \"#utility.yul\":13544:13604   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":13600:13601   */\n      0x00\n        /* \"#utility.yul\":13597:13598   */\n      dup1\n        /* \"#utility.yul\":13590:13602   */\n      revert\n        /* \"#utility.yul\":13544:13604   */\n    tag_402:\n        /* \"#utility.yul\":13494:13610   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13616:13753   */\n    tag_250:\n        /* \"#utility.yul\":13670:13675   */\n      0x00\n        /* \"#utility.yul\":13701:13707   */\n      dup2\n        /* \"#utility.yul\":13695:13708   */\n      mload\n        /* \"#utility.yul\":13686:13708   */\n      swap1\n      pop\n        /* \"#utility.yul\":13717:13747   */\n      tag_404\n        /* \"#utility.yul\":13741:13746   */\n      dup2\n        /* \"#utility.yul\":13717:13747   */\n      tag_249\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":13616:13753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13759:14104   */\n    tag_172:\n        /* \"#utility.yul\":13826:13832   */\n      0x00\n        /* \"#utility.yul\":13875:13877   */\n      0x20\n        /* \"#utility.yul\":13863:13872   */\n      dup3\n        /* \"#utility.yul\":13854:13861   */\n      dup5\n        /* \"#utility.yul\":13850:13873   */\n      sub\n        /* \"#utility.yul\":13846:13878   */\n      slt\n        /* \"#utility.yul\":13843:13962   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":13881:13960   */\n      tag_407\n      tag_213\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":13843:13962   */\n    tag_406:\n        /* \"#utility.yul\":14001:14002   */\n      0x00\n        /* \"#utility.yul\":14026:14087   */\n      tag_408\n        /* \"#utility.yul\":14079:14086   */\n      dup5\n        /* \"#utility.yul\":14070:14076   */\n      dup3\n        /* \"#utility.yul\":14059:14068   */\n      dup6\n        /* \"#utility.yul\":14055:14077   */\n      add\n        /* \"#utility.yul\":14026:14087   */\n      tag_250\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":14016:14087   */\n      swap2\n      pop\n        /* \"#utility.yul\":13972:14097   */\n      pop\n        /* \"#utility.yul\":13759:14104   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14110:14290   */\n    tag_251:\n        /* \"#utility.yul\":14158:14235   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14155:14156   */\n      0x00\n        /* \"#utility.yul\":14148:14236   */\n      mstore\n        /* \"#utility.yul\":14255:14259   */\n      0x11\n        /* \"#utility.yul\":14252:14253   */\n      0x04\n        /* \"#utility.yul\":14245:14260   */\n      mstore\n        /* \"#utility.yul\":14279:14283   */\n      0x24\n        /* \"#utility.yul\":14276:14277   */\n      0x00\n        /* \"#utility.yul\":14269:14284   */\n      revert\n        /* \"#utility.yul\":14296:14487   */\n    tag_177:\n        /* \"#utility.yul\":14336:14339   */\n      0x00\n        /* \"#utility.yul\":14355:14375   */\n      tag_411\n        /* \"#utility.yul\":14373:14374   */\n      dup3\n        /* \"#utility.yul\":14355:14375   */\n      tag_219\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":14350:14375   */\n      swap2\n      pop\n        /* \"#utility.yul\":14389:14409   */\n      tag_412\n        /* \"#utility.yul\":14407:14408   */\n      dup4\n        /* \"#utility.yul\":14389:14409   */\n      tag_219\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":14384:14409   */\n      swap3\n      pop\n        /* \"#utility.yul\":14432:14433   */\n      dup3\n        /* \"#utility.yul\":14429:14430   */\n      dup3\n        /* \"#utility.yul\":14425:14434   */\n      add\n        /* \"#utility.yul\":14418:14434   */\n      swap1\n      pop\n        /* \"#utility.yul\":14453:14456   */\n      dup1\n        /* \"#utility.yul\":14450:14451   */\n      dup3\n        /* \"#utility.yul\":14447:14457   */\n      gt\n        /* \"#utility.yul\":14444:14480   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":14460:14478   */\n      tag_414\n      tag_251\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":14444:14480   */\n    tag_413:\n        /* \"#utility.yul\":14296:14487   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14493:14608   */\n    tag_252:\n        /* \"#utility.yul\":14578:14601   */\n      tag_416\n        /* \"#utility.yul\":14595:14600   */\n      dup2\n        /* \"#utility.yul\":14578:14601   */\n      tag_232\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":14573:14576   */\n      dup3\n        /* \"#utility.yul\":14566:14602   */\n      mstore\n        /* \"#utility.yul\":14493:14608   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14614:14712   */\n    tag_253:\n        /* \"#utility.yul\":14665:14671   */\n      0x00\n        /* \"#utility.yul\":14699:14704   */\n      dup2\n        /* \"#utility.yul\":14693:14705   */\n      mload\n        /* \"#utility.yul\":14683:14705   */\n      swap1\n      pop\n        /* \"#utility.yul\":14614:14712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14718:14886   */\n    tag_254:\n        /* \"#utility.yul\":14801:14812   */\n      0x00\n        /* \"#utility.yul\":14835:14841   */\n      dup3\n        /* \"#utility.yul\":14830:14833   */\n      dup3\n        /* \"#utility.yul\":14823:14842   */\n      mstore\n        /* \"#utility.yul\":14875:14879   */\n      0x20\n        /* \"#utility.yul\":14870:14873   */\n      dup3\n        /* \"#utility.yul\":14866:14880   */\n      add\n        /* \"#utility.yul\":14851:14880   */\n      swap1\n      pop\n        /* \"#utility.yul\":14718:14886   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14892:15265   */\n    tag_255:\n        /* \"#utility.yul\":14978:14981   */\n      0x00\n        /* \"#utility.yul\":15006:15044   */\n      tag_420\n        /* \"#utility.yul\":15038:15043   */\n      dup3\n        /* \"#utility.yul\":15006:15044   */\n      tag_253\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":15060:15130   */\n      tag_421\n        /* \"#utility.yul\":15123:15129   */\n      dup2\n        /* \"#utility.yul\":15118:15121   */\n      dup6\n        /* \"#utility.yul\":15060:15130   */\n      tag_254\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":15053:15130   */\n      swap4\n      pop\n        /* \"#utility.yul\":15139:15204   */\n      tag_422\n        /* \"#utility.yul\":15197:15203   */\n      dup2\n        /* \"#utility.yul\":15192:15195   */\n      dup6\n        /* \"#utility.yul\":15185:15189   */\n      0x20\n        /* \"#utility.yul\":15178:15183   */\n      dup7\n        /* \"#utility.yul\":15174:15190   */\n      add\n        /* \"#utility.yul\":15139:15204   */\n      tag_209\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":15229:15258   */\n      tag_423\n        /* \"#utility.yul\":15251:15257   */\n      dup2\n        /* \"#utility.yul\":15229:15258   */\n      tag_210\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":15224:15227   */\n      dup5\n        /* \"#utility.yul\":15220:15259   */\n      add\n        /* \"#utility.yul\":15213:15259   */\n      swap2\n      pop\n        /* \"#utility.yul\":14982:15265   */\n      pop\n        /* \"#utility.yul\":14892:15265   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15271:15792   */\n    tag_186:\n        /* \"#utility.yul\":15434:15438   */\n      0x00\n        /* \"#utility.yul\":15472:15474   */\n      0x60\n        /* \"#utility.yul\":15461:15470   */\n      dup3\n        /* \"#utility.yul\":15457:15475   */\n      add\n        /* \"#utility.yul\":15449:15475   */\n      swap1\n      pop\n        /* \"#utility.yul\":15485:15554   */\n      tag_425\n        /* \"#utility.yul\":15551:15552   */\n      0x00\n        /* \"#utility.yul\":15540:15549   */\n      dup4\n        /* \"#utility.yul\":15536:15553   */\n      add\n        /* \"#utility.yul\":15527:15533   */\n      dup7\n        /* \"#utility.yul\":15485:15554   */\n      tag_252\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":15601:15610   */\n      dup2\n        /* \"#utility.yul\":15595:15599   */\n      dup2\n        /* \"#utility.yul\":15591:15611   */\n      sub\n        /* \"#utility.yul\":15586:15588   */\n      0x20\n        /* \"#utility.yul\":15575:15584   */\n      dup4\n        /* \"#utility.yul\":15571:15589   */\n      add\n        /* \"#utility.yul\":15564:15612   */\n      mstore\n        /* \"#utility.yul\":15629:15705   */\n      tag_426\n        /* \"#utility.yul\":15700:15704   */\n      dup2\n        /* \"#utility.yul\":15691:15697   */\n      dup6\n        /* \"#utility.yul\":15629:15705   */\n      tag_255\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":15621:15705   */\n      swap1\n      pop\n        /* \"#utility.yul\":15715:15785   */\n      tag_427\n        /* \"#utility.yul\":15781:15783   */\n      0x40\n        /* \"#utility.yul\":15770:15779   */\n      dup4\n        /* \"#utility.yul\":15766:15784   */\n      add\n        /* \"#utility.yul\":15757:15763   */\n      dup5\n        /* \"#utility.yul\":15715:15785   */\n      tag_252\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":15271:15792   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15798:15941   */\n    tag_256:\n        /* \"#utility.yul\":15855:15860   */\n      0x00\n        /* \"#utility.yul\":15886:15892   */\n      dup2\n        /* \"#utility.yul\":15880:15893   */\n      mload\n        /* \"#utility.yul\":15871:15893   */\n      swap1\n      pop\n        /* \"#utility.yul\":15902:15935   */\n      tag_429\n        /* \"#utility.yul\":15929:15934   */\n      dup2\n        /* \"#utility.yul\":15902:15935   */\n      tag_220\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":15798:15941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15947:16298   */\n    tag_190:\n        /* \"#utility.yul\":16017:16023   */\n      0x00\n        /* \"#utility.yul\":16066:16068   */\n      0x20\n        /* \"#utility.yul\":16054:16063   */\n      dup3\n        /* \"#utility.yul\":16045:16052   */\n      dup5\n        /* \"#utility.yul\":16041:16064   */\n      sub\n        /* \"#utility.yul\":16037:16069   */\n      slt\n        /* \"#utility.yul\":16034:16153   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":16072:16151   */\n      tag_432\n      tag_213\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":16034:16153   */\n    tag_431:\n        /* \"#utility.yul\":16192:16193   */\n      0x00\n        /* \"#utility.yul\":16217:16281   */\n      tag_433\n        /* \"#utility.yul\":16273:16280   */\n      dup5\n        /* \"#utility.yul\":16264:16270   */\n      dup3\n        /* \"#utility.yul\":16253:16262   */\n      dup6\n        /* \"#utility.yul\":16249:16271   */\n      add\n        /* \"#utility.yul\":16217:16281   */\n      tag_256\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":16207:16281   */\n      swap2\n      pop\n        /* \"#utility.yul\":16163:16291   */\n      pop\n        /* \"#utility.yul\":15947:16298   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16304:16478   */\n    tag_257:\n        /* \"#utility.yul\":16444:16470   */\n      0x584170703a20696e73756666696369656e742066756e64730000000000000000\n        /* \"#utility.yul\":16440:16441   */\n      0x00\n        /* \"#utility.yul\":16432:16438   */\n      dup3\n        /* \"#utility.yul\":16428:16442   */\n      add\n        /* \"#utility.yul\":16421:16471   */\n      mstore\n        /* \"#utility.yul\":16304:16478   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16484:16850   */\n    tag_258:\n        /* \"#utility.yul\":16626:16629   */\n      0x00\n        /* \"#utility.yul\":16647:16714   */\n      tag_436\n        /* \"#utility.yul\":16711:16713   */\n      0x18\n        /* \"#utility.yul\":16706:16709   */\n      dup4\n        /* \"#utility.yul\":16647:16714   */\n      tag_208\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":16640:16714   */\n      swap2\n      pop\n        /* \"#utility.yul\":16723:16816   */\n      tag_437\n        /* \"#utility.yul\":16812:16815   */\n      dup3\n        /* \"#utility.yul\":16723:16816   */\n      tag_257\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":16841:16843   */\n      0x20\n        /* \"#utility.yul\":16836:16839   */\n      dup3\n        /* \"#utility.yul\":16832:16844   */\n      add\n        /* \"#utility.yul\":16825:16844   */\n      swap1\n      pop\n        /* \"#utility.yul\":16484:16850   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16856:17275   */\n    tag_194:\n        /* \"#utility.yul\":17022:17026   */\n      0x00\n        /* \"#utility.yul\":17060:17062   */\n      0x20\n        /* \"#utility.yul\":17049:17058   */\n      dup3\n        /* \"#utility.yul\":17045:17063   */\n      add\n        /* \"#utility.yul\":17037:17063   */\n      swap1\n      pop\n        /* \"#utility.yul\":17109:17118   */\n      dup2\n        /* \"#utility.yul\":17103:17107   */\n      dup2\n        /* \"#utility.yul\":17099:17119   */\n      sub\n        /* \"#utility.yul\":17095:17096   */\n      0x00\n        /* \"#utility.yul\":17084:17093   */\n      dup4\n        /* \"#utility.yul\":17080:17097   */\n      add\n        /* \"#utility.yul\":17073:17120   */\n      mstore\n        /* \"#utility.yul\":17137:17268   */\n      tag_439\n        /* \"#utility.yul\":17263:17267   */\n      dup2\n        /* \"#utility.yul\":17137:17268   */\n      tag_258\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":17129:17268   */\n      swap1\n      pop\n        /* \"#utility.yul\":16856:17275   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17281:18016   */\n    tag_196:\n        /* \"#utility.yul\":17496:17500   */\n      0x00\n        /* \"#utility.yul\":17534:17537   */\n      0xa0\n        /* \"#utility.yul\":17523:17532   */\n      dup3\n        /* \"#utility.yul\":17519:17538   */\n      add\n        /* \"#utility.yul\":17511:17538   */\n      swap1\n      pop\n        /* \"#utility.yul\":17548:17617   */\n      tag_441\n        /* \"#utility.yul\":17614:17615   */\n      0x00\n        /* \"#utility.yul\":17603:17612   */\n      dup4\n        /* \"#utility.yul\":17599:17616   */\n      add\n        /* \"#utility.yul\":17590:17596   */\n      dup9\n        /* \"#utility.yul\":17548:17617   */\n      tag_252\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":17627:17695   */\n      tag_442\n        /* \"#utility.yul\":17691:17693   */\n      0x20\n        /* \"#utility.yul\":17680:17689   */\n      dup4\n        /* \"#utility.yul\":17676:17694   */\n      add\n        /* \"#utility.yul\":17667:17673   */\n      dup8\n        /* \"#utility.yul\":17627:17695   */\n      tag_226\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":17705:17777   */\n      tag_443\n        /* \"#utility.yul\":17773:17775   */\n      0x40\n        /* \"#utility.yul\":17762:17771   */\n      dup4\n        /* \"#utility.yul\":17758:17776   */\n      add\n        /* \"#utility.yul\":17749:17755   */\n      dup7\n        /* \"#utility.yul\":17705:17777   */\n      tag_246\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":17824:17833   */\n      dup2\n        /* \"#utility.yul\":17818:17822   */\n      dup2\n        /* \"#utility.yul\":17814:17834   */\n      sub\n        /* \"#utility.yul\":17809:17811   */\n      0x60\n        /* \"#utility.yul\":17798:17807   */\n      dup4\n        /* \"#utility.yul\":17794:17812   */\n      add\n        /* \"#utility.yul\":17787:17835   */\n      mstore\n        /* \"#utility.yul\":17852:17928   */\n      tag_444\n        /* \"#utility.yul\":17923:17927   */\n      dup2\n        /* \"#utility.yul\":17914:17920   */\n      dup6\n        /* \"#utility.yul\":17852:17928   */\n      tag_255\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":17844:17928   */\n      swap1\n      pop\n        /* \"#utility.yul\":17938:18009   */\n      tag_445\n        /* \"#utility.yul\":18004:18007   */\n      0x80\n        /* \"#utility.yul\":17993:18002   */\n      dup4\n        /* \"#utility.yul\":17989:18008   */\n      add\n        /* \"#utility.yul\":17980:17986   */\n      dup5\n        /* \"#utility.yul\":17938:18009   */\n      tag_252\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":17281:18016   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122046700868c6dfbdf830947272e2181fd8499785655d3d7cee16653aa26672ef4564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1388": {
									"entryPoint": null,
									"id": 1388,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_325": {
									"entryPoint": null,
									"id": 325,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_859": {
									"entryPoint": null,
									"id": 859,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_1433": {
									"entryPoint": 540,
									"id": 1433,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setDefaultConfLevel_553": {
									"entryPoint": 378,
									"id": 553,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setOmniPortal_580": {
									"entryPoint": 147,
									"id": 580,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_1210": {
									"entryPoint": 708,
									"id": 1210,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isValid_203": {
									"entryPoint": 673,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1471,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256_fromMemory": {
									"entryPoint": 1722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 2877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3028,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 2892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1248,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2257,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2865,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1457,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2917,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1289,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1269,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 2014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52": {
									"entryPoint": 2617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5": {
									"entryPoint": 2761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 2026,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2195,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13656:11",
										"nodeType": "YulBlock",
										"src": "0:13656:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "423:28:11",
													"nodeType": "YulBlock",
													"src": "423:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:11",
																		"nodeType": "YulLiteral",
																		"src": "440:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:11",
																		"nodeType": "YulLiteral",
																		"src": "443:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:11"
																},
																"nativeSrc": "433:12:11",
																"nodeType": "YulFunctionCall",
																"src": "433:12:11"
															},
															"nativeSrc": "433:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:11"
											},
											{
												"body": {
													"nativeSrc": "546:28:11",
													"nodeType": "YulBlock",
													"src": "546:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:11",
																		"nodeType": "YulLiteral",
																		"src": "563:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:11",
																		"nodeType": "YulLiteral",
																		"src": "566:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:11"
																},
																"nativeSrc": "556:12:11",
																"nodeType": "YulFunctionCall",
																"src": "556:12:11"
															},
															"nativeSrc": "556:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:11"
											},
											{
												"body": {
													"nativeSrc": "628:54:11",
													"nodeType": "YulBlock",
													"src": "628:54:11",
													"statements": [
														{
															"nativeSrc": "638:38:11",
															"nodeType": "YulAssignment",
															"src": "638:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:11",
																				"nodeType": "YulLiteral",
																				"src": "663:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:11"
																		},
																		"nativeSrc": "652:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:11",
																				"nodeType": "YulLiteral",
																				"src": "672:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:11"
																		},
																		"nativeSrc": "668:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:11"
																},
																"nativeSrc": "648:28:11",
																"nodeType": "YulFunctionCall",
																"src": "648:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:11",
														"nodeType": "YulTypedName",
														"src": "611:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:11",
														"nodeType": "YulTypedName",
														"src": "621:6:11",
														"type": ""
													}
												],
												"src": "580:102:11"
											},
											{
												"body": {
													"nativeSrc": "716:152:11",
													"nodeType": "YulBlock",
													"src": "716:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:11",
																		"nodeType": "YulLiteral",
																		"src": "733:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:11",
																		"nodeType": "YulLiteral",
																		"src": "736:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:11"
																},
																"nativeSrc": "726:88:11",
																"nodeType": "YulFunctionCall",
																"src": "726:88:11"
															},
															"nativeSrc": "726:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:11",
																		"nodeType": "YulLiteral",
																		"src": "830:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:11",
																		"nodeType": "YulLiteral",
																		"src": "833:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:11"
																},
																"nativeSrc": "823:15:11",
																"nodeType": "YulFunctionCall",
																"src": "823:15:11"
															},
															"nativeSrc": "823:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:11",
																		"nodeType": "YulLiteral",
																		"src": "854:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:11",
																		"nodeType": "YulLiteral",
																		"src": "857:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:11"
																},
																"nativeSrc": "847:15:11",
																"nodeType": "YulFunctionCall",
																"src": "847:15:11"
															},
															"nativeSrc": "847:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:11"
											},
											{
												"body": {
													"nativeSrc": "917:238:11",
													"nodeType": "YulBlock",
													"src": "917:238:11",
													"statements": [
														{
															"nativeSrc": "927:58:11",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:11"
																		},
																		"nativeSrc": "957:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:11"
																},
																"nativeSrc": "945:40:11",
																"nodeType": "YulFunctionCall",
																"src": "945:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:11",
																	"nodeType": "YulTypedName",
																	"src": "931:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:11",
																"nodeType": "YulBlock",
																"src": "1096:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:11"
																			},
																			"nativeSrc": "1098:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:11"
																		},
																		"nativeSrc": "1098:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:11",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:11"
																		},
																		"nativeSrc": "1036:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:11"
																		},
																		"nativeSrc": "1072:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:11"
																},
																"nativeSrc": "1033:62:11",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:11"
															},
															"nativeSrc": "1030:88:11",
															"nodeType": "YulIf",
															"src": "1030:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:11"
																},
																"nativeSrc": "1127:22:11",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:11"
															},
															"nativeSrc": "1127:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:11",
														"nodeType": "YulTypedName",
														"src": "903:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:11",
														"nodeType": "YulTypedName",
														"src": "911:4:11",
														"type": ""
													}
												],
												"src": "874:281:11"
											},
											{
												"body": {
													"nativeSrc": "1202:88:11",
													"nodeType": "YulBlock",
													"src": "1202:88:11",
													"statements": [
														{
															"nativeSrc": "1212:30:11",
															"nodeType": "YulAssignment",
															"src": "1212:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:11"
																},
																"nativeSrc": "1222:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:11"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:11",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:11"
																},
																"nativeSrc": "1251:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:11"
															},
															"nativeSrc": "1251:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:11",
														"nodeType": "YulTypedName",
														"src": "1186:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:11",
														"nodeType": "YulTypedName",
														"src": "1195:6:11",
														"type": ""
													}
												],
												"src": "1161:129:11"
											},
											{
												"body": {
													"nativeSrc": "1363:241:11",
													"nodeType": "YulBlock",
													"src": "1363:241:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:11",
																"nodeType": "YulBlock",
																"src": "1468:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:11"
																			},
																			"nativeSrc": "1470:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:11"
																		},
																		"nativeSrc": "1470:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:11",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:11"
																},
																"nativeSrc": "1437:30:11",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:11"
															},
															"nativeSrc": "1434:56:11",
															"nodeType": "YulIf",
															"src": "1434:56:11"
														},
														{
															"nativeSrc": "1500:37:11",
															"nodeType": "YulAssignment",
															"src": "1500:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:11",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:11"
																},
																"nativeSrc": "1508:29:11",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:11"
																}
															]
														},
														{
															"nativeSrc": "1574:23:11",
															"nodeType": "YulAssignment",
															"src": "1574:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:11"
																},
																"nativeSrc": "1582:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:11",
														"nodeType": "YulTypedName",
														"src": "1347:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:11",
														"nodeType": "YulTypedName",
														"src": "1358:4:11",
														"type": ""
													}
												],
												"src": "1296:308:11"
											},
											{
												"body": {
													"nativeSrc": "1672:77:11",
													"nodeType": "YulBlock",
													"src": "1672:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:11"
																},
																"nativeSrc": "1683:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:11"
															},
															"nativeSrc": "1683:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:11"
																		},
																		"nativeSrc": "1722:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:11"
																},
																"nativeSrc": "1715:27:11",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:11"
															},
															"nativeSrc": "1715:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:11",
														"nodeType": "YulTypedName",
														"src": "1654:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:11",
														"nodeType": "YulTypedName",
														"src": "1659:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:11",
														"nodeType": "YulTypedName",
														"src": "1664:6:11",
														"type": ""
													}
												],
												"src": "1610:139:11"
											},
											{
												"body": {
													"nativeSrc": "1850:339:11",
													"nodeType": "YulBlock",
													"src": "1850:339:11",
													"statements": [
														{
															"nativeSrc": "1860:75:11",
															"nodeType": "YulAssignment",
															"src": "1860:75:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:11",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:11"
																		},
																		"nativeSrc": "1885:49:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:11"
																},
																"nativeSrc": "1869:66:11",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:11"
																},
																"nativeSrc": "1944:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:11"
															},
															"nativeSrc": "1944:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:11"
														},
														{
															"nativeSrc": "1974:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:11"
																},
																"nativeSrc": "1985:16:11",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:11",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:11",
																"nodeType": "YulBlock",
																"src": "2039:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:11"
																			},
																			"nativeSrc": "2041:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:11"
																		},
																		"nativeSrc": "2041:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:11"
																		},
																		"nativeSrc": "2016:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:11"
																},
																"nativeSrc": "2013:25:11",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:11"
															},
															"nativeSrc": "2010:112:11",
															"nodeType": "YulIf",
															"src": "2010:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:11"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:11"
																},
																"nativeSrc": "2131:52:11",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:11"
															},
															"nativeSrc": "2131:52:11",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:11",
														"nodeType": "YulTypedName",
														"src": "1823:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:11",
														"nodeType": "YulTypedName",
														"src": "1828:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:11",
														"nodeType": "YulTypedName",
														"src": "1836:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:11",
														"nodeType": "YulTypedName",
														"src": "1844:5:11",
														"type": ""
													}
												],
												"src": "1755:434:11"
											},
											{
												"body": {
													"nativeSrc": "2282:282:11",
													"nodeType": "YulBlock",
													"src": "2282:282:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:11",
																"nodeType": "YulBlock",
																"src": "2331:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:11"
																			},
																			"nativeSrc": "2333:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:11"
																		},
																		"nativeSrc": "2333:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:11",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:11"
																				},
																				"nativeSrc": "2306:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:11"
																		},
																		"nativeSrc": "2302:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:11"
																},
																"nativeSrc": "2295:35:11",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:11"
															},
															"nativeSrc": "2292:122:11",
															"nodeType": "YulIf",
															"src": "2292:122:11"
														},
														{
															"nativeSrc": "2423:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:11"
																},
																"nativeSrc": "2437:13:11",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:11",
															"nodeType": "YulAssignment",
															"src": "2459:99:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:11"
																		},
																		"nativeSrc": "2527:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:11"
																},
																"nativeSrc": "2468:90:11",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:11",
														"nodeType": "YulTypedName",
														"src": "2260:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:11",
														"nodeType": "YulTypedName",
														"src": "2268:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:11",
														"nodeType": "YulTypedName",
														"src": "2276:5:11",
														"type": ""
													}
												],
												"src": "2209:355:11"
											},
											{
												"body": {
													"nativeSrc": "2615:81:11",
													"nodeType": "YulBlock",
													"src": "2615:81:11",
													"statements": [
														{
															"nativeSrc": "2625:65:11",
															"nodeType": "YulAssignment",
															"src": "2625:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2640:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2640:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2647:42:11",
																		"nodeType": "YulLiteral",
																		"src": "2647:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2636:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2636:3:11"
																},
																"nativeSrc": "2636:54:11",
																"nodeType": "YulFunctionCall",
																"src": "2636:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2570:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:11",
														"nodeType": "YulTypedName",
														"src": "2597:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:11",
														"nodeType": "YulTypedName",
														"src": "2607:7:11",
														"type": ""
													}
												],
												"src": "2570:126:11"
											},
											{
												"body": {
													"nativeSrc": "2747:51:11",
													"nodeType": "YulBlock",
													"src": "2747:51:11",
													"statements": [
														{
															"nativeSrc": "2757:35:11",
															"nodeType": "YulAssignment",
															"src": "2757:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2786:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2786:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2768:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2768:17:11"
																},
																"nativeSrc": "2768:24:11",
																"nodeType": "YulFunctionCall",
																"src": "2768:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2757:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2757:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2702:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2729:5:11",
														"nodeType": "YulTypedName",
														"src": "2729:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2739:7:11",
														"nodeType": "YulTypedName",
														"src": "2739:7:11",
														"type": ""
													}
												],
												"src": "2702:96:11"
											},
											{
												"body": {
													"nativeSrc": "2847:79:11",
													"nodeType": "YulBlock",
													"src": "2847:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2904:16:11",
																"nodeType": "YulBlock",
																"src": "2904:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2913:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2913:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2916:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2916:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2906:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2906:6:11"
																			},
																			"nativeSrc": "2906:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2906:12:11"
																		},
																		"nativeSrc": "2906:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2906:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2870:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2870:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2895:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2895:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2877:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2877:17:11"
																				},
																				"nativeSrc": "2877:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2877:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2867:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2867:2:11"
																		},
																		"nativeSrc": "2867:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2867:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2860:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2860:6:11"
																},
																"nativeSrc": "2860:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2860:43:11"
															},
															"nativeSrc": "2857:63:11",
															"nodeType": "YulIf",
															"src": "2857:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2804:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2840:5:11",
														"nodeType": "YulTypedName",
														"src": "2840:5:11",
														"type": ""
													}
												],
												"src": "2804:122:11"
											},
											{
												"body": {
													"nativeSrc": "2995:80:11",
													"nodeType": "YulBlock",
													"src": "2995:80:11",
													"statements": [
														{
															"nativeSrc": "3005:22:11",
															"nodeType": "YulAssignment",
															"src": "3005:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3020:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3020:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3014:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3014:5:11"
																},
																"nativeSrc": "3014:13:11",
																"nodeType": "YulFunctionCall",
																"src": "3014:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3005:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3005:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3063:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3063:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3036:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3036:26:11"
																},
																"nativeSrc": "3036:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3036:33:11"
															},
															"nativeSrc": "3036:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3036:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "2932:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2973:6:11",
														"nodeType": "YulTypedName",
														"src": "2973:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2981:3:11",
														"nodeType": "YulTypedName",
														"src": "2981:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2989:5:11",
														"nodeType": "YulTypedName",
														"src": "2989:5:11",
														"type": ""
													}
												],
												"src": "2932:143:11"
											},
											{
												"body": {
													"nativeSrc": "3126:32:11",
													"nodeType": "YulBlock",
													"src": "3126:32:11",
													"statements": [
														{
															"nativeSrc": "3136:16:11",
															"nodeType": "YulAssignment",
															"src": "3136:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "3147:5:11",
																"nodeType": "YulIdentifier",
																"src": "3147:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3136:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3136:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3081:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3108:5:11",
														"nodeType": "YulTypedName",
														"src": "3108:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3118:7:11",
														"nodeType": "YulTypedName",
														"src": "3118:7:11",
														"type": ""
													}
												],
												"src": "3081:77:11"
											},
											{
												"body": {
													"nativeSrc": "3207:79:11",
													"nodeType": "YulBlock",
													"src": "3207:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3264:16:11",
																"nodeType": "YulBlock",
																"src": "3264:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3273:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3273:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3276:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3276:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3266:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3266:6:11"
																			},
																			"nativeSrc": "3266:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3266:12:11"
																		},
																		"nativeSrc": "3266:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3266:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3230:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3230:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3255:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3255:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3237:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3237:17:11"
																				},
																				"nativeSrc": "3237:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3237:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3227:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3227:2:11"
																		},
																		"nativeSrc": "3227:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3227:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3220:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3220:6:11"
																},
																"nativeSrc": "3220:43:11",
																"nodeType": "YulFunctionCall",
																"src": "3220:43:11"
															},
															"nativeSrc": "3217:63:11",
															"nodeType": "YulIf",
															"src": "3217:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3164:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3200:5:11",
														"nodeType": "YulTypedName",
														"src": "3200:5:11",
														"type": ""
													}
												],
												"src": "3164:122:11"
											},
											{
												"body": {
													"nativeSrc": "3355:80:11",
													"nodeType": "YulBlock",
													"src": "3355:80:11",
													"statements": [
														{
															"nativeSrc": "3365:22:11",
															"nodeType": "YulAssignment",
															"src": "3365:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3380:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3380:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3374:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3374:5:11"
																},
																"nativeSrc": "3374:13:11",
																"nodeType": "YulFunctionCall",
																"src": "3374:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3365:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3365:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3423:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3423:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3396:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3396:26:11"
																},
																"nativeSrc": "3396:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3396:33:11"
															},
															"nativeSrc": "3396:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3396:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3292:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3333:6:11",
														"nodeType": "YulTypedName",
														"src": "3333:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3341:3:11",
														"nodeType": "YulTypedName",
														"src": "3341:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3349:5:11",
														"nodeType": "YulTypedName",
														"src": "3349:5:11",
														"type": ""
													}
												],
												"src": "3292:143:11"
											},
											{
												"body": {
													"nativeSrc": "3589:1018:11",
													"nodeType": "YulBlock",
													"src": "3589:1018:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3636:83:11",
																"nodeType": "YulBlock",
																"src": "3636:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3638:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3638:77:11"
																			},
																			"nativeSrc": "3638:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3638:79:11"
																		},
																		"nativeSrc": "3638:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3638:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3610:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3610:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3619:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3619:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3606:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3606:3:11"
																		},
																		"nativeSrc": "3606:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3606:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3631:3:11",
																		"nodeType": "YulLiteral",
																		"src": "3631:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3602:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3602:3:11"
																},
																"nativeSrc": "3602:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3602:33:11"
															},
															"nativeSrc": "3599:120:11",
															"nodeType": "YulIf",
															"src": "3599:120:11"
														},
														{
															"nativeSrc": "3729:291:11",
															"nodeType": "YulBlock",
															"src": "3729:291:11",
															"statements": [
																{
																	"nativeSrc": "3744:38:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3744:38:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3768:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3768:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3779:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3779:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3764:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3764:3:11"
																				},
																				"nativeSrc": "3764:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3764:17:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3758:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "3758:5:11"
																		},
																		"nativeSrc": "3758:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3758:24:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3748:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3748:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3829:83:11",
																		"nodeType": "YulBlock",
																		"src": "3829:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3831:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "3831:77:11"
																					},
																					"nativeSrc": "3831:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3831:79:11"
																				},
																				"nativeSrc": "3831:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "3831:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3801:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3801:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3809:18:11",
																				"nodeType": "YulLiteral",
																				"src": "3809:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3798:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3798:2:11"
																		},
																		"nativeSrc": "3798:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3798:30:11"
																	},
																	"nativeSrc": "3795:117:11",
																	"nodeType": "YulIf",
																	"src": "3795:117:11"
																},
																{
																	"nativeSrc": "3926:84:11",
																	"nodeType": "YulAssignment",
																	"src": "3926:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3982:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3982:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3993:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3993:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3978:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3978:3:11"
																				},
																				"nativeSrc": "3978:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3978:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4002:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4002:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3936:41:11",
																			"nodeType": "YulIdentifier",
																			"src": "3936:41:11"
																		},
																		"nativeSrc": "3936:74:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3936:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3926:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3926:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4030:292:11",
															"nodeType": "YulBlock",
															"src": "4030:292:11",
															"statements": [
																{
																	"nativeSrc": "4045:39:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4045:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4069:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4069:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4080:2:11",
																						"nodeType": "YulLiteral",
																						"src": "4080:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4065:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4065:3:11"
																				},
																				"nativeSrc": "4065:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4065:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4059:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "4059:5:11"
																		},
																		"nativeSrc": "4059:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4059:25:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4049:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4049:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4131:83:11",
																		"nodeType": "YulBlock",
																		"src": "4131:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4133:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "4133:77:11"
																					},
																					"nativeSrc": "4133:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4133:79:11"
																				},
																				"nativeSrc": "4133:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "4133:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4103:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4103:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4111:18:11",
																				"nodeType": "YulLiteral",
																				"src": "4111:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4100:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4100:2:11"
																		},
																		"nativeSrc": "4100:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4100:30:11"
																	},
																	"nativeSrc": "4097:117:11",
																	"nodeType": "YulIf",
																	"src": "4097:117:11"
																},
																{
																	"nativeSrc": "4228:84:11",
																	"nodeType": "YulAssignment",
																	"src": "4228:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4284:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4284:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4295:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4295:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4280:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4280:3:11"
																				},
																				"nativeSrc": "4280:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4280:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4304:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4304:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "4238:41:11",
																			"nodeType": "YulIdentifier",
																			"src": "4238:41:11"
																		},
																		"nativeSrc": "4238:74:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4238:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4228:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4228:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4332:129:11",
															"nodeType": "YulBlock",
															"src": "4332:129:11",
															"statements": [
																{
																	"nativeSrc": "4347:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4347:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4361:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4361:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4351:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4351:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4377:74:11",
																	"nodeType": "YulAssignment",
																	"src": "4377:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4423:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4423:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4434:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4434:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4419:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4419:3:11"
																				},
																				"nativeSrc": "4419:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4419:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4443:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4443:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "4387:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "4387:31:11"
																		},
																		"nativeSrc": "4387:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4387:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4377:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4377:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4471:129:11",
															"nodeType": "YulBlock",
															"src": "4471:129:11",
															"statements": [
																{
																	"nativeSrc": "4486:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4486:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4500:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4500:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4490:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4490:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4516:74:11",
																	"nodeType": "YulAssignment",
																	"src": "4516:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4562:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4562:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4573:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4573:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4558:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4558:3:11"
																				},
																				"nativeSrc": "4558:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4558:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4582:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4582:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4526:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "4526:31:11"
																		},
																		"nativeSrc": "4526:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4526:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "4516:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4516:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256_fromMemory",
												"nativeSrc": "3441:1166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3535:9:11",
														"nodeType": "YulTypedName",
														"src": "3535:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3546:7:11",
														"nodeType": "YulTypedName",
														"src": "3546:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3558:6:11",
														"nodeType": "YulTypedName",
														"src": "3558:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3566:6:11",
														"nodeType": "YulTypedName",
														"src": "3566:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3574:6:11",
														"nodeType": "YulTypedName",
														"src": "3574:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3582:6:11",
														"nodeType": "YulTypedName",
														"src": "3582:6:11",
														"type": ""
													}
												],
												"src": "3441:1166:11"
											},
											{
												"body": {
													"nativeSrc": "4672:40:11",
													"nodeType": "YulBlock",
													"src": "4672:40:11",
													"statements": [
														{
															"nativeSrc": "4683:22:11",
															"nodeType": "YulAssignment",
															"src": "4683:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4699:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4699:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4693:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4693:5:11"
																},
																"nativeSrc": "4693:12:11",
																"nodeType": "YulFunctionCall",
																"src": "4693:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4683:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4683:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4613:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4655:5:11",
														"nodeType": "YulTypedName",
														"src": "4655:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4665:6:11",
														"nodeType": "YulTypedName",
														"src": "4665:6:11",
														"type": ""
													}
												],
												"src": "4613:99:11"
											},
											{
												"body": {
													"nativeSrc": "4746:152:11",
													"nodeType": "YulBlock",
													"src": "4746:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4763:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4763:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4766:77:11",
																		"nodeType": "YulLiteral",
																		"src": "4766:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4756:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4756:6:11"
																},
																"nativeSrc": "4756:88:11",
																"nodeType": "YulFunctionCall",
																"src": "4756:88:11"
															},
															"nativeSrc": "4756:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "4756:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4860:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4860:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4863:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4863:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4853:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4853:6:11"
																},
																"nativeSrc": "4853:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4853:15:11"
															},
															"nativeSrc": "4853:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "4853:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4884:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4884:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4887:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4887:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4877:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4877:6:11"
																},
																"nativeSrc": "4877:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4877:15:11"
															},
															"nativeSrc": "4877:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "4877:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4718:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "4718:180:11"
											},
											{
												"body": {
													"nativeSrc": "4955:269:11",
													"nodeType": "YulBlock",
													"src": "4955:269:11",
													"statements": [
														{
															"nativeSrc": "4965:22:11",
															"nodeType": "YulAssignment",
															"src": "4965:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4979:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4979:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4985:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4985:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4975:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4975:3:11"
																},
																"nativeSrc": "4975:12:11",
																"nodeType": "YulFunctionCall",
																"src": "4975:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4965:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4965:6:11"
																}
															]
														},
														{
															"nativeSrc": "4996:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4996:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5026:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5026:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5032:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5022:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5022:3:11"
																},
																"nativeSrc": "5022:12:11",
																"nodeType": "YulFunctionCall",
																"src": "5022:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5000:18:11",
																	"nodeType": "YulTypedName",
																	"src": "5000:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5073:51:11",
																"nodeType": "YulBlock",
																"src": "5073:51:11",
																"statements": [
																	{
																		"nativeSrc": "5087:27:11",
																		"nodeType": "YulAssignment",
																		"src": "5087:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5101:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "5101:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5109:4:11",
																					"nodeType": "YulLiteral",
																					"src": "5109:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5097:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "5097:3:11"
																			},
																			"nativeSrc": "5097:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5097:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5087:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5087:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5053:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "5053:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5046:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5046:6:11"
																},
																"nativeSrc": "5046:26:11",
																"nodeType": "YulFunctionCall",
																"src": "5046:26:11"
															},
															"nativeSrc": "5043:81:11",
															"nodeType": "YulIf",
															"src": "5043:81:11"
														},
														{
															"body": {
																"nativeSrc": "5176:42:11",
																"nodeType": "YulBlock",
																"src": "5176:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5190:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "5190:16:11"
																			},
																			"nativeSrc": "5190:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5190:18:11"
																		},
																		"nativeSrc": "5190:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5190:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5140:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "5140:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5163:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5163:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5171:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5171:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5160:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5160:2:11"
																		},
																		"nativeSrc": "5160:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5160:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5137:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5137:2:11"
																},
																"nativeSrc": "5137:38:11",
																"nodeType": "YulFunctionCall",
																"src": "5137:38:11"
															},
															"nativeSrc": "5134:84:11",
															"nodeType": "YulIf",
															"src": "5134:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4904:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4939:4:11",
														"nodeType": "YulTypedName",
														"src": "4939:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4948:6:11",
														"nodeType": "YulTypedName",
														"src": "4948:6:11",
														"type": ""
													}
												],
												"src": "4904:320:11"
											},
											{
												"body": {
													"nativeSrc": "5284:87:11",
													"nodeType": "YulBlock",
													"src": "5284:87:11",
													"statements": [
														{
															"nativeSrc": "5294:11:11",
															"nodeType": "YulAssignment",
															"src": "5294:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "5302:3:11",
																"nodeType": "YulIdentifier",
																"src": "5302:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5294:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5294:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5322:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5322:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "5325:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5325:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5315:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5315:6:11"
																},
																"nativeSrc": "5315:14:11",
																"nodeType": "YulFunctionCall",
																"src": "5315:14:11"
															},
															"nativeSrc": "5315:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "5315:14:11"
														},
														{
															"nativeSrc": "5338:26:11",
															"nodeType": "YulAssignment",
															"src": "5338:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5356:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5356:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5359:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5359:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "5346:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5346:9:11"
																},
																"nativeSrc": "5346:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5346:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5338:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5338:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "5230:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "5271:3:11",
														"nodeType": "YulTypedName",
														"src": "5271:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "5279:4:11",
														"nodeType": "YulTypedName",
														"src": "5279:4:11",
														"type": ""
													}
												],
												"src": "5230:141:11"
											},
											{
												"body": {
													"nativeSrc": "5421:49:11",
													"nodeType": "YulBlock",
													"src": "5421:49:11",
													"statements": [
														{
															"nativeSrc": "5431:33:11",
															"nodeType": "YulAssignment",
															"src": "5431:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5449:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5449:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5456:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5456:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5445:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5445:3:11"
																		},
																		"nativeSrc": "5445:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5445:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5461:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5461:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5441:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5441:3:11"
																},
																"nativeSrc": "5441:23:11",
																"nodeType": "YulFunctionCall",
																"src": "5441:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5431:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5431:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "5377:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5404:5:11",
														"nodeType": "YulTypedName",
														"src": "5404:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5414:6:11",
														"nodeType": "YulTypedName",
														"src": "5414:6:11",
														"type": ""
													}
												],
												"src": "5377:93:11"
											},
											{
												"body": {
													"nativeSrc": "5529:54:11",
													"nodeType": "YulBlock",
													"src": "5529:54:11",
													"statements": [
														{
															"nativeSrc": "5539:37:11",
															"nodeType": "YulAssignment",
															"src": "5539:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5564:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5564:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5570:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5570:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "5560:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5560:3:11"
																},
																"nativeSrc": "5560:16:11",
																"nodeType": "YulFunctionCall",
																"src": "5560:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5539:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "5539:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "5476:107:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "5504:4:11",
														"nodeType": "YulTypedName",
														"src": "5504:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "5510:5:11",
														"nodeType": "YulTypedName",
														"src": "5510:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5520:8:11",
														"nodeType": "YulTypedName",
														"src": "5520:8:11",
														"type": ""
													}
												],
												"src": "5476:107:11"
											},
											{
												"body": {
													"nativeSrc": "5665:317:11",
													"nodeType": "YulBlock",
													"src": "5665:317:11",
													"statements": [
														{
															"nativeSrc": "5675:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5675:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5696:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "5696:10:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5708:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5708:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5692:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5692:3:11"
																},
																"nativeSrc": "5692:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5692:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5679:9:11",
																	"nodeType": "YulTypedName",
																	"src": "5679:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5719:109:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5719:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5750:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5750:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5761:66:11",
																		"nodeType": "YulLiteral",
																		"src": "5761:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5731:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "5731:18:11"
																},
																"nativeSrc": "5731:97:11",
																"nodeType": "YulFunctionCall",
																"src": "5731:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5723:4:11",
																	"nodeType": "YulTypedName",
																	"src": "5723:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5837:51:11",
															"nodeType": "YulAssignment",
															"src": "5837:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5868:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5868:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5879:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "5879:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5849:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "5849:18:11"
																},
																"nativeSrc": "5849:39:11",
																"nodeType": "YulFunctionCall",
																"src": "5849:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5837:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "5837:8:11"
																}
															]
														},
														{
															"nativeSrc": "5897:30:11",
															"nodeType": "YulAssignment",
															"src": "5897:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5910:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5910:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5921:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5921:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5917:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5917:3:11"
																		},
																		"nativeSrc": "5917:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5917:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5906:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5906:3:11"
																},
																"nativeSrc": "5906:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5906:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5897:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5897:5:11"
																}
															]
														},
														{
															"nativeSrc": "5936:40:11",
															"nodeType": "YulAssignment",
															"src": "5936:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5949:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5949:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5960:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "5960:8:11"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5970:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5970:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5956:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5956:3:11"
																		},
																		"nativeSrc": "5956:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5956:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5946:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5946:2:11"
																},
																"nativeSrc": "5946:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5946:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5936:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5936:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5589:393:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5626:5:11",
														"nodeType": "YulTypedName",
														"src": "5626:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5633:10:11",
														"nodeType": "YulTypedName",
														"src": "5633:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5645:8:11",
														"nodeType": "YulTypedName",
														"src": "5645:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5658:6:11",
														"nodeType": "YulTypedName",
														"src": "5658:6:11",
														"type": ""
													}
												],
												"src": "5589:393:11"
											},
											{
												"body": {
													"nativeSrc": "6020:28:11",
													"nodeType": "YulBlock",
													"src": "6020:28:11",
													"statements": [
														{
															"nativeSrc": "6030:12:11",
															"nodeType": "YulAssignment",
															"src": "6030:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "6037:5:11",
																"nodeType": "YulIdentifier",
																"src": "6037:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6030:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6030:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5988:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6006:5:11",
														"nodeType": "YulTypedName",
														"src": "6006:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6016:3:11",
														"nodeType": "YulTypedName",
														"src": "6016:3:11",
														"type": ""
													}
												],
												"src": "5988:60:11"
											},
											{
												"body": {
													"nativeSrc": "6114:82:11",
													"nodeType": "YulBlock",
													"src": "6114:82:11",
													"statements": [
														{
															"nativeSrc": "6124:66:11",
															"nodeType": "YulAssignment",
															"src": "6124:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6182:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6182:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6164:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "6164:17:11"
																				},
																				"nativeSrc": "6164:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6164:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "6155:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "6155:8:11"
																		},
																		"nativeSrc": "6155:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6137:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "6137:17:11"
																},
																"nativeSrc": "6137:53:11",
																"nodeType": "YulFunctionCall",
																"src": "6137:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "6124:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "6124:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "6054:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6094:5:11",
														"nodeType": "YulTypedName",
														"src": "6094:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "6104:9:11",
														"nodeType": "YulTypedName",
														"src": "6104:9:11",
														"type": ""
													}
												],
												"src": "6054:142:11"
											},
											{
												"body": {
													"nativeSrc": "6249:28:11",
													"nodeType": "YulBlock",
													"src": "6249:28:11",
													"statements": [
														{
															"nativeSrc": "6259:12:11",
															"nodeType": "YulAssignment",
															"src": "6259:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "6266:5:11",
																"nodeType": "YulIdentifier",
																"src": "6266:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6259:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6259:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "6202:75:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:11",
														"nodeType": "YulTypedName",
														"src": "6235:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6245:3:11",
														"nodeType": "YulTypedName",
														"src": "6245:3:11",
														"type": ""
													}
												],
												"src": "6202:75:11"
											},
											{
												"body": {
													"nativeSrc": "6359:193:11",
													"nodeType": "YulBlock",
													"src": "6359:193:11",
													"statements": [
														{
															"nativeSrc": "6369:63:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6369:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "6424:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "6424:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "6393:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "6393:30:11"
																},
																"nativeSrc": "6393:39:11",
																"nodeType": "YulFunctionCall",
																"src": "6393:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "6373:16:11",
																	"nodeType": "YulTypedName",
																	"src": "6373:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6448:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6448:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "6488:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "6488:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "6482:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "6482:5:11"
																				},
																				"nativeSrc": "6482:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6482:11:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6495:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6495:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "6527:16:11",
																						"nodeType": "YulIdentifier",
																						"src": "6527:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "6503:23:11",
																					"nodeType": "YulIdentifier",
																					"src": "6503:23:11"
																				},
																				"nativeSrc": "6503:41:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6503:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "6454:27:11",
																			"nodeType": "YulIdentifier",
																			"src": "6454:27:11"
																		},
																		"nativeSrc": "6454:91:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6454:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "6441:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6441:6:11"
																},
																"nativeSrc": "6441:105:11",
																"nodeType": "YulFunctionCall",
																"src": "6441:105:11"
															},
															"nativeSrc": "6441:105:11",
															"nodeType": "YulExpressionStatement",
															"src": "6441:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "6283:269:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6336:4:11",
														"nodeType": "YulTypedName",
														"src": "6336:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6342:6:11",
														"nodeType": "YulTypedName",
														"src": "6342:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "6350:7:11",
														"nodeType": "YulTypedName",
														"src": "6350:7:11",
														"type": ""
													}
												],
												"src": "6283:269:11"
											},
											{
												"body": {
													"nativeSrc": "6607:24:11",
													"nodeType": "YulBlock",
													"src": "6607:24:11",
													"statements": [
														{
															"nativeSrc": "6617:8:11",
															"nodeType": "YulAssignment",
															"src": "6617:8:11",
															"value": {
																"kind": "number",
																"nativeSrc": "6624:1:11",
																"nodeType": "YulLiteral",
																"src": "6624:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6617:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6617:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "6558:73:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6603:3:11",
														"nodeType": "YulTypedName",
														"src": "6603:3:11",
														"type": ""
													}
												],
												"src": "6558:73:11"
											},
											{
												"body": {
													"nativeSrc": "6690:136:11",
													"nodeType": "YulBlock",
													"src": "6690:136:11",
													"statements": [
														{
															"nativeSrc": "6700:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6700:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6714:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "6714:30:11"
																},
																"nativeSrc": "6714:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6714:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6704:6:11",
																	"nodeType": "YulTypedName",
																	"src": "6704:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6799:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6799:4:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6805:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6805:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6813:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6813:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6755:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6755:43:11"
																},
																"nativeSrc": "6755:65:11",
																"nodeType": "YulFunctionCall",
																"src": "6755:65:11"
															},
															"nativeSrc": "6755:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "6755:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6637:189:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6676:4:11",
														"nodeType": "YulTypedName",
														"src": "6676:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6682:6:11",
														"nodeType": "YulTypedName",
														"src": "6682:6:11",
														"type": ""
													}
												],
												"src": "6637:189:11"
											},
											{
												"body": {
													"nativeSrc": "6882:136:11",
													"nodeType": "YulBlock",
													"src": "6882:136:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6949:63:11",
																"nodeType": "YulBlock",
																"src": "6949:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6993:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "6993:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7000:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7000:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6963:29:11",
																				"nodeType": "YulIdentifier",
																				"src": "6963:29:11"
																			},
																			"nativeSrc": "6963:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6963:39:11"
																		},
																		"nativeSrc": "6963:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6963:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6902:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6902:5:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6909:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6909:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6899:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6899:2:11"
																},
																"nativeSrc": "6899:14:11",
																"nodeType": "YulFunctionCall",
																"src": "6899:14:11"
															},
															"nativeSrc": "6892:120:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6914:26:11",
																"nodeType": "YulBlock",
																"src": "6914:26:11",
																"statements": [
																	{
																		"nativeSrc": "6916:22:11",
																		"nodeType": "YulAssignment",
																		"src": "6916:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6929:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "6929:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6936:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6936:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6925:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6925:3:11"
																			},
																			"nativeSrc": "6925:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6925:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6916:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6916:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6896:2:11",
																"nodeType": "YulBlock",
																"src": "6896:2:11",
																"statements": []
															},
															"src": "6892:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6832:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6870:5:11",
														"nodeType": "YulTypedName",
														"src": "6870:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6877:3:11",
														"nodeType": "YulTypedName",
														"src": "6877:3:11",
														"type": ""
													}
												],
												"src": "6832:186:11"
											},
											{
												"body": {
													"nativeSrc": "7103:464:11",
													"nodeType": "YulBlock",
													"src": "7103:464:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7129:431:11",
																"nodeType": "YulBlock",
																"src": "7129:431:11",
																"statements": [
																	{
																		"nativeSrc": "7143:54:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7143:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "7191:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "7191:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "7159:31:11",
																				"nodeType": "YulIdentifier",
																				"src": "7159:31:11"
																			},
																			"nativeSrc": "7159:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7159:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "7147:8:11",
																				"nodeType": "YulTypedName",
																				"src": "7147:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7210:63:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7210:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "7233:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "7233:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "7261:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "7261:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "7243:17:11",
																						"nodeType": "YulIdentifier",
																						"src": "7243:17:11"
																					},
																					"nativeSrc": "7243:29:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7243:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7229:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "7229:3:11"
																			},
																			"nativeSrc": "7229:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7229:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "7214:11:11",
																				"nodeType": "YulTypedName",
																				"src": "7214:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7430:27:11",
																			"nodeType": "YulBlock",
																			"src": "7430:27:11",
																			"statements": [
																				{
																					"nativeSrc": "7432:23:11",
																					"nodeType": "YulAssignment",
																					"src": "7432:23:11",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "7447:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "7447:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "7432:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "7432:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "7414:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "7414:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7426:2:11",
																					"nodeType": "YulLiteral",
																					"src": "7426:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "7411:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "7411:2:11"
																			},
																			"nativeSrc": "7411:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7411:18:11"
																		},
																		"nativeSrc": "7408:49:11",
																		"nodeType": "YulIf",
																		"src": "7408:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "7499:11:11",
																					"nodeType": "YulIdentifier",
																					"src": "7499:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "7516:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "7516:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "7544:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "7544:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "7526:17:11",
																								"nodeType": "YulIdentifier",
																								"src": "7526:17:11"
																							},
																							"nativeSrc": "7526:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "7526:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7512:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "7512:3:11"
																					},
																					"nativeSrc": "7512:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "7512:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "7470:28:11",
																				"nodeType": "YulIdentifier",
																				"src": "7470:28:11"
																			},
																			"nativeSrc": "7470:80:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7470:80:11"
																		},
																		"nativeSrc": "7470:80:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7470:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "7120:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7120:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7125:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7125:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7117:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7117:2:11"
																},
																"nativeSrc": "7117:11:11",
																"nodeType": "YulFunctionCall",
																"src": "7117:11:11"
															},
															"nativeSrc": "7114:446:11",
															"nodeType": "YulIf",
															"src": "7114:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "7024:543:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "7079:5:11",
														"nodeType": "YulTypedName",
														"src": "7079:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7086:3:11",
														"nodeType": "YulTypedName",
														"src": "7086:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "7091:10:11",
														"nodeType": "YulTypedName",
														"src": "7091:10:11",
														"type": ""
													}
												],
												"src": "7024:543:11"
											},
											{
												"body": {
													"nativeSrc": "7636:54:11",
													"nodeType": "YulBlock",
													"src": "7636:54:11",
													"statements": [
														{
															"nativeSrc": "7646:37:11",
															"nodeType": "YulAssignment",
															"src": "7646:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7671:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7671:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7677:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7677:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7667:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7667:3:11"
																},
																"nativeSrc": "7667:16:11",
																"nodeType": "YulFunctionCall",
																"src": "7667:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7646:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "7646:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7573:117:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7611:4:11",
														"nodeType": "YulTypedName",
														"src": "7611:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7617:5:11",
														"nodeType": "YulTypedName",
														"src": "7617:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7627:8:11",
														"nodeType": "YulTypedName",
														"src": "7627:8:11",
														"type": ""
													}
												],
												"src": "7573:117:11"
											},
											{
												"body": {
													"nativeSrc": "7747:118:11",
													"nodeType": "YulBlock",
													"src": "7747:118:11",
													"statements": [
														{
															"nativeSrc": "7757:68:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7757:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7806:1:11",
																						"nodeType": "YulLiteral",
																						"src": "7806:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7809:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "7809:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7802:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7802:3:11"
																				},
																				"nativeSrc": "7802:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7802:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7821:1:11",
																						"nodeType": "YulLiteral",
																						"src": "7821:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7817:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7817:3:11"
																				},
																				"nativeSrc": "7817:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7817:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7773:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "7773:28:11"
																		},
																		"nativeSrc": "7773:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7773:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7769:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7769:3:11"
																},
																"nativeSrc": "7769:56:11",
																"nodeType": "YulFunctionCall",
																"src": "7769:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7761:4:11",
																	"nodeType": "YulTypedName",
																	"src": "7761:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7834:25:11",
															"nodeType": "YulAssignment",
															"src": "7834:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7848:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7848:4:11"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7854:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7854:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7844:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7844:3:11"
																},
																"nativeSrc": "7844:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7844:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7834:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7834:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7696:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7724:4:11",
														"nodeType": "YulTypedName",
														"src": "7724:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7730:5:11",
														"nodeType": "YulTypedName",
														"src": "7730:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7740:6:11",
														"nodeType": "YulTypedName",
														"src": "7740:6:11",
														"type": ""
													}
												],
												"src": "7696:169:11"
											},
											{
												"body": {
													"nativeSrc": "7951:214:11",
													"nodeType": "YulBlock",
													"src": "7951:214:11",
													"statements": [
														{
															"nativeSrc": "8084:37:11",
															"nodeType": "YulAssignment",
															"src": "8084:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8111:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8111:4:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "8117:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8117:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "8092:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "8092:18:11"
																},
																"nativeSrc": "8092:29:11",
																"nodeType": "YulFunctionCall",
																"src": "8092:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "8084:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8084:4:11"
																}
															]
														},
														{
															"nativeSrc": "8130:29:11",
															"nodeType": "YulAssignment",
															"src": "8130:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8141:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8141:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8151:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8151:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "8154:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8154:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8147:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8147:3:11"
																		},
																		"nativeSrc": "8147:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8147:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8138:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8138:2:11"
																},
																"nativeSrc": "8138:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8138:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "8130:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8130:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7870:295:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7932:4:11",
														"nodeType": "YulTypedName",
														"src": "7932:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7938:3:11",
														"nodeType": "YulTypedName",
														"src": "7938:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7946:4:11",
														"nodeType": "YulTypedName",
														"src": "7946:4:11",
														"type": ""
													}
												],
												"src": "7870:295:11"
											},
											{
												"body": {
													"nativeSrc": "8262:1303:11",
													"nodeType": "YulBlock",
													"src": "8262:1303:11",
													"statements": [
														{
															"nativeSrc": "8273:51:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8273:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8320:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8320:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8287:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "8287:32:11"
																},
																"nativeSrc": "8287:37:11",
																"nodeType": "YulFunctionCall",
																"src": "8287:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "8277:6:11",
																	"nodeType": "YulTypedName",
																	"src": "8277:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8409:22:11",
																"nodeType": "YulBlock",
																"src": "8409:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8411:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "8411:16:11"
																			},
																			"nativeSrc": "8411:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8411:18:11"
																		},
																		"nativeSrc": "8411:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8411:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8381:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8381:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8389:18:11",
																		"nodeType": "YulLiteral",
																		"src": "8389:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8378:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8378:2:11"
																},
																"nativeSrc": "8378:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8378:30:11"
															},
															"nativeSrc": "8375:56:11",
															"nodeType": "YulIf",
															"src": "8375:56:11"
														},
														{
															"nativeSrc": "8441:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8441:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "8487:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "8487:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "8481:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "8481:5:11"
																		},
																		"nativeSrc": "8481:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8481:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "8455:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "8455:25:11"
																},
																"nativeSrc": "8455:38:11",
																"nodeType": "YulFunctionCall",
																"src": "8455:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "8445:6:11",
																	"nodeType": "YulTypedName",
																	"src": "8445:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8586:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8586:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8592:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8592:6:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8600:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8600:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "8540:45:11",
																	"nodeType": "YulIdentifier",
																	"src": "8540:45:11"
																},
																"nativeSrc": "8540:67:11",
																"nodeType": "YulFunctionCall",
																"src": "8540:67:11"
															},
															"nativeSrc": "8540:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "8540:67:11"
														},
														{
															"nativeSrc": "8617:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8617:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "8634:1:11",
																"nodeType": "YulLiteral",
																"src": "8634:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8621:9:11",
																	"nodeType": "YulTypedName",
																	"src": "8621:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8645:17:11",
															"nodeType": "YulAssignment",
															"src": "8645:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "8658:4:11",
																"nodeType": "YulLiteral",
																"src": "8658:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8645:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "8645:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8709:611:11",
																		"nodeType": "YulBlock",
																		"src": "8709:611:11",
																		"statements": [
																			{
																				"nativeSrc": "8723:37:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8723:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8742:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "8742:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8754:4:11",
																									"nodeType": "YulLiteral",
																									"src": "8754:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8750:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "8750:3:11"
																							},
																							"nativeSrc": "8750:9:11",
																							"nodeType": "YulFunctionCall",
																							"src": "8750:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8738:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "8738:3:11"
																					},
																					"nativeSrc": "8738:22:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8738:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8727:7:11",
																						"nodeType": "YulTypedName",
																						"src": "8727:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8774:51:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8774:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8820:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "8820:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8788:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "8788:31:11"
																					},
																					"nativeSrc": "8788:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8788:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8778:6:11",
																						"nodeType": "YulTypedName",
																						"src": "8778:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8838:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8838:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8847:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8847:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8842:1:11",
																						"nodeType": "YulTypedName",
																						"src": "8842:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8906:163:11",
																					"nodeType": "YulBlock",
																					"src": "8906:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8931:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "8931:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8949:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "8949:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8954:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "8954:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8945:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "8945:3:11"
																												},
																												"nativeSrc": "8945:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "8945:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8939:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "8939:5:11"
																										},
																										"nativeSrc": "8939:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "8939:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8924:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "8924:6:11"
																								},
																								"nativeSrc": "8924:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8924:42:11"
																							},
																							"nativeSrc": "8924:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "8924:42:11"
																						},
																						{
																							"nativeSrc": "8983:24:11",
																							"nodeType": "YulAssignment",
																							"src": "8983:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8997:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "8997:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9005:1:11",
																										"nodeType": "YulLiteral",
																										"src": "9005:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8993:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "8993:3:11"
																								},
																								"nativeSrc": "8993:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8993:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8983:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "8983:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "9024:31:11",
																							"nodeType": "YulAssignment",
																							"src": "9024:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "9041:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "9041:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "9052:2:11",
																										"nodeType": "YulLiteral",
																										"src": "9052:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "9037:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "9037:3:11"
																								},
																								"nativeSrc": "9037:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "9037:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "9024:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "9024:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8872:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "8872:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8875:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "8875:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8869:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "8869:2:11"
																					},
																					"nativeSrc": "8869:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8869:14:11"
																				},
																				"nativeSrc": "8861:208:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8884:21:11",
																					"nodeType": "YulBlock",
																					"src": "8884:21:11",
																					"statements": [
																						{
																							"nativeSrc": "8886:17:11",
																							"nodeType": "YulAssignment",
																							"src": "8886:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8895:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "8895:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8898:4:11",
																										"nodeType": "YulLiteral",
																										"src": "8898:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8891:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "8891:3:11"
																								},
																								"nativeSrc": "8891:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8891:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8886:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "8886:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8865:3:11",
																					"nodeType": "YulBlock",
																					"src": "8865:3:11",
																					"statements": []
																				},
																				"src": "8861:208:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "9105:156:11",
																					"nodeType": "YulBlock",
																					"src": "9105:156:11",
																					"statements": [
																						{
																							"nativeSrc": "9123:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "9123:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9150:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "9150:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9155:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "9155:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9146:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "9146:3:11"
																										},
																										"nativeSrc": "9146:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "9146:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9140:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "9140:5:11"
																								},
																								"nativeSrc": "9140:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "9140:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "9127:9:11",
																									"nodeType": "YulTypedName",
																									"src": "9127:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "9190:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "9190:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "9217:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "9217:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "9232:6:11",
																														"nodeType": "YulIdentifier",
																														"src": "9232:6:11"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "9240:4:11",
																														"nodeType": "YulLiteral",
																														"src": "9240:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "9228:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "9228:3:11"
																												},
																												"nativeSrc": "9228:17:11",
																												"nodeType": "YulFunctionCall",
																												"src": "9228:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "9198:18:11",
																											"nodeType": "YulIdentifier",
																											"src": "9198:18:11"
																										},
																										"nativeSrc": "9198:48:11",
																										"nodeType": "YulFunctionCall",
																										"src": "9198:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "9183:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "9183:6:11"
																								},
																								"nativeSrc": "9183:64:11",
																								"nodeType": "YulFunctionCall",
																								"src": "9183:64:11"
																							},
																							"nativeSrc": "9183:64:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "9183:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "9088:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "9088:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "9097:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "9097:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "9085:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "9085:2:11"
																					},
																					"nativeSrc": "9085:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9085:19:11"
																				},
																				"nativeSrc": "9082:179:11",
																				"nodeType": "YulIf",
																				"src": "9082:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9281:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "9281:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "9295:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "9295:6:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "9303:1:11",
																											"nodeType": "YulLiteral",
																											"src": "9303:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "9291:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "9291:3:11"
																									},
																									"nativeSrc": "9291:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "9291:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "9307:1:11",
																									"nodeType": "YulLiteral",
																									"src": "9307:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "9287:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "9287:3:11"
																							},
																							"nativeSrc": "9287:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "9287:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9274:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9274:6:11"
																					},
																					"nativeSrc": "9274:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9274:36:11"
																				},
																				"nativeSrc": "9274:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "9274:36:11"
																			}
																		]
																	},
																	"nativeSrc": "8702:618:11",
																	"nodeType": "YulCase",
																	"src": "8702:618:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8707:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8707:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "9337:222:11",
																		"nodeType": "YulBlock",
																		"src": "9337:222:11",
																		"statements": [
																			{
																				"nativeSrc": "9351:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "9351:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "9364:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9364:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "9355:5:11",
																						"nodeType": "YulTypedName",
																						"src": "9355:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "9388:67:11",
																					"nodeType": "YulBlock",
																					"src": "9388:67:11",
																					"statements": [
																						{
																							"nativeSrc": "9406:35:11",
																							"nodeType": "YulAssignment",
																							"src": "9406:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "9425:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "9425:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "9430:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "9430:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "9421:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "9421:3:11"
																										},
																										"nativeSrc": "9421:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "9421:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "9415:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "9415:5:11"
																								},
																								"nativeSrc": "9415:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "9415:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "9406:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "9406:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "9381:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "9381:6:11"
																				},
																				"nativeSrc": "9378:77:11",
																				"nodeType": "YulIf",
																				"src": "9378:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "9475:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "9475:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "9534:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "9534:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "9541:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "9541:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "9481:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "9481:52:11"
																							},
																							"nativeSrc": "9481:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "9481:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "9468:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "9468:6:11"
																					},
																					"nativeSrc": "9468:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "9468:81:11"
																				},
																				"nativeSrc": "9468:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "9468:81:11"
																			}
																		]
																	},
																	"nativeSrc": "9329:230:11",
																	"nodeType": "YulCase",
																	"src": "9329:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8682:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8682:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8690:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8690:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8679:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8679:2:11"
																},
																"nativeSrc": "8679:14:11",
																"nodeType": "YulFunctionCall",
																"src": "8679:14:11"
															},
															"nativeSrc": "8672:887:11",
															"nodeType": "YulSwitch",
															"src": "8672:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "8170:1395:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "8251:4:11",
														"nodeType": "YulTypedName",
														"src": "8251:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "8257:3:11",
														"nodeType": "YulTypedName",
														"src": "8257:3:11",
														"type": ""
													}
												],
												"src": "8170:1395:11"
											},
											{
												"body": {
													"nativeSrc": "9667:73:11",
													"nodeType": "YulBlock",
													"src": "9667:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9684:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9684:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9689:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9689:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9677:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9677:6:11"
																},
																"nativeSrc": "9677:19:11",
																"nodeType": "YulFunctionCall",
																"src": "9677:19:11"
															},
															"nativeSrc": "9677:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "9677:19:11"
														},
														{
															"nativeSrc": "9705:29:11",
															"nodeType": "YulAssignment",
															"src": "9705:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9724:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9724:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9729:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9729:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9720:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9720:3:11"
																},
																"nativeSrc": "9720:14:11",
																"nodeType": "YulFunctionCall",
																"src": "9720:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "9705:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "9705:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "9571:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9639:3:11",
														"nodeType": "YulTypedName",
														"src": "9639:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9644:6:11",
														"nodeType": "YulTypedName",
														"src": "9644:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "9655:11:11",
														"nodeType": "YulTypedName",
														"src": "9655:11:11",
														"type": ""
													}
												],
												"src": "9571:169:11"
											},
											{
												"body": {
													"nativeSrc": "9852:62:11",
													"nodeType": "YulBlock",
													"src": "9852:62:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9874:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9874:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9882:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9882:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9870:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9870:3:11"
																		},
																		"nativeSrc": "9870:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9870:14:11"
																	},
																	{
																		"hexValue": "584170703a206e6f207a65726f206f6d6e69",
																		"kind": "string",
																		"nativeSrc": "9886:20:11",
																		"nodeType": "YulLiteral",
																		"src": "9886:20:11",
																		"type": "",
																		"value": "XApp: no zero omni"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9863:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9863:6:11"
																},
																"nativeSrc": "9863:44:11",
																"nodeType": "YulFunctionCall",
																"src": "9863:44:11"
															},
															"nativeSrc": "9863:44:11",
															"nodeType": "YulExpressionStatement",
															"src": "9863:44:11"
														}
													]
												},
												"name": "store_literal_in_memory_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52",
												"nativeSrc": "9746:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9844:6:11",
														"nodeType": "YulTypedName",
														"src": "9844:6:11",
														"type": ""
													}
												],
												"src": "9746:168:11"
											},
											{
												"body": {
													"nativeSrc": "10066:220:11",
													"nodeType": "YulBlock",
													"src": "10066:220:11",
													"statements": [
														{
															"nativeSrc": "10076:74:11",
															"nodeType": "YulAssignment",
															"src": "10076:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10142:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10142:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10147:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10147:2:11",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10083:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "10083:58:11"
																},
																"nativeSrc": "10083:67:11",
																"nodeType": "YulFunctionCall",
																"src": "10083:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10076:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10076:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10248:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10248:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52",
																	"nativeSrc": "10159:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "10159:88:11"
																},
																"nativeSrc": "10159:93:11",
																"nodeType": "YulFunctionCall",
																"src": "10159:93:11"
															},
															"nativeSrc": "10159:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "10159:93:11"
														},
														{
															"nativeSrc": "10261:19:11",
															"nodeType": "YulAssignment",
															"src": "10261:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10272:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10272:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10277:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10277:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10268:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10268:3:11"
																},
																"nativeSrc": "10268:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10268:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10261:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10261:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9920:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10054:3:11",
														"nodeType": "YulTypedName",
														"src": "10054:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10062:3:11",
														"nodeType": "YulTypedName",
														"src": "10062:3:11",
														"type": ""
													}
												],
												"src": "9920:366:11"
											},
											{
												"body": {
													"nativeSrc": "10463:248:11",
													"nodeType": "YulBlock",
													"src": "10463:248:11",
													"statements": [
														{
															"nativeSrc": "10473:26:11",
															"nodeType": "YulAssignment",
															"src": "10473:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10485:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10485:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10496:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10496:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10481:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10481:3:11"
																},
																"nativeSrc": "10481:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10481:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10473:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10473:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10520:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10520:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10531:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10531:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10516:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10516:3:11"
																		},
																		"nativeSrc": "10516:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10516:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10539:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "10539:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10545:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10545:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10535:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10535:3:11"
																		},
																		"nativeSrc": "10535:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10535:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10509:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:11"
																},
																"nativeSrc": "10509:47:11",
																"nodeType": "YulFunctionCall",
																"src": "10509:47:11"
															},
															"nativeSrc": "10509:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "10509:47:11"
														},
														{
															"nativeSrc": "10565:139:11",
															"nodeType": "YulAssignment",
															"src": "10565:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10699:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10699:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10573:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "10573:124:11"
																},
																"nativeSrc": "10573:131:11",
																"nodeType": "YulFunctionCall",
																"src": "10573:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10565:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10565:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10292:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10443:9:11",
														"nodeType": "YulTypedName",
														"src": "10443:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10458:4:11",
														"nodeType": "YulTypedName",
														"src": "10458:4:11",
														"type": ""
													}
												],
												"src": "10292:419:11"
											},
											{
												"body": {
													"nativeSrc": "10782:53:11",
													"nodeType": "YulBlock",
													"src": "10782:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10799:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10799:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10822:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "10822:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10804:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "10804:17:11"
																		},
																		"nativeSrc": "10804:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10804:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10792:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10792:6:11"
																},
																"nativeSrc": "10792:37:11",
																"nodeType": "YulFunctionCall",
																"src": "10792:37:11"
															},
															"nativeSrc": "10792:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "10792:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10717:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10770:5:11",
														"nodeType": "YulTypedName",
														"src": "10770:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10777:3:11",
														"nodeType": "YulTypedName",
														"src": "10777:3:11",
														"type": ""
													}
												],
												"src": "10717:118:11"
											},
											{
												"body": {
													"nativeSrc": "10939:124:11",
													"nodeType": "YulBlock",
													"src": "10939:124:11",
													"statements": [
														{
															"nativeSrc": "10949:26:11",
															"nodeType": "YulAssignment",
															"src": "10949:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10961:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10961:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10972:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10972:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10957:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10957:3:11"
																},
																"nativeSrc": "10957:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10957:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10949:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10949:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11029:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11029:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11042:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11042:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11053:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11053:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11038:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11038:3:11"
																		},
																		"nativeSrc": "11038:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11038:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10985:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10985:43:11"
																},
																"nativeSrc": "10985:71:11",
																"nodeType": "YulFunctionCall",
																"src": "10985:71:11"
															},
															"nativeSrc": "10985:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "10985:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10841:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10911:9:11",
														"nodeType": "YulTypedName",
														"src": "10911:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10923:6:11",
														"nodeType": "YulTypedName",
														"src": "10923:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10934:4:11",
														"nodeType": "YulTypedName",
														"src": "10934:4:11",
														"type": ""
													}
												],
												"src": "10841:222:11"
											},
											{
												"body": {
													"nativeSrc": "11175:68:11",
													"nodeType": "YulBlock",
													"src": "11175:68:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11197:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11197:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11205:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11205:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11193:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11193:3:11"
																		},
																		"nativeSrc": "11193:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11193:14:11"
																	},
																	{
																		"hexValue": "584170703a20696e76616c696420636f6e66206c6576656c",
																		"kind": "string",
																		"nativeSrc": "11209:26:11",
																		"nodeType": "YulLiteral",
																		"src": "11209:26:11",
																		"type": "",
																		"value": "XApp: invalid conf level"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11186:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11186:6:11"
																},
																"nativeSrc": "11186:50:11",
																"nodeType": "YulFunctionCall",
																"src": "11186:50:11"
															},
															"nativeSrc": "11186:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "11186:50:11"
														}
													]
												},
												"name": "store_literal_in_memory_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5",
												"nativeSrc": "11069:174:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11167:6:11",
														"nodeType": "YulTypedName",
														"src": "11167:6:11",
														"type": ""
													}
												],
												"src": "11069:174:11"
											},
											{
												"body": {
													"nativeSrc": "11395:220:11",
													"nodeType": "YulBlock",
													"src": "11395:220:11",
													"statements": [
														{
															"nativeSrc": "11405:74:11",
															"nodeType": "YulAssignment",
															"src": "11405:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11471:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11471:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11476:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11476:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11412:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "11412:58:11"
																},
																"nativeSrc": "11412:67:11",
																"nodeType": "YulFunctionCall",
																"src": "11412:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11405:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11405:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11577:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11577:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5",
																	"nativeSrc": "11488:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "11488:88:11"
																},
																"nativeSrc": "11488:93:11",
																"nodeType": "YulFunctionCall",
																"src": "11488:93:11"
															},
															"nativeSrc": "11488:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "11488:93:11"
														},
														{
															"nativeSrc": "11590:19:11",
															"nodeType": "YulAssignment",
															"src": "11590:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11601:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11601:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11606:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11606:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11597:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11597:3:11"
																},
																"nativeSrc": "11597:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11597:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11590:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11590:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11249:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11383:3:11",
														"nodeType": "YulTypedName",
														"src": "11383:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11391:3:11",
														"nodeType": "YulTypedName",
														"src": "11391:3:11",
														"type": ""
													}
												],
												"src": "11249:366:11"
											},
											{
												"body": {
													"nativeSrc": "11792:248:11",
													"nodeType": "YulBlock",
													"src": "11792:248:11",
													"statements": [
														{
															"nativeSrc": "11802:26:11",
															"nodeType": "YulAssignment",
															"src": "11802:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11814:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11814:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11825:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11825:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11810:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11810:3:11"
																},
																"nativeSrc": "11810:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11810:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11802:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11802:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11849:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11849:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11860:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11860:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11845:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11845:3:11"
																		},
																		"nativeSrc": "11845:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11845:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11868:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11868:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11874:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11874:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11864:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11864:3:11"
																		},
																		"nativeSrc": "11864:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11864:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11838:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11838:6:11"
																},
																"nativeSrc": "11838:47:11",
																"nodeType": "YulFunctionCall",
																"src": "11838:47:11"
															},
															"nativeSrc": "11838:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "11838:47:11"
														},
														{
															"nativeSrc": "11894:139:11",
															"nodeType": "YulAssignment",
															"src": "11894:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12028:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12028:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11902:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "11902:124:11"
																},
																"nativeSrc": "11902:131:11",
																"nodeType": "YulFunctionCall",
																"src": "11902:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11894:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11894:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11621:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11772:9:11",
														"nodeType": "YulTypedName",
														"src": "11772:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11787:4:11",
														"nodeType": "YulTypedName",
														"src": "11787:4:11",
														"type": ""
													}
												],
												"src": "11621:419:11"
											},
											{
												"body": {
													"nativeSrc": "12089:43:11",
													"nodeType": "YulBlock",
													"src": "12089:43:11",
													"statements": [
														{
															"nativeSrc": "12099:27:11",
															"nodeType": "YulAssignment",
															"src": "12099:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12114:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "12114:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12121:4:11",
																		"nodeType": "YulLiteral",
																		"src": "12121:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12110:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12110:3:11"
																},
																"nativeSrc": "12110:16:11",
																"nodeType": "YulFunctionCall",
																"src": "12110:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12099:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "12099:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "12046:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12071:5:11",
														"nodeType": "YulTypedName",
														"src": "12071:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12081:7:11",
														"nodeType": "YulTypedName",
														"src": "12081:7:11",
														"type": ""
													}
												],
												"src": "12046:86:11"
											},
											{
												"body": {
													"nativeSrc": "12199:51:11",
													"nodeType": "YulBlock",
													"src": "12199:51:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12216:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12216:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12237:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "12237:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "12221:15:11",
																			"nodeType": "YulIdentifier",
																			"src": "12221:15:11"
																		},
																		"nativeSrc": "12221:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12221:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12209:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12209:6:11"
																},
																"nativeSrc": "12209:35:11",
																"nodeType": "YulFunctionCall",
																"src": "12209:35:11"
															},
															"nativeSrc": "12209:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "12209:35:11"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "12138:112:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12187:5:11",
														"nodeType": "YulTypedName",
														"src": "12187:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12194:3:11",
														"nodeType": "YulTypedName",
														"src": "12194:3:11",
														"type": ""
													}
												],
												"src": "12138:112:11"
											},
											{
												"body": {
													"nativeSrc": "12350:120:11",
													"nodeType": "YulBlock",
													"src": "12350:120:11",
													"statements": [
														{
															"nativeSrc": "12360:26:11",
															"nodeType": "YulAssignment",
															"src": "12360:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12372:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12372:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12383:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12383:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12368:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12368:3:11"
																},
																"nativeSrc": "12368:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12368:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12360:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12360:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12436:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12436:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12449:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12449:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12460:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12460:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12445:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12445:3:11"
																		},
																		"nativeSrc": "12445:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12445:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "12396:39:11",
																	"nodeType": "YulIdentifier",
																	"src": "12396:39:11"
																},
																"nativeSrc": "12396:67:11",
																"nodeType": "YulFunctionCall",
																"src": "12396:67:11"
															},
															"nativeSrc": "12396:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "12396:67:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "12256:214:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12322:9:11",
														"nodeType": "YulTypedName",
														"src": "12322:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12334:6:11",
														"nodeType": "YulTypedName",
														"src": "12334:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12345:4:11",
														"nodeType": "YulTypedName",
														"src": "12345:4:11",
														"type": ""
													}
												],
												"src": "12256:214:11"
											},
											{
												"body": {
													"nativeSrc": "12504:152:11",
													"nodeType": "YulBlock",
													"src": "12504:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12521:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12521:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12524:77:11",
																		"nodeType": "YulLiteral",
																		"src": "12524:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12514:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12514:6:11"
																},
																"nativeSrc": "12514:88:11",
																"nodeType": "YulFunctionCall",
																"src": "12514:88:11"
															},
															"nativeSrc": "12514:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "12514:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12618:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12618:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12621:4:11",
																		"nodeType": "YulLiteral",
																		"src": "12621:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12611:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12611:6:11"
																},
																"nativeSrc": "12611:15:11",
																"nodeType": "YulFunctionCall",
																"src": "12611:15:11"
															},
															"nativeSrc": "12611:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "12611:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12642:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12642:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12645:4:11",
																		"nodeType": "YulLiteral",
																		"src": "12645:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12635:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12635:6:11"
																},
																"nativeSrc": "12635:15:11",
																"nodeType": "YulFunctionCall",
																"src": "12635:15:11"
															},
															"nativeSrc": "12635:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "12635:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12476:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "12476:180:11"
											},
											{
												"body": {
													"nativeSrc": "12706:147:11",
													"nodeType": "YulBlock",
													"src": "12706:147:11",
													"statements": [
														{
															"nativeSrc": "12716:25:11",
															"nodeType": "YulAssignment",
															"src": "12716:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12739:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12739:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12721:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12721:17:11"
																},
																"nativeSrc": "12721:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12721:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12716:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12716:1:11"
																}
															]
														},
														{
															"nativeSrc": "12750:25:11",
															"nodeType": "YulAssignment",
															"src": "12750:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12773:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12773:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12755:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12755:17:11"
																},
																"nativeSrc": "12755:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12755:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12750:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12750:1:11"
																}
															]
														},
														{
															"nativeSrc": "12784:16:11",
															"nodeType": "YulAssignment",
															"src": "12784:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12795:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12795:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12798:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12798:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12791:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12791:3:11"
																},
																"nativeSrc": "12791:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12791:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12784:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12784:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12824:22:11",
																"nodeType": "YulBlock",
																"src": "12824:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12826:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "12826:16:11"
																			},
																			"nativeSrc": "12826:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12826:18:11"
																		},
																		"nativeSrc": "12826:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12826:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12816:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12816:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12819:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12819:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12813:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "12813:2:11"
																},
																"nativeSrc": "12813:10:11",
																"nodeType": "YulFunctionCall",
																"src": "12813:10:11"
															},
															"nativeSrc": "12810:36:11",
															"nodeType": "YulIf",
															"src": "12810:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12662:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12693:1:11",
														"nodeType": "YulTypedName",
														"src": "12693:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12696:1:11",
														"nodeType": "YulTypedName",
														"src": "12696:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12702:3:11",
														"nodeType": "YulTypedName",
														"src": "12702:3:11",
														"type": ""
													}
												],
												"src": "12662:191:11"
											},
											{
												"body": {
													"nativeSrc": "12924:53:11",
													"nodeType": "YulBlock",
													"src": "12924:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12941:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12941:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12964:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "12964:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12946:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "12946:17:11"
																		},
																		"nativeSrc": "12946:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12946:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12934:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12934:6:11"
																},
																"nativeSrc": "12934:37:11",
																"nodeType": "YulFunctionCall",
																"src": "12934:37:11"
															},
															"nativeSrc": "12934:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "12934:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "12859:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12912:5:11",
														"nodeType": "YulTypedName",
														"src": "12912:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12919:3:11",
														"nodeType": "YulTypedName",
														"src": "12919:3:11",
														"type": ""
													}
												],
												"src": "12859:118:11"
											},
											{
												"body": {
													"nativeSrc": "13137:288:11",
													"nodeType": "YulBlock",
													"src": "13137:288:11",
													"statements": [
														{
															"nativeSrc": "13147:26:11",
															"nodeType": "YulAssignment",
															"src": "13147:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13159:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13159:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13170:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13170:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13155:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13155:3:11"
																},
																"nativeSrc": "13155:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13155:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13147:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13147:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13227:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13227:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13240:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13240:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13251:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13251:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13236:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13236:3:11"
																		},
																		"nativeSrc": "13236:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13236:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13183:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13183:43:11"
																},
																"nativeSrc": "13183:71:11",
																"nodeType": "YulFunctionCall",
																"src": "13183:71:11"
															},
															"nativeSrc": "13183:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "13183:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13308:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13308:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13321:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13321:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13332:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13332:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13317:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13317:3:11"
																		},
																		"nativeSrc": "13317:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13317:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13264:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13264:43:11"
																},
																"nativeSrc": "13264:72:11",
																"nodeType": "YulFunctionCall",
																"src": "13264:72:11"
															},
															"nativeSrc": "13264:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "13264:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13390:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13390:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13403:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13403:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13414:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13414:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13399:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13399:3:11"
																		},
																		"nativeSrc": "13399:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13399:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13346:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13346:43:11"
																},
																"nativeSrc": "13346:72:11",
																"nodeType": "YulFunctionCall",
																"src": "13346:72:11"
															},
															"nativeSrc": "13346:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "13346:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12983:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13093:9:11",
														"nodeType": "YulTypedName",
														"src": "13093:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13105:6:11",
														"nodeType": "YulTypedName",
														"src": "13105:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13113:6:11",
														"nodeType": "YulTypedName",
														"src": "13113:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13121:6:11",
														"nodeType": "YulTypedName",
														"src": "13121:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13132:4:11",
														"nodeType": "YulTypedName",
														"src": "13132:4:11",
														"type": ""
													}
												],
												"src": "12983:442:11"
											},
											{
												"body": {
													"nativeSrc": "13529:124:11",
													"nodeType": "YulBlock",
													"src": "13529:124:11",
													"statements": [
														{
															"nativeSrc": "13539:26:11",
															"nodeType": "YulAssignment",
															"src": "13539:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13551:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13551:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13562:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13562:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13547:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13547:3:11"
																},
																"nativeSrc": "13547:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13547:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13539:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13539:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13619:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13619:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13632:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13632:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13643:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13643:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13628:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13628:3:11"
																		},
																		"nativeSrc": "13628:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13628:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13575:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13575:43:11"
																},
																"nativeSrc": "13575:71:11",
																"nodeType": "YulFunctionCall",
																"src": "13575:71:11"
															},
															"nativeSrc": "13575:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "13575:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13431:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13501:9:11",
														"nodeType": "YulTypedName",
														"src": "13501:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13513:6:11",
														"nodeType": "YulTypedName",
														"src": "13513:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13524:4:11",
														"nodeType": "YulTypedName",
														"src": "13524:4:11",
														"type": ""
													}
												],
												"src": "13431:222:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52(memPtr) {\n\n        mstore(add(memPtr, 0), \"XApp: no zero omni\")\n\n    }\n\n    function abi_encode_t_stringliteral_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5(memPtr) {\n\n        mstore(add(memPtr, 0), \"XApp: invalid conf level\")\n\n    }\n\n    function abi_encode_t_stringliteral_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161267b38038061267b833981810160405281019061003191906106ba565b8383838060016100468261009360201b60201c565b6100558161017a60201b60201c565b50508260059081610066919061095a565b508160069081610076919061095a565b5050505061008a338261021c60201b60201c565b50505050610c22565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610101576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100f890610a83565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f79162c8d053a07e70cdc1ccc536f0440b571f8508377d2bef51094fadab98f478160405161016f9190610ab0565b60405180910390a150565b610189816102a160201b60201c565b6101c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bf90610b13565b60405180910390fd5b805f60146101000a81548160ff021916908360ff1602179055507f8de08a798b4e50b4f351c1eaa91a11530043802be3ffac2df87db0c45a2e8483816040516102119190610b4c565b60405180910390a150565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361028c575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102839190610ab0565b60405180910390fd5b61029d5f83836102c460201b60201c565b5050565b5f600160ff168260ff1614806102bd5750600460ff168260ff16145b9050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610314578060045f8282546103089190610b92565b925050819055506103e4565b5f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561039e578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161039593929190610bd4565b60405180910390fd5b81810360025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361042b578060045f8282540392505081905550610476565b8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104d39190610c09565b60405180910390a3505050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61053f826104f9565b810181811067ffffffffffffffff8211171561055e5761055d610509565b5b80604052505050565b5f6105706104e0565b905061057c8282610536565b919050565b5f67ffffffffffffffff82111561059b5761059a610509565b5b6105a4826104f9565b9050602081019050919050565b8281835e5f83830152505050565b5f6105d16105cc84610581565b610567565b9050828152602081018484840111156105ed576105ec6104f5565b5b6105f88482856105b1565b509392505050565b5f82601f830112610614576106136104f1565b5b81516106248482602086016105bf565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6106568261062d565b9050919050565b6106668161064c565b8114610670575f80fd5b50565b5f815190506106818161065d565b92915050565b5f819050919050565b61069981610687565b81146106a3575f80fd5b50565b5f815190506106b481610690565b92915050565b5f805f80608085870312156106d2576106d16104e9565b5b5f85015167ffffffffffffffff8111156106ef576106ee6104ed565b5b6106fb87828801610600565b945050602085015167ffffffffffffffff81111561071c5761071b6104ed565b5b61072887828801610600565b935050604061073987828801610673565b925050606061074a878288016106a6565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806107a457607f821691505b6020821081036107b7576107b6610760565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026108197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826107de565b61082386836107de565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61085e61085961085484610687565b61083b565b610687565b9050919050565b5f819050919050565b61087783610844565b61088b61088382610865565b8484546107ea565b825550505050565b5f90565b61089f610893565b6108aa81848461086e565b505050565b5b818110156108cd576108c25f82610897565b6001810190506108b0565b5050565b601f821115610912576108e3816107bd565b6108ec846107cf565b810160208510156108fb578190505b61090f610907856107cf565b8301826108af565b50505b505050565b5f82821c905092915050565b5f6109325f1984600802610917565b1980831691505092915050565b5f61094a8383610923565b9150826002028217905092915050565b61096382610756565b67ffffffffffffffff81111561097c5761097b610509565b5b610986825461078d565b6109918282856108d1565b5f60209050601f8311600181146109c2575f84156109b0578287015190505b6109ba858261093f565b865550610a21565b601f1984166109d0866107bd565b5f5b828110156109f7578489015182556001820191506020850194506020810190506109d2565b86831015610a145784890151610a10601f891682610923565b8355505b6001600288020188555050505b505050505050565b5f82825260208201905092915050565b7f584170703a206e6f207a65726f206f6d6e6900000000000000000000000000005f82015250565b5f610a6d601283610a29565b9150610a7882610a39565b602082019050919050565b5f6020820190508181035f830152610a9a81610a61565b9050919050565b610aaa8161064c565b82525050565b5f602082019050610ac35f830184610aa1565b92915050565b7f584170703a20696e76616c696420636f6e66206c6576656c00000000000000005f82015250565b5f610afd601883610a29565b9150610b0882610ac9565b602082019050919050565b5f6020820190508181035f830152610b2a81610af1565b9050919050565b5f60ff82169050919050565b610b4681610b31565b82525050565b5f602082019050610b5f5f830184610b3d565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610b9c82610687565b9150610ba783610687565b9250828201905080821115610bbf57610bbe610b65565b5b92915050565b610bce81610687565b82525050565b5f606082019050610be75f830186610aa1565b610bf46020830185610bc5565b610c016040830184610bc5565b949350505050565b5f602082019050610c1c5f830184610bc5565b92915050565b611a4c80610c2f5f395ff3fe6080604052600436106100dc575f3560e01c80634a536a061161007e57806395d89b411161005857806395d89b41146102b6578063a9059cbb146102e0578063d15dcd621461031c578063dd62ed3e14610338576100dc565b80634a536a061461022857806370a082311461025057806374eeb8471461028c576100dc565b806323b872dd116100ba57806323b872dd14610170578063313ce567146101ac57806339acf9f1146101d657806340c10f1914610200576100dc565b806306fdde03146100e0578063095ea7b31461010a57806318160ddd14610146575b5f80fd5b3480156100eb575f80fd5b506100f4610374565b6040516101019190611183565b60405180910390f35b348015610115575f80fd5b50610130600480360381019061012b919061123d565b610404565b60405161013d9190611295565b60405180910390f35b348015610151575f80fd5b5061015a610426565b60405161016791906112bd565b60405180910390f35b34801561017b575f80fd5b50610196600480360381019061019191906112d6565b61042f565b6040516101a39190611295565b60405180910390f35b3480156101b7575f80fd5b506101c061045d565b6040516101cd9190611341565b60405180910390f35b3480156101e1575f80fd5b506101ea610465565b6040516101f791906113b5565b60405180910390f35b34801561020b575f80fd5b506102266004803603810190610221919061123d565b610488565b005b348015610233575f80fd5b5061024e600480360381019061024991906112d6565b610496565b005b34801561025b575f80fd5b50610276600480360381019061027191906113ce565b610633565b60405161028391906112bd565b60405180910390f35b348015610297575f80fd5b506102a0610679565b6040516102ad9190611341565b60405180910390f35b3480156102c1575f80fd5b506102ca61068b565b6040516102d79190611183565b60405180910390f35b3480156102eb575f80fd5b506103066004803603810190610301919061123d565b61071b565b6040516103139190611295565b60405180910390f35b61033660048036038101906103319190611436565b61073d565b005b348015610343575f80fd5b5061035e60048036038101906103599190611486565b61080d565b60405161036b91906112bd565b60405180910390f35b606060058054610383906114f1565b80601f01602080910402602001604051908101604052809291908181526020018280546103af906114f1565b80156103fa5780601f106103d1576101008083540402835291602001916103fa565b820191905f5260205f20905b8154815290600101906020018083116103dd57829003601f168201915b5050505050905090565b5f8061040e61088f565b905061041b818585610896565b600191505092915050565b5f600454905090565b5f8061043961088f565b90506104468582856108a8565b61045185858561093a565b60019150509392505050565b5f6012905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104928282610a2a565b5050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f32700e6040518163ffffffff1660e01b81526004016040805180830381865afa1580156104fd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105219190611612565b60015f820151815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506020820151815f0160086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506105a0610aa9565b6105df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d6906116ad565b60405180910390fd5b6105ea838383610b92565b60015f8082015f6101000a81549067ffffffffffffffff02191690555f820160086101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050505050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60149054906101000a900460ff1681565b60606006805461069a906114f1565b80601f01602080910402602001604051908101604052809291908181526020018280546106c6906114f1565b80156107115780601f106106e857610100808354040283529160200191610711565b820191905f5260205f20905b8154815290600101906020018083116106f457829003601f168201915b5050505050905090565b5f8061072561088f565b905061073281858561093a565b600191505092915050565b5f61074661088f565b905061075381308461093a565b5f308484604051602401610769939291906116da565b604051602081830303815290604052634a536a0660e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090505f6107c0863084620249f0610dae565b905080341015610805576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fc90611759565b60405180910390fd5b505050505050565b5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6108a38383836001610f44565b505050565b5f6108b3848461080d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109345781811015610925578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161091c93929190611777565b60405180910390fd5b61093384848484035f610f44565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109aa575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109a191906117ac565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a1a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a1191906117ac565b60405180910390fd5b610a25838383610b92565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a9a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a9191906117ac565b60405180910390fd5b610aa55f8383610b92565b5050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166355e2448e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b13573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b3791906117ef565b8015610b8d57505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610be2578060045f828254610bd69190611847565b92505081905550610cb2565b5f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610c6c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c6393929190611777565b60405180910390fd5b81810360025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cf9578060045f8282540392505081905550610d44565b8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610da191906112bd565b60405180910390a3505050565b5f805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638dd9523c8786866040518463ffffffff1660e01b8152600401610e0c939291906118db565b602060405180830381865afa158015610e27573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e4b919061192b565b90508047101580610e5c5750803410155b610e9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e92906119a0565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c21dda4f82885f60149054906101000a900460ff168989896040518763ffffffff1660e01b8152600401610f0a9594939291906119be565b5f604051808303818588803b158015610f21575f80fd5b505af1158015610f33573d5f803e3d5ffd5b505050505080915050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fb4575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610fab91906117ac565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611024575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161101b91906117ac565b60405180910390fd5b8160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561110d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161110491906112bd565b60405180910390a35b50505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61115582611113565b61115f818561111d565b935061116f81856020860161112d565b6111788161113b565b840191505092915050565b5f6020820190508181035f83015261119b818461114b565b905092915050565b5f604051905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111d9826111b0565b9050919050565b6111e9816111cf565b81146111f3575f80fd5b50565b5f81359050611204816111e0565b92915050565b5f819050919050565b61121c8161120a565b8114611226575f80fd5b50565b5f8135905061123781611213565b92915050565b5f8060408385031215611253576112526111ac565b5b5f611260858286016111f6565b925050602061127185828601611229565b9150509250929050565b5f8115159050919050565b61128f8161127b565b82525050565b5f6020820190506112a85f830184611286565b92915050565b6112b78161120a565b82525050565b5f6020820190506112d05f8301846112ae565b92915050565b5f805f606084860312156112ed576112ec6111ac565b5b5f6112fa868287016111f6565b935050602061130b868287016111f6565b925050604061131c86828701611229565b9150509250925092565b5f60ff82169050919050565b61133b81611326565b82525050565b5f6020820190506113545f830184611332565b92915050565b5f819050919050565b5f61137d611378611373846111b0565b61135a565b6111b0565b9050919050565b5f61138e82611363565b9050919050565b5f61139f82611384565b9050919050565b6113af81611395565b82525050565b5f6020820190506113c85f8301846113a6565b92915050565b5f602082840312156113e3576113e26111ac565b5b5f6113f0848285016111f6565b91505092915050565b5f67ffffffffffffffff82169050919050565b611415816113f9565b811461141f575f80fd5b50565b5f813590506114308161140c565b92915050565b5f805f6060848603121561144d5761144c6111ac565b5b5f61145a86828701611422565b935050602061146b868287016111f6565b925050604061147c86828701611229565b9150509250925092565b5f806040838503121561149c5761149b6111ac565b5b5f6114a9858286016111f6565b92505060206114ba858286016111f6565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061150857607f821691505b60208210810361151b5761151a6114c4565b5b50919050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61155b8261113b565b810181811067ffffffffffffffff8211171561157a57611579611525565b5b80604052505050565b5f61158c6111a3565b90506115988282611552565b919050565b5f815190506115ab8161140c565b92915050565b5f815190506115bf816111e0565b92915050565b5f604082840312156115da576115d9611521565b5b6115e46040611583565b90505f6115f38482850161159d565b5f830152506020611606848285016115b1565b60208301525092915050565b5f60408284031215611627576116266111ac565b5b5f611634848285016115c5565b91505092915050565b7f4f6d6e6945524332303a204f6e6c792063616c6c61626c65207669612063726f5f8201527f73732d636861696e206d65737361676500000000000000000000000000000000602082015250565b5f61169760308361111d565b91506116a28261163d565b604082019050919050565b5f6020820190508181035f8301526116c48161168b565b9050919050565b6116d4816111cf565b82525050565b5f6060820190506116ed5f8301866116cb565b6116fa60208301856116cb565b61170760408301846112ae565b949350505050565b7f4f6d6e6945524332303a20496e73756666696369656e742066656500000000005f82015250565b5f611743601b8361111d565b915061174e8261170f565b602082019050919050565b5f6020820190508181035f83015261177081611737565b9050919050565b5f60608201905061178a5f8301866116cb565b61179760208301856112ae565b6117a460408301846112ae565b949350505050565b5f6020820190506117bf5f8301846116cb565b92915050565b6117ce8161127b565b81146117d8575f80fd5b50565b5f815190506117e9816117c5565b92915050565b5f60208284031215611804576118036111ac565b5b5f611811848285016117db565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118518261120a565b915061185c8361120a565b92508282019050808211156118745761187361181a565b5b92915050565b611883816113f9565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f6118ad82611889565b6118b78185611893565b93506118c781856020860161112d565b6118d08161113b565b840191505092915050565b5f6060820190506118ee5f83018661187a565b818103602083015261190081856118a3565b905061190f604083018461187a565b949350505050565b5f8151905061192581611213565b92915050565b5f602082840312156119405761193f6111ac565b5b5f61194d84828501611917565b91505092915050565b7f584170703a20696e73756666696369656e742066756e647300000000000000005f82015250565b5f61198a60188361111d565b915061199582611956565b602082019050919050565b5f6020820190508181035f8301526119b78161197e565b9050919050565b5f60a0820190506119d15f83018861187a565b6119de6020830187611332565b6119eb60408301866116cb565b81810360608301526119fd81856118a3565b9050611a0c608083018461187a565b969550505050505056fea264697066735822122046700868c6dfbdf830947272e2181fd8499785655d3d7cee16653aa26672ef4564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x267B CODESIZE SUB DUP1 PUSH2 0x267B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x6BA JUMP JUMPDEST DUP4 DUP4 DUP4 DUP1 PUSH1 0x1 PUSH2 0x46 DUP3 PUSH2 0x93 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x55 DUP2 PUSH2 0x17A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP DUP3 PUSH1 0x5 SWAP1 DUP2 PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x95A JUMP JUMPDEST POP DUP2 PUSH1 0x6 SWAP1 DUP2 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x95A JUMP JUMPDEST POP POP POP POP PUSH2 0x8A CALLER DUP3 PUSH2 0x21C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH2 0xC22 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x101 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8 SWAP1 PUSH2 0xA83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x79162C8D053A07E70CDC1CCC536F0440B571F8508377D2BEF51094FADAB98F47 DUP2 PUSH1 0x40 MLOAD PUSH2 0x16F SWAP2 SWAP1 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x189 DUP2 PUSH2 0x2A1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF SWAP1 PUSH2 0xB13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x8DE08A798B4E50B4F351C1EAA91A11530043802BE3FFAC2DF87DB0C45A2E8483 DUP2 PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0xB4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x28C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29D PUSH0 DUP4 DUP4 PUSH2 0x2C4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ DUP1 PUSH2 0x2BD JUMPI POP PUSH1 0x4 PUSH1 0xFF AND DUP3 PUSH1 0xFF AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x314 JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x308 SWAP2 SWAP1 PUSH2 0xB92 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3E4 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x39E JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x395 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x42B JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x476 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x53F DUP3 PUSH2 0x4F9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x55E JUMPI PUSH2 0x55D PUSH2 0x509 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x570 PUSH2 0x4E0 JUMP JUMPDEST SWAP1 POP PUSH2 0x57C DUP3 DUP3 PUSH2 0x536 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x59B JUMPI PUSH2 0x59A PUSH2 0x509 JUMP JUMPDEST JUMPDEST PUSH2 0x5A4 DUP3 PUSH2 0x4F9 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5D1 PUSH2 0x5CC DUP5 PUSH2 0x581 JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x5ED JUMPI PUSH2 0x5EC PUSH2 0x4F5 JUMP JUMPDEST JUMPDEST PUSH2 0x5F8 DUP5 DUP3 DUP6 PUSH2 0x5B1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x614 JUMPI PUSH2 0x613 PUSH2 0x4F1 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x624 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x5BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x656 DUP3 PUSH2 0x62D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x666 DUP2 PUSH2 0x64C JUMP JUMPDEST DUP2 EQ PUSH2 0x670 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x681 DUP2 PUSH2 0x65D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x699 DUP2 PUSH2 0x687 JUMP JUMPDEST DUP2 EQ PUSH2 0x6A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x6B4 DUP2 PUSH2 0x690 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6D2 JUMPI PUSH2 0x6D1 PUSH2 0x4E9 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6EF JUMPI PUSH2 0x6EE PUSH2 0x4ED JUMP JUMPDEST JUMPDEST PUSH2 0x6FB DUP8 DUP3 DUP9 ADD PUSH2 0x600 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x71C JUMPI PUSH2 0x71B PUSH2 0x4ED JUMP JUMPDEST JUMPDEST PUSH2 0x728 DUP8 DUP3 DUP9 ADD PUSH2 0x600 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x739 DUP8 DUP3 DUP9 ADD PUSH2 0x673 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x74A DUP8 DUP3 DUP9 ADD PUSH2 0x6A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x7A4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7B7 JUMPI PUSH2 0x7B6 PUSH2 0x760 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x819 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x823 DUP7 DUP4 PUSH2 0x7DE JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x85E PUSH2 0x859 PUSH2 0x854 DUP5 PUSH2 0x687 JUMP JUMPDEST PUSH2 0x83B JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x877 DUP4 PUSH2 0x844 JUMP JUMPDEST PUSH2 0x88B PUSH2 0x883 DUP3 PUSH2 0x865 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x7EA JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x89F PUSH2 0x893 JUMP JUMPDEST PUSH2 0x8AA DUP2 DUP5 DUP5 PUSH2 0x86E JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8CD JUMPI PUSH2 0x8C2 PUSH0 DUP3 PUSH2 0x897 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x912 JUMPI PUSH2 0x8E3 DUP2 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x8EC DUP5 PUSH2 0x7CF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x8FB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x90F PUSH2 0x907 DUP6 PUSH2 0x7CF JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x8AF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x932 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x917 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x94A DUP4 DUP4 PUSH2 0x923 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x963 DUP3 PUSH2 0x756 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x97C JUMPI PUSH2 0x97B PUSH2 0x509 JUMP JUMPDEST JUMPDEST PUSH2 0x986 DUP3 SLOAD PUSH2 0x78D JUMP JUMPDEST PUSH2 0x991 DUP3 DUP3 DUP6 PUSH2 0x8D1 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x9C2 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x9B0 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x9BA DUP6 DUP3 PUSH2 0x93F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x9D0 DUP7 PUSH2 0x7BD JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x9F7 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9D2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0xA14 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0xA10 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x923 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x584170703A206E6F207A65726F206F6D6E690000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xA6D PUSH1 0x12 DUP4 PUSH2 0xA29 JUMP JUMPDEST SWAP2 POP PUSH2 0xA78 DUP3 PUSH2 0xA39 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA9A DUP2 PUSH2 0xA61 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAAA DUP2 PUSH2 0x64C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAC3 PUSH0 DUP4 ADD DUP5 PUSH2 0xAA1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x584170703A20696E76616C696420636F6E66206C6576656C0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAFD PUSH1 0x18 DUP4 PUSH2 0xA29 JUMP JUMPDEST SWAP2 POP PUSH2 0xB08 DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB2A DUP2 PUSH2 0xAF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB46 DUP2 PUSH2 0xB31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB5F PUSH0 DUP4 ADD DUP5 PUSH2 0xB3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB9C DUP3 PUSH2 0x687 JUMP JUMPDEST SWAP2 POP PUSH2 0xBA7 DUP4 PUSH2 0x687 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xBBF JUMPI PUSH2 0xBBE PUSH2 0xB65 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBCE DUP2 PUSH2 0x687 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xBE7 PUSH0 DUP4 ADD DUP7 PUSH2 0xAA1 JUMP JUMPDEST PUSH2 0xBF4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0xC01 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xBC5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC1C PUSH0 DUP4 ADD DUP5 PUSH2 0xBC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A4C DUP1 PUSH2 0xC2F PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4A536A06 GT PUSH2 0x7E JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xD15DCD62 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x338 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x4A536A06 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x74EEB847 EQ PUSH2 0x28C JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xBA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x39ACF9F1 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x200 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x12BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x13CE JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x12BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x343 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x12BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x383 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AF SWAP1 PUSH2 0x14F1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x40E PUSH2 0x88F JUMP JUMPDEST SWAP1 POP PUSH2 0x41B DUP2 DUP6 DUP6 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x439 PUSH2 0x88F JUMP JUMPDEST SWAP1 POP PUSH2 0x446 DUP6 DUP3 DUP6 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x451 DUP6 DUP6 DUP6 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x492 DUP3 DUP3 PUSH2 0xA2A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F32700E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4FD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x5A0 PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D6 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EA DUP4 DUP4 DUP4 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH0 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x69A SWAP1 PUSH2 0x14F1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C6 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x711 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x711 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x725 PUSH2 0x88F JUMP JUMPDEST SWAP1 POP PUSH2 0x732 DUP2 DUP6 DUP6 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x746 PUSH2 0x88F JUMP JUMPDEST SWAP1 POP PUSH2 0x753 DUP2 ADDRESS DUP5 PUSH2 0x93A JUMP JUMPDEST PUSH0 ADDRESS DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x769 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0x4A536A06 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x7C0 DUP7 ADDRESS DUP5 PUSH3 0x249F0 PUSH2 0xDAE JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FC SWAP1 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8A3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF44 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8B3 DUP5 DUP5 PUSH2 0x80D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x934 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x925 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x933 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xF44 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A1 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA11 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA25 DUP4 DUP4 DUP4 PUSH2 0xB92 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA91 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA5 PUSH0 DUP4 DUP4 PUSH2 0xB92 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x55E2448E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB13 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB37 SWAP2 SWAP1 PUSH2 0x17EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB8D JUMPI POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE2 JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBD6 SWAP2 SWAP1 PUSH2 0x1847 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCB2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC6C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC63 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCF9 JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD44 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDA1 SWAP2 SWAP1 PUSH2 0x12BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DD9523C DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE27 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE4B SWAP2 SWAP1 PUSH2 0x192B JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO DUP1 PUSH2 0xE5C JUMPI POP DUP1 CALLVALUE LT ISZERO JUMPDEST PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE92 SWAP1 PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC21DDA4F DUP3 DUP9 PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19BE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF21 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF33 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFB4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAB SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1024 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101B SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x110D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1104 SWAP2 SWAP1 PUSH2 0x12BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1155 DUP3 PUSH2 0x1113 JUMP JUMPDEST PUSH2 0x115F DUP2 DUP6 PUSH2 0x111D JUMP JUMPDEST SWAP4 POP PUSH2 0x116F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x112D JUMP JUMPDEST PUSH2 0x1178 DUP2 PUSH2 0x113B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x119B DUP2 DUP5 PUSH2 0x114B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11D9 DUP3 PUSH2 0x11B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E9 DUP2 PUSH2 0x11CF JUMP JUMPDEST DUP2 EQ PUSH2 0x11F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1204 DUP2 PUSH2 0x11E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121C DUP2 PUSH2 0x120A JUMP JUMPDEST DUP2 EQ PUSH2 0x1226 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1237 DUP2 PUSH2 0x1213 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1253 JUMPI PUSH2 0x1252 PUSH2 0x11AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1260 DUP6 DUP3 DUP7 ADD PUSH2 0x11F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1271 DUP6 DUP3 DUP7 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128F DUP2 PUSH2 0x127B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12A8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1286 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12B7 DUP2 PUSH2 0x120A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12D0 PUSH0 DUP4 ADD DUP5 PUSH2 0x12AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12ED JUMPI PUSH2 0x12EC PUSH2 0x11AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12FA DUP7 DUP3 DUP8 ADD PUSH2 0x11F6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x130B DUP7 DUP3 DUP8 ADD PUSH2 0x11F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x131C DUP7 DUP3 DUP8 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x133B DUP2 PUSH2 0x1326 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1354 PUSH0 DUP4 ADD DUP5 PUSH2 0x1332 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x137D PUSH2 0x1378 PUSH2 0x1373 DUP5 PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0x135A JUMP JUMPDEST PUSH2 0x11B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x138E DUP3 PUSH2 0x1363 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x139F DUP3 PUSH2 0x1384 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13AF DUP2 PUSH2 0x1395 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x13A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E3 JUMPI PUSH2 0x13E2 PUSH2 0x11AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13F0 DUP5 DUP3 DUP6 ADD PUSH2 0x11F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1415 DUP2 PUSH2 0x13F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x141F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1430 DUP2 PUSH2 0x140C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x144D JUMPI PUSH2 0x144C PUSH2 0x11AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x145A DUP7 DUP3 DUP8 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x146B DUP7 DUP3 DUP8 ADD PUSH2 0x11F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x147C DUP7 DUP3 DUP8 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149C JUMPI PUSH2 0x149B PUSH2 0x11AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14A9 DUP6 DUP3 DUP7 ADD PUSH2 0x11F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14BA DUP6 DUP3 DUP7 ADD PUSH2 0x11F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1508 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x151B JUMPI PUSH2 0x151A PUSH2 0x14C4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x155B DUP3 PUSH2 0x113B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x157A JUMPI PUSH2 0x1579 PUSH2 0x1525 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x158C PUSH2 0x11A3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1598 DUP3 DUP3 PUSH2 0x1552 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x15AB DUP2 PUSH2 0x140C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x15BF DUP2 PUSH2 0x11E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15DA JUMPI PUSH2 0x15D9 PUSH2 0x1521 JUMP JUMPDEST JUMPDEST PUSH2 0x15E4 PUSH1 0x40 PUSH2 0x1583 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x15F3 DUP5 DUP3 DUP6 ADD PUSH2 0x159D JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1606 DUP5 DUP3 DUP6 ADD PUSH2 0x15B1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1627 JUMPI PUSH2 0x1626 PUSH2 0x11AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1634 DUP5 DUP3 DUP6 ADD PUSH2 0x15C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6D6E6945524332303A204F6E6C792063616C6C61626C65207669612063726F PUSH0 DUP3 ADD MSTORE PUSH32 0x73732D636861696E206D65737361676500000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1697 PUSH1 0x30 DUP4 PUSH2 0x111D JUMP JUMPDEST SWAP2 POP PUSH2 0x16A2 DUP3 PUSH2 0x163D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16C4 DUP2 PUSH2 0x168B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D4 DUP2 PUSH2 0x11CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x16ED PUSH0 DUP4 ADD DUP7 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x16FA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x1707 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12AE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6D6E6945524332303A20496E73756666696369656E74206665650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1743 PUSH1 0x1B DUP4 PUSH2 0x111D JUMP JUMPDEST SWAP2 POP PUSH2 0x174E DUP3 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1770 DUP2 PUSH2 0x1737 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x178A PUSH0 DUP4 ADD DUP7 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x1797 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12AE JUMP JUMPDEST PUSH2 0x17A4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12AE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17BF PUSH0 DUP4 ADD DUP5 PUSH2 0x16CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17CE DUP2 PUSH2 0x127B JUMP JUMPDEST DUP2 EQ PUSH2 0x17D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17E9 DUP2 PUSH2 0x17C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1804 JUMPI PUSH2 0x1803 PUSH2 0x11AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1811 DUP5 DUP3 DUP6 ADD PUSH2 0x17DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1851 DUP3 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP PUSH2 0x185C DUP4 PUSH2 0x120A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1874 JUMPI PUSH2 0x1873 PUSH2 0x181A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1883 DUP2 PUSH2 0x13F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18AD DUP3 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0x18B7 DUP2 DUP6 PUSH2 0x1893 JUMP JUMPDEST SWAP4 POP PUSH2 0x18C7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x112D JUMP JUMPDEST PUSH2 0x18D0 DUP2 PUSH2 0x113B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18EE PUSH0 DUP4 ADD DUP7 PUSH2 0x187A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1900 DUP2 DUP6 PUSH2 0x18A3 JUMP JUMPDEST SWAP1 POP PUSH2 0x190F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1925 DUP2 PUSH2 0x1213 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1940 JUMPI PUSH2 0x193F PUSH2 0x11AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x194D DUP5 DUP3 DUP6 ADD PUSH2 0x1917 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x584170703A20696E73756666696369656E742066756E64730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x198A PUSH1 0x18 DUP4 PUSH2 0x111D JUMP JUMPDEST SWAP2 POP PUSH2 0x1995 DUP3 PUSH2 0x1956 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19B7 DUP2 PUSH2 0x197E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x19D1 PUSH0 DUP4 ADD DUP9 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x19DE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x19EB PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x16CB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x19FD DUP2 DUP6 PUSH2 0x18A3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A0C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID PUSH17 0x868C6DFBDF830947272E2181FD8499785 PUSH6 0x5D3D7CEE1665 GASPRICE LOG2 PUSH7 0x72EF4564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "128:856:9:-:0;;;169:303;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;316:5;323:7;332:10;855::7;571:1:1;296:21:3;311:5;296:14;;;:21;;:::i;:::-;327:39;348:17;327:20;;;:39;;:::i;:::-;234:139;;903:5:7::1;895;:13;;;;;;:::i;:::-;;928:7;918;:17;;;;;;:::i;:::-;;774:168:::0;;;433:32:9::1;439:10;451:13;433:5;;;:32;;:::i;:::-;169:303:::0;;;;128:856;;3791:185:4;3874:1;3857:19;;:5;:19;;;3849:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;3928:5;3909:4;;:25;;;;;;;;;;;;;;;;;;3949:20;3963:5;3949:20;;;;;;:::i;:::-;;;;;;;;3791:185;:::o;3462:201::-;3531:23;3549:4;3531:17;;;:23;;:::i;:::-;3523:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3612:4;3593:16;;:23;;;;;;;;;;;;;;;;;;3631:25;3651:4;3631:25;;;;;;:::i;:::-;;;;;;;;3462:201;:::o;774:208:9:-;863:1;844:21;;:7;:21;;;840:91;;917:1;888:32;;;;;;;;;;;:::i;:::-;;;;;;;;840:91;940:35;956:1;960:7;969:5;940:7;;;:35;;:::i;:::-;774:208;;:::o;791:120:1:-;844:4;571:1;867:15;;:5;:15;;;:37;;;;710:1;886:18;;:5;:18;;;867:37;860:44;;791:120;;;:::o;3285:706:7:-;3390:1;3374:18;;:4;:18;;;3370:359;;3424:5;3408:12;;:21;;;;;;;:::i;:::-;;;;;;;;3370:359;;;3460:19;3482:9;:15;3492:4;3482:15;;;;;;;;;;;;;;;;3460:37;;3529:5;3515:11;:19;3511:115;;;3586:4;3592:11;3605:5;3561:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;3511:115;3699:5;3685:11;:19;3667:9;:15;3677:4;3667:15;;;;;;;;;;;;;;;:37;;;;3446:283;3370:359;3757:1;3743:16;;:2;:16;;;3739:205;;3819:5;3803:12;;:21;;;;;;;;;;;3739:205;;;3914:5;3897:9;:13;3907:2;3897:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;3739:205;3974:2;3959:25;;3968:4;3959:25;;;3978:5;3959:25;;;;;;:::i;:::-;;;;;;;;3285:706;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:126::-;2607:7;2647:42;2640:5;2636:54;2625:65;;2570:126;;;:::o;2702:96::-;2739:7;2768:24;2786:5;2768:24;:::i;:::-;2757:35;;2702:96;;;:::o;2804:122::-;2877:24;2895:5;2877:24;:::i;:::-;2870:5;2867:35;2857:63;;2916:1;2913;2906:12;2857:63;2804:122;:::o;2932:143::-;2989:5;3020:6;3014:13;3005:22;;3036:33;3063:5;3036:33;:::i;:::-;2932:143;;;;:::o;3081:77::-;3118:7;3147:5;3136:16;;3081:77;;;:::o;3164:122::-;3237:24;3255:5;3237:24;:::i;:::-;3230:5;3227:35;3217:63;;3276:1;3273;3266:12;3217:63;3164:122;:::o;3292:143::-;3349:5;3380:6;3374:13;3365:22;;3396:33;3423:5;3396:33;:::i;:::-;3292:143;;;;:::o;3441:1166::-;3558:6;3566;3574;3582;3631:3;3619:9;3610:7;3606:23;3602:33;3599:120;;;3638:79;;:::i;:::-;3599:120;3779:1;3768:9;3764:17;3758:24;3809:18;3801:6;3798:30;3795:117;;;3831:79;;:::i;:::-;3795:117;3936:74;4002:7;3993:6;3982:9;3978:22;3936:74;:::i;:::-;3926:84;;3729:291;4080:2;4069:9;4065:18;4059:25;4111:18;4103:6;4100:30;4097:117;;;4133:79;;:::i;:::-;4097:117;4238:74;4304:7;4295:6;4284:9;4280:22;4238:74;:::i;:::-;4228:84;;4030:292;4361:2;4387:64;4443:7;4434:6;4423:9;4419:22;4387:64;:::i;:::-;4377:74;;4332:129;4500:2;4526:64;4582:7;4573:6;4562:9;4558:22;4526:64;:::i;:::-;4516:74;;4471:129;3441:1166;;;;;;;:::o;4613:99::-;4665:6;4699:5;4693:12;4683:22;;4613:99;;;:::o;4718:180::-;4766:77;4763:1;4756:88;4863:4;4860:1;4853:15;4887:4;4884:1;4877:15;4904:320;4948:6;4985:1;4979:4;4975:12;4965:22;;5032:1;5026:4;5022:12;5053:18;5043:81;;5109:4;5101:6;5097:17;5087:27;;5043:81;5171:2;5163:6;5160:14;5140:18;5137:38;5134:84;;5190:18;;:::i;:::-;5134:84;4955:269;4904:320;;;:::o;5230:141::-;5279:4;5302:3;5294:11;;5325:3;5322:1;5315:14;5359:4;5356:1;5346:18;5338:26;;5230:141;;;:::o;5377:93::-;5414:6;5461:2;5456;5449:5;5445:14;5441:23;5431:33;;5377:93;;;:::o;5476:107::-;5520:8;5570:5;5564:4;5560:16;5539:37;;5476:107;;;;:::o;5589:393::-;5658:6;5708:1;5696:10;5692:18;5731:97;5761:66;5750:9;5731:97;:::i;:::-;5849:39;5879:8;5868:9;5849:39;:::i;:::-;5837:51;;5921:4;5917:9;5910:5;5906:21;5897:30;;5970:4;5960:8;5956:19;5949:5;5946:30;5936:40;;5665:317;;5589:393;;;;;:::o;5988:60::-;6016:3;6037:5;6030:12;;5988:60;;;:::o;6054:142::-;6104:9;6137:53;6155:34;6164:24;6182:5;6164:24;:::i;:::-;6155:34;:::i;:::-;6137:53;:::i;:::-;6124:66;;6054:142;;;:::o;6202:75::-;6245:3;6266:5;6259:12;;6202:75;;;:::o;6283:269::-;6393:39;6424:7;6393:39;:::i;:::-;6454:91;6503:41;6527:16;6503:41;:::i;:::-;6495:6;6488:4;6482:11;6454:91;:::i;:::-;6448:4;6441:105;6359:193;6283:269;;;:::o;6558:73::-;6603:3;6558:73;:::o;6637:189::-;6714:32;;:::i;:::-;6755:65;6813:6;6805;6799:4;6755:65;:::i;:::-;6690:136;6637:189;;:::o;6832:186::-;6892:120;6909:3;6902:5;6899:14;6892:120;;;6963:39;7000:1;6993:5;6963:39;:::i;:::-;6936:1;6929:5;6925:13;6916:22;;6892:120;;;6832:186;;:::o;7024:543::-;7125:2;7120:3;7117:11;7114:446;;;7159:38;7191:5;7159:38;:::i;:::-;7243:29;7261:10;7243:29;:::i;:::-;7233:8;7229:44;7426:2;7414:10;7411:18;7408:49;;;7447:8;7432:23;;7408:49;7470:80;7526:22;7544:3;7526:22;:::i;:::-;7516:8;7512:37;7499:11;7470:80;:::i;:::-;7129:431;;7114:446;7024:543;;;:::o;7573:117::-;7627:8;7677:5;7671:4;7667:16;7646:37;;7573:117;;;;:::o;7696:169::-;7740:6;7773:51;7821:1;7817:6;7809:5;7806:1;7802:13;7773:51;:::i;:::-;7769:56;7854:4;7848;7844:15;7834:25;;7747:118;7696:169;;;;:::o;7870:295::-;7946:4;8092:29;8117:3;8111:4;8092:29;:::i;:::-;8084:37;;8154:3;8151:1;8147:11;8141:4;8138:21;8130:29;;7870:295;;;;:::o;8170:1395::-;8287:37;8320:3;8287:37;:::i;:::-;8389:18;8381:6;8378:30;8375:56;;;8411:18;;:::i;:::-;8375:56;8455:38;8487:4;8481:11;8455:38;:::i;:::-;8540:67;8600:6;8592;8586:4;8540:67;:::i;:::-;8634:1;8658:4;8645:17;;8690:2;8682:6;8679:14;8707:1;8702:618;;;;9364:1;9381:6;9378:77;;;9430:9;9425:3;9421:19;9415:26;9406:35;;9378:77;9481:67;9541:6;9534:5;9481:67;:::i;:::-;9475:4;9468:81;9337:222;8672:887;;8702:618;8754:4;8750:9;8742:6;8738:22;8788:37;8820:4;8788:37;:::i;:::-;8847:1;8861:208;8875:7;8872:1;8869:14;8861:208;;;8954:9;8949:3;8945:19;8939:26;8931:6;8924:42;9005:1;8997:6;8993:14;8983:24;;9052:2;9041:9;9037:18;9024:31;;8898:4;8895:1;8891:12;8886:17;;8861:208;;;9097:6;9088:7;9085:19;9082:179;;;9155:9;9150:3;9146:19;9140:26;9198:48;9240:4;9232:6;9228:17;9217:9;9198:48;:::i;:::-;9190:6;9183:64;9105:156;9082:179;9307:1;9303;9295:6;9291:14;9287:22;9281:4;9274:36;8709:611;;;8672:887;;8262:1303;;;8170:1395;;:::o;9571:169::-;9655:11;9689:6;9684:3;9677:19;9729:4;9724:3;9720:14;9705:29;;9571:169;;;;:::o;9746:168::-;9886:20;9882:1;9874:6;9870:14;9863:44;9746:168;:::o;9920:366::-;10062:3;10083:67;10147:2;10142:3;10083:67;:::i;:::-;10076:74;;10159:93;10248:3;10159:93;:::i;:::-;10277:2;10272:3;10268:12;10261:19;;9920:366;;;:::o;10292:419::-;10458:4;10496:2;10485:9;10481:18;10473:26;;10545:9;10539:4;10535:20;10531:1;10520:9;10516:17;10509:47;10573:131;10699:4;10573:131;:::i;:::-;10565:139;;10292:419;;;:::o;10717:118::-;10804:24;10822:5;10804:24;:::i;:::-;10799:3;10792:37;10717:118;;:::o;10841:222::-;10934:4;10972:2;10961:9;10957:18;10949:26;;10985:71;11053:1;11042:9;11038:17;11029:6;10985:71;:::i;:::-;10841:222;;;;:::o;11069:174::-;11209:26;11205:1;11197:6;11193:14;11186:50;11069:174;:::o;11249:366::-;11391:3;11412:67;11476:2;11471:3;11412:67;:::i;:::-;11405:74;;11488:93;11577:3;11488:93;:::i;:::-;11606:2;11601:3;11597:12;11590:19;;11249:366;;;:::o;11621:419::-;11787:4;11825:2;11814:9;11810:18;11802:26;;11874:9;11868:4;11864:20;11860:1;11849:9;11845:17;11838:47;11902:131;12028:4;11902:131;:::i;:::-;11894:139;;11621:419;;;:::o;12046:86::-;12081:7;12121:4;12114:5;12110:16;12099:27;;12046:86;;;:::o;12138:112::-;12221:22;12237:5;12221:22;:::i;:::-;12216:3;12209:35;12138:112;;:::o;12256:214::-;12345:4;12383:2;12372:9;12368:18;12360:26;;12396:67;12460:1;12449:9;12445:17;12436:6;12396:67;:::i;:::-;12256:214;;;;:::o;12476:180::-;12524:77;12521:1;12514:88;12621:4;12618:1;12611:15;12645:4;12642:1;12635:15;12662:191;12702:3;12721:20;12739:1;12721:20;:::i;:::-;12716:25;;12755:20;12773:1;12755:20;:::i;:::-;12750:25;;12798:1;12795;12791:9;12784:16;;12819:3;12816:1;12813:10;12810:36;;;12826:18;;:::i;:::-;12810:36;12662:191;;;;:::o;12859:118::-;12946:24;12964:5;12946:24;:::i;:::-;12941:3;12934:37;12859:118;;:::o;12983:442::-;13132:4;13170:2;13159:9;13155:18;13147:26;;13183:71;13251:1;13240:9;13236:17;13227:6;13183:71;:::i;:::-;13264:72;13332:2;13321:9;13317:18;13308:6;13264:72;:::i;:::-;13346;13414:2;13403:9;13399:18;13390:6;13346:72;:::i;:::-;12983:442;;;;;;:::o;13431:222::-;13524:4;13562:2;13551:9;13547:18;13539:26;;13575:71;13643:1;13632:9;13628:17;13619:6;13575:71;:::i;:::-;13431:222;;;;:::o;128:856:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1227": {
									"entryPoint": 2198,
									"id": 1227,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1286": {
									"entryPoint": 3908,
									"id": 1286,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_1433": {
									"entryPoint": 2602,
									"id": 1433,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1446": {
									"entryPoint": 2191,
									"id": 1446,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1333": {
									"entryPoint": 2216,
									"id": 1333,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1134": {
									"entryPoint": 2362,
									"id": 1134,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1210": {
									"entryPoint": 2962,
									"id": 1210,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_925": {
									"entryPoint": 2061,
									"id": 925,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_949": {
									"entryPoint": 1028,
									"id": 949,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_908": {
									"entryPoint": 1587,
									"id": 908,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_886": {
									"entryPoint": 1117,
									"id": 886,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@defaultConfLevel_352": {
									"entryPoint": 1657,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isXCall_389": {
									"entryPoint": 2729,
									"id": 389,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_1401": {
									"entryPoint": 1160,
									"id": 1401,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_868": {
									"entryPoint": 884,
									"id": 868,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@omni_349": {
									"entryPoint": 1125,
									"id": 349,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@receiveTransfer_1088": {
									"entryPoint": 1174,
									"id": 1088,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@symbol_877": {
									"entryPoint": 1675,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_895": {
									"entryPoint": 1062,
									"id": 895,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_981": {
									"entryPoint": 1071,
									"id": 981,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_1005": {
									"entryPoint": 1819,
									"id": 1005,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_1064": {
									"entryPoint": 1853,
									"id": 1064,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@xcall_474": {
									"entryPoint": 3502,
									"id": 474,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4598,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 5553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6107,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_MsgContext_$245_memory_ptr_fromMemory": {
									"entryPoint": 5573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 6423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64": {
									"entryPoint": 5154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64_fromMemory": {
									"entryPoint": 5533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5254,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_MsgContext_$245_memory_ptr_fromMemory": {
									"entryPoint": 5650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint64t_addresst_uint256": {
									"entryPoint": 5174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IOmniPortal_$175_to_t_address_fromStack": {
									"entryPoint": 5030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 6266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5850,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6007,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IOmniPortal_$175__to_t_address__fromStack_reversed": {
									"entryPoint": 5045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_bytes_memory_ptr_t_uint64__to_t_uint64_t_bytes_memory_ptr_t_uint64__fromStack_reversed": {
									"entryPoint": 6363,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_uint8_t_address_t_bytes_memory_ptr_t_uint64__to_t_uint64_t_uint8_t_address_t_bytes_memory_ptr_t_uint64__fromStack_reversed": {
									"entryPoint": 6590,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4515,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4618,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 5113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IOmniPortal_$175_to_t_address": {
									"entryPoint": 5013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4397,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 4954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6170,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5316,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5413,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 5409,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4524,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808": {
									"entryPoint": 5693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805": {
									"entryPoint": 5903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6": {
									"entryPoint": 6486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 5132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18019:11",
										"nodeType": "YulBlock",
										"src": "0:18019:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:11",
													"nodeType": "YulBlock",
													"src": "66:40:11",
													"statements": [
														{
															"nativeSrc": "77:22:11",
															"nodeType": "YulAssignment",
															"src": "77:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:11"
																},
																"nativeSrc": "87:12:11",
																"nodeType": "YulFunctionCall",
																"src": "87:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:11",
														"nodeType": "YulTypedName",
														"src": "49:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:11",
														"nodeType": "YulTypedName",
														"src": "59:6:11",
														"type": ""
													}
												],
												"src": "7:99:11"
											},
											{
												"body": {
													"nativeSrc": "208:73:11",
													"nodeType": "YulBlock",
													"src": "208:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:11"
																},
																"nativeSrc": "218:19:11",
																"nodeType": "YulFunctionCall",
																"src": "218:19:11"
															},
															"nativeSrc": "218:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:11"
														},
														{
															"nativeSrc": "246:29:11",
															"nodeType": "YulAssignment",
															"src": "246:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:11",
																		"nodeType": "YulLiteral",
																		"src": "270:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:11"
																},
																"nativeSrc": "261:14:11",
																"nodeType": "YulFunctionCall",
																"src": "261:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:11",
														"nodeType": "YulTypedName",
														"src": "180:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:11",
														"nodeType": "YulTypedName",
														"src": "185:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:11",
														"nodeType": "YulTypedName",
														"src": "196:11:11",
														"type": ""
													}
												],
												"src": "112:169:11"
											},
											{
												"body": {
													"nativeSrc": "349:77:11",
													"nodeType": "YulBlock",
													"src": "349:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:11"
																},
																"nativeSrc": "360:23:11",
																"nodeType": "YulFunctionCall",
																"src": "360:23:11"
															},
															"nativeSrc": "360:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:11"
																		},
																		"nativeSrc": "399:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:11",
																		"nodeType": "YulLiteral",
																		"src": "417:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:11"
																},
																"nativeSrc": "392:27:11",
																"nodeType": "YulFunctionCall",
																"src": "392:27:11"
															},
															"nativeSrc": "392:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:11",
														"nodeType": "YulTypedName",
														"src": "331:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:11",
														"nodeType": "YulTypedName",
														"src": "336:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:11",
														"nodeType": "YulTypedName",
														"src": "341:6:11",
														"type": ""
													}
												],
												"src": "287:139:11"
											},
											{
												"body": {
													"nativeSrc": "480:54:11",
													"nodeType": "YulBlock",
													"src": "480:54:11",
													"statements": [
														{
															"nativeSrc": "490:38:11",
															"nodeType": "YulAssignment",
															"src": "490:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:11",
																				"nodeType": "YulLiteral",
																				"src": "515:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:11"
																		},
																		"nativeSrc": "504:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:11",
																				"nodeType": "YulLiteral",
																				"src": "524:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:11"
																		},
																		"nativeSrc": "520:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:11"
																},
																"nativeSrc": "500:28:11",
																"nodeType": "YulFunctionCall",
																"src": "500:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:11",
														"nodeType": "YulTypedName",
														"src": "463:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:11",
														"nodeType": "YulTypedName",
														"src": "473:6:11",
														"type": ""
													}
												],
												"src": "432:102:11"
											},
											{
												"body": {
													"nativeSrc": "632:285:11",
													"nodeType": "YulBlock",
													"src": "632:285:11",
													"statements": [
														{
															"nativeSrc": "642:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:11"
																},
																"nativeSrc": "656:39:11",
																"nodeType": "YulFunctionCall",
																"src": "656:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:11",
																	"nodeType": "YulTypedName",
																	"src": "646:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:11",
															"nodeType": "YulAssignment",
															"src": "704:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:11"
																},
																"nativeSrc": "711:71:11",
																"nodeType": "YulFunctionCall",
																"src": "711:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:11",
																				"nodeType": "YulLiteral",
																				"src": "837:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:11"
																		},
																		"nativeSrc": "826:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:11"
																},
																"nativeSrc": "791:65:11",
																"nodeType": "YulFunctionCall",
																"src": "791:65:11"
															},
															"nativeSrc": "791:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:11"
														},
														{
															"nativeSrc": "865:46:11",
															"nodeType": "YulAssignment",
															"src": "865:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:11"
																		},
																		"nativeSrc": "881:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:11"
																},
																"nativeSrc": "872:39:11",
																"nodeType": "YulFunctionCall",
																"src": "872:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:11",
														"nodeType": "YulTypedName",
														"src": "613:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:11",
														"nodeType": "YulTypedName",
														"src": "620:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:11",
														"nodeType": "YulTypedName",
														"src": "628:3:11",
														"type": ""
													}
												],
												"src": "540:377:11"
											},
											{
												"body": {
													"nativeSrc": "1041:195:11",
													"nodeType": "YulBlock",
													"src": "1041:195:11",
													"statements": [
														{
															"nativeSrc": "1051:26:11",
															"nodeType": "YulAssignment",
															"src": "1051:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:11"
																},
																"nativeSrc": "1059:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:11"
																		},
																		"nativeSrc": "1094:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:11"
																		},
																		"nativeSrc": "1113:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:11"
																},
																"nativeSrc": "1087:47:11",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:11"
															},
															"nativeSrc": "1087:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:11"
														},
														{
															"nativeSrc": "1143:86:11",
															"nodeType": "YulAssignment",
															"src": "1143:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:11"
																},
																"nativeSrc": "1151:78:11",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:11",
														"nodeType": "YulTypedName",
														"src": "1013:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:11",
														"nodeType": "YulTypedName",
														"src": "1025:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:11",
														"nodeType": "YulTypedName",
														"src": "1036:4:11",
														"type": ""
													}
												],
												"src": "923:313:11"
											},
											{
												"body": {
													"nativeSrc": "1282:35:11",
													"nodeType": "YulBlock",
													"src": "1282:35:11",
													"statements": [
														{
															"nativeSrc": "1292:19:11",
															"nodeType": "YulAssignment",
															"src": "1292:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:11"
																},
																"nativeSrc": "1302:9:11",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:11",
														"nodeType": "YulTypedName",
														"src": "1275:6:11",
														"type": ""
													}
												],
												"src": "1242:75:11"
											},
											{
												"body": {
													"nativeSrc": "1412:28:11",
													"nodeType": "YulBlock",
													"src": "1412:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:11"
																},
																"nativeSrc": "1422:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:11"
															},
															"nativeSrc": "1422:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:11"
											},
											{
												"body": {
													"nativeSrc": "1535:28:11",
													"nodeType": "YulBlock",
													"src": "1535:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:11"
																},
																"nativeSrc": "1545:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:11"
															},
															"nativeSrc": "1545:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:11"
											},
											{
												"body": {
													"nativeSrc": "1614:81:11",
													"nodeType": "YulBlock",
													"src": "1614:81:11",
													"statements": [
														{
															"nativeSrc": "1624:65:11",
															"nodeType": "YulAssignment",
															"src": "1624:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:11",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:11"
																},
																"nativeSrc": "1635:54:11",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:11",
														"nodeType": "YulTypedName",
														"src": "1596:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:11",
														"nodeType": "YulTypedName",
														"src": "1606:7:11",
														"type": ""
													}
												],
												"src": "1569:126:11"
											},
											{
												"body": {
													"nativeSrc": "1746:51:11",
													"nodeType": "YulBlock",
													"src": "1746:51:11",
													"statements": [
														{
															"nativeSrc": "1756:35:11",
															"nodeType": "YulAssignment",
															"src": "1756:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:11"
																},
																"nativeSrc": "1767:24:11",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:11",
														"nodeType": "YulTypedName",
														"src": "1728:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:11",
														"nodeType": "YulTypedName",
														"src": "1738:7:11",
														"type": ""
													}
												],
												"src": "1701:96:11"
											},
											{
												"body": {
													"nativeSrc": "1846:79:11",
													"nodeType": "YulBlock",
													"src": "1846:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:11",
																"nodeType": "YulBlock",
																"src": "1903:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:11"
																			},
																			"nativeSrc": "1905:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:11"
																		},
																		"nativeSrc": "1905:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:11"
																				},
																				"nativeSrc": "1876:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:11"
																		},
																		"nativeSrc": "1866:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:11"
																},
																"nativeSrc": "1859:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:11"
															},
															"nativeSrc": "1856:63:11",
															"nodeType": "YulIf",
															"src": "1856:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:11",
														"nodeType": "YulTypedName",
														"src": "1839:5:11",
														"type": ""
													}
												],
												"src": "1803:122:11"
											},
											{
												"body": {
													"nativeSrc": "1983:87:11",
													"nodeType": "YulBlock",
													"src": "1983:87:11",
													"statements": [
														{
															"nativeSrc": "1993:29:11",
															"nodeType": "YulAssignment",
															"src": "1993:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:11"
																},
																"nativeSrc": "2002:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:11"
																},
																"nativeSrc": "2031:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:11"
															},
															"nativeSrc": "2031:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:11",
														"nodeType": "YulTypedName",
														"src": "1961:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:11",
														"nodeType": "YulTypedName",
														"src": "1969:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:11",
														"nodeType": "YulTypedName",
														"src": "1977:5:11",
														"type": ""
													}
												],
												"src": "1931:139:11"
											},
											{
												"body": {
													"nativeSrc": "2121:32:11",
													"nodeType": "YulBlock",
													"src": "2121:32:11",
													"statements": [
														{
															"nativeSrc": "2131:16:11",
															"nodeType": "YulAssignment",
															"src": "2131:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:11",
																"nodeType": "YulIdentifier",
																"src": "2142:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:11",
														"nodeType": "YulTypedName",
														"src": "2103:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:11",
														"nodeType": "YulTypedName",
														"src": "2113:7:11",
														"type": ""
													}
												],
												"src": "2076:77:11"
											},
											{
												"body": {
													"nativeSrc": "2202:79:11",
													"nodeType": "YulBlock",
													"src": "2202:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:11",
																"nodeType": "YulBlock",
																"src": "2259:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:11"
																			},
																			"nativeSrc": "2261:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:11"
																		},
																		"nativeSrc": "2261:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:11"
																				},
																				"nativeSrc": "2232:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:11"
																		},
																		"nativeSrc": "2222:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:11"
																},
																"nativeSrc": "2215:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:11"
															},
															"nativeSrc": "2212:63:11",
															"nodeType": "YulIf",
															"src": "2212:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:11",
														"nodeType": "YulTypedName",
														"src": "2195:5:11",
														"type": ""
													}
												],
												"src": "2159:122:11"
											},
											{
												"body": {
													"nativeSrc": "2339:87:11",
													"nodeType": "YulBlock",
													"src": "2339:87:11",
													"statements": [
														{
															"nativeSrc": "2349:29:11",
															"nodeType": "YulAssignment",
															"src": "2349:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:11"
																},
																"nativeSrc": "2358:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:11"
																},
																"nativeSrc": "2387:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:11"
															},
															"nativeSrc": "2387:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:11",
														"nodeType": "YulTypedName",
														"src": "2317:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:11",
														"nodeType": "YulTypedName",
														"src": "2325:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:11",
														"nodeType": "YulTypedName",
														"src": "2333:5:11",
														"type": ""
													}
												],
												"src": "2287:139:11"
											},
											{
												"body": {
													"nativeSrc": "2515:391:11",
													"nodeType": "YulBlock",
													"src": "2515:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:11",
																"nodeType": "YulBlock",
																"src": "2561:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:11"
																			},
																			"nativeSrc": "2563:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:11"
																		},
																		"nativeSrc": "2563:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:11"
																		},
																		"nativeSrc": "2532:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:11"
																},
																"nativeSrc": "2528:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:11"
															},
															"nativeSrc": "2525:119:11",
															"nodeType": "YulIf",
															"src": "2525:119:11"
														},
														{
															"nativeSrc": "2654:117:11",
															"nodeType": "YulBlock",
															"src": "2654:117:11",
															"statements": [
																{
																	"nativeSrc": "2669:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:11"
																				},
																				"nativeSrc": "2729:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:11"
																		},
																		"nativeSrc": "2708:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:11",
															"nodeType": "YulBlock",
															"src": "2781:118:11",
															"statements": [
																{
																	"nativeSrc": "2796:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:11"
																				},
																				"nativeSrc": "2857:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:11"
																		},
																		"nativeSrc": "2836:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:11",
														"nodeType": "YulTypedName",
														"src": "2477:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:11",
														"nodeType": "YulTypedName",
														"src": "2488:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:11",
														"nodeType": "YulTypedName",
														"src": "2500:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:11",
														"nodeType": "YulTypedName",
														"src": "2508:6:11",
														"type": ""
													}
												],
												"src": "2432:474:11"
											},
											{
												"body": {
													"nativeSrc": "2954:48:11",
													"nodeType": "YulBlock",
													"src": "2954:48:11",
													"statements": [
														{
															"nativeSrc": "2964:32:11",
															"nodeType": "YulAssignment",
															"src": "2964:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:11"
																		},
																		"nativeSrc": "2982:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:11"
																},
																"nativeSrc": "2975:21:11",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:11",
														"nodeType": "YulTypedName",
														"src": "2936:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:11",
														"nodeType": "YulTypedName",
														"src": "2946:7:11",
														"type": ""
													}
												],
												"src": "2912:90:11"
											},
											{
												"body": {
													"nativeSrc": "3067:50:11",
													"nodeType": "YulBlock",
													"src": "3067:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:11"
																		},
																		"nativeSrc": "3089:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:11"
																},
																"nativeSrc": "3077:34:11",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:11"
															},
															"nativeSrc": "3077:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:11",
														"nodeType": "YulTypedName",
														"src": "3055:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:11",
														"nodeType": "YulTypedName",
														"src": "3062:3:11",
														"type": ""
													}
												],
												"src": "3008:109:11"
											},
											{
												"body": {
													"nativeSrc": "3215:118:11",
													"nodeType": "YulBlock",
													"src": "3215:118:11",
													"statements": [
														{
															"nativeSrc": "3225:26:11",
															"nodeType": "YulAssignment",
															"src": "3225:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:11"
																},
																"nativeSrc": "3233:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:11"
																		},
																		"nativeSrc": "3308:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:11"
																},
																"nativeSrc": "3261:65:11",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:11"
															},
															"nativeSrc": "3261:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:11",
														"nodeType": "YulTypedName",
														"src": "3187:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:11",
														"nodeType": "YulTypedName",
														"src": "3199:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:11",
														"nodeType": "YulTypedName",
														"src": "3210:4:11",
														"type": ""
													}
												],
												"src": "3123:210:11"
											},
											{
												"body": {
													"nativeSrc": "3404:53:11",
													"nodeType": "YulBlock",
													"src": "3404:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:11"
																		},
																		"nativeSrc": "3426:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:11"
																},
																"nativeSrc": "3414:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:11"
															},
															"nativeSrc": "3414:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:11",
														"nodeType": "YulTypedName",
														"src": "3392:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:11",
														"nodeType": "YulTypedName",
														"src": "3399:3:11",
														"type": ""
													}
												],
												"src": "3339:118:11"
											},
											{
												"body": {
													"nativeSrc": "3561:124:11",
													"nodeType": "YulBlock",
													"src": "3561:124:11",
													"statements": [
														{
															"nativeSrc": "3571:26:11",
															"nodeType": "YulAssignment",
															"src": "3571:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:11"
																},
																"nativeSrc": "3579:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:11"
																		},
																		"nativeSrc": "3660:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:11"
																},
																"nativeSrc": "3607:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:11"
															},
															"nativeSrc": "3607:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:11",
														"nodeType": "YulTypedName",
														"src": "3533:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:11",
														"nodeType": "YulTypedName",
														"src": "3545:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:11",
														"nodeType": "YulTypedName",
														"src": "3556:4:11",
														"type": ""
													}
												],
												"src": "3463:222:11"
											},
											{
												"body": {
													"nativeSrc": "3791:519:11",
													"nodeType": "YulBlock",
													"src": "3791:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:11",
																"nodeType": "YulBlock",
																"src": "3837:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:11"
																			},
																			"nativeSrc": "3839:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:11"
																		},
																		"nativeSrc": "3839:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:11"
																		},
																		"nativeSrc": "3808:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:11"
																},
																"nativeSrc": "3804:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:11"
															},
															"nativeSrc": "3801:119:11",
															"nodeType": "YulIf",
															"src": "3801:119:11"
														},
														{
															"nativeSrc": "3930:117:11",
															"nodeType": "YulBlock",
															"src": "3930:117:11",
															"statements": [
																{
																	"nativeSrc": "3945:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:11"
																				},
																				"nativeSrc": "4005:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:11"
																		},
																		"nativeSrc": "3984:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:11",
															"nodeType": "YulBlock",
															"src": "4057:118:11",
															"statements": [
																{
																	"nativeSrc": "4072:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:11"
																				},
																				"nativeSrc": "4133:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:11"
																		},
																		"nativeSrc": "4112:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:11",
															"nodeType": "YulBlock",
															"src": "4185:118:11",
															"statements": [
																{
																	"nativeSrc": "4200:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:11"
																				},
																				"nativeSrc": "4261:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:11"
																		},
																		"nativeSrc": "4240:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:11",
														"nodeType": "YulTypedName",
														"src": "3745:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:11",
														"nodeType": "YulTypedName",
														"src": "3756:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:11",
														"nodeType": "YulTypedName",
														"src": "3768:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:11",
														"nodeType": "YulTypedName",
														"src": "3776:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:11",
														"nodeType": "YulTypedName",
														"src": "3784:6:11",
														"type": ""
													}
												],
												"src": "3691:619:11"
											},
											{
												"body": {
													"nativeSrc": "4359:43:11",
													"nodeType": "YulBlock",
													"src": "4359:43:11",
													"statements": [
														{
															"nativeSrc": "4369:27:11",
															"nodeType": "YulAssignment",
															"src": "4369:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:11"
																},
																"nativeSrc": "4380:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:11",
														"nodeType": "YulTypedName",
														"src": "4341:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:11",
														"nodeType": "YulTypedName",
														"src": "4351:7:11",
														"type": ""
													}
												],
												"src": "4316:86:11"
											},
											{
												"body": {
													"nativeSrc": "4469:51:11",
													"nodeType": "YulBlock",
													"src": "4469:51:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:11",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:11"
																		},
																		"nativeSrc": "4491:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:11"
																},
																"nativeSrc": "4479:35:11",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:11"
															},
															"nativeSrc": "4479:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:11"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:11",
														"nodeType": "YulTypedName",
														"src": "4457:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:11",
														"nodeType": "YulTypedName",
														"src": "4464:3:11",
														"type": ""
													}
												],
												"src": "4408:112:11"
											},
											{
												"body": {
													"nativeSrc": "4620:120:11",
													"nodeType": "YulBlock",
													"src": "4620:120:11",
													"statements": [
														{
															"nativeSrc": "4630:26:11",
															"nodeType": "YulAssignment",
															"src": "4630:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:11"
																},
																"nativeSrc": "4638:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:11"
																		},
																		"nativeSrc": "4715:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:11",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:11"
																},
																"nativeSrc": "4666:67:11",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:11"
															},
															"nativeSrc": "4666:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:11",
														"nodeType": "YulTypedName",
														"src": "4592:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:11",
														"nodeType": "YulTypedName",
														"src": "4604:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:11",
														"nodeType": "YulTypedName",
														"src": "4615:4:11",
														"type": ""
													}
												],
												"src": "4526:214:11"
											},
											{
												"body": {
													"nativeSrc": "4778:28:11",
													"nodeType": "YulBlock",
													"src": "4778:28:11",
													"statements": [
														{
															"nativeSrc": "4788:12:11",
															"nodeType": "YulAssignment",
															"src": "4788:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "4795:5:11",
																"nodeType": "YulIdentifier",
																"src": "4795:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4788:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4788:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4746:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4764:5:11",
														"nodeType": "YulTypedName",
														"src": "4764:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4774:3:11",
														"nodeType": "YulTypedName",
														"src": "4774:3:11",
														"type": ""
													}
												],
												"src": "4746:60:11"
											},
											{
												"body": {
													"nativeSrc": "4872:82:11",
													"nodeType": "YulBlock",
													"src": "4872:82:11",
													"statements": [
														{
															"nativeSrc": "4882:66:11",
															"nodeType": "YulAssignment",
															"src": "4882:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4940:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "4940:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4922:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "4922:17:11"
																				},
																				"nativeSrc": "4922:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4922:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4913:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "4913:8:11"
																		},
																		"nativeSrc": "4913:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4913:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4895:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "4895:17:11"
																},
																"nativeSrc": "4895:53:11",
																"nodeType": "YulFunctionCall",
																"src": "4895:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4882:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "4882:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4812:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4852:5:11",
														"nodeType": "YulTypedName",
														"src": "4852:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4862:9:11",
														"nodeType": "YulTypedName",
														"src": "4862:9:11",
														"type": ""
													}
												],
												"src": "4812:142:11"
											},
											{
												"body": {
													"nativeSrc": "5020:66:11",
													"nodeType": "YulBlock",
													"src": "5020:66:11",
													"statements": [
														{
															"nativeSrc": "5030:50:11",
															"nodeType": "YulAssignment",
															"src": "5030:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5074:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5074:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5043:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "5043:30:11"
																},
																"nativeSrc": "5043:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5043:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5030:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5030:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4960:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5000:5:11",
														"nodeType": "YulTypedName",
														"src": "5000:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5010:9:11",
														"nodeType": "YulTypedName",
														"src": "5010:9:11",
														"type": ""
													}
												],
												"src": "4960:126:11"
											},
											{
												"body": {
													"nativeSrc": "5171:66:11",
													"nodeType": "YulBlock",
													"src": "5171:66:11",
													"statements": [
														{
															"nativeSrc": "5181:50:11",
															"nodeType": "YulAssignment",
															"src": "5181:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5225:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5225:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5194:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "5194:30:11"
																},
																"nativeSrc": "5194:37:11",
																"nodeType": "YulFunctionCall",
																"src": "5194:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5181:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5181:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IOmniPortal_$175_to_t_address",
												"nativeSrc": "5092:145:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5151:5:11",
														"nodeType": "YulTypedName",
														"src": "5151:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5161:9:11",
														"nodeType": "YulTypedName",
														"src": "5161:9:11",
														"type": ""
													}
												],
												"src": "5092:145:11"
											},
											{
												"body": {
													"nativeSrc": "5327:85:11",
													"nodeType": "YulBlock",
													"src": "5327:85:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5344:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5344:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5399:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5399:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IOmniPortal_$175_to_t_address",
																			"nativeSrc": "5349:49:11",
																			"nodeType": "YulIdentifier",
																			"src": "5349:49:11"
																		},
																		"nativeSrc": "5349:56:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5349:56:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5337:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5337:6:11"
																},
																"nativeSrc": "5337:69:11",
																"nodeType": "YulFunctionCall",
																"src": "5337:69:11"
															},
															"nativeSrc": "5337:69:11",
															"nodeType": "YulExpressionStatement",
															"src": "5337:69:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_IOmniPortal_$175_to_t_address_fromStack",
												"nativeSrc": "5243:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5315:5:11",
														"nodeType": "YulTypedName",
														"src": "5315:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5322:3:11",
														"nodeType": "YulTypedName",
														"src": "5322:3:11",
														"type": ""
													}
												],
												"src": "5243:169:11"
											},
											{
												"body": {
													"nativeSrc": "5535:143:11",
													"nodeType": "YulBlock",
													"src": "5535:143:11",
													"statements": [
														{
															"nativeSrc": "5545:26:11",
															"nodeType": "YulAssignment",
															"src": "5545:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5557:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5557:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5568:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5568:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5553:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5553:3:11"
																},
																"nativeSrc": "5553:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5553:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5545:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5545:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5644:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5644:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5657:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5657:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5668:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5668:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5653:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5653:3:11"
																		},
																		"nativeSrc": "5653:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5653:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IOmniPortal_$175_to_t_address_fromStack",
																	"nativeSrc": "5581:62:11",
																	"nodeType": "YulIdentifier",
																	"src": "5581:62:11"
																},
																"nativeSrc": "5581:90:11",
																"nodeType": "YulFunctionCall",
																"src": "5581:90:11"
															},
															"nativeSrc": "5581:90:11",
															"nodeType": "YulExpressionStatement",
															"src": "5581:90:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IOmniPortal_$175__to_t_address__fromStack_reversed",
												"nativeSrc": "5418:260:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5507:9:11",
														"nodeType": "YulTypedName",
														"src": "5507:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5519:6:11",
														"nodeType": "YulTypedName",
														"src": "5519:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5530:4:11",
														"nodeType": "YulTypedName",
														"src": "5530:4:11",
														"type": ""
													}
												],
												"src": "5418:260:11"
											},
											{
												"body": {
													"nativeSrc": "5750:263:11",
													"nodeType": "YulBlock",
													"src": "5750:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5796:83:11",
																"nodeType": "YulBlock",
																"src": "5796:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5798:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5798:77:11"
																			},
																			"nativeSrc": "5798:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5798:79:11"
																		},
																		"nativeSrc": "5798:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5798:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5771:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5771:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5780:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5780:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5767:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5767:3:11"
																		},
																		"nativeSrc": "5767:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5767:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5792:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5792:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5763:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:11"
																},
																"nativeSrc": "5763:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5763:32:11"
															},
															"nativeSrc": "5760:119:11",
															"nodeType": "YulIf",
															"src": "5760:119:11"
														},
														{
															"nativeSrc": "5889:117:11",
															"nodeType": "YulBlock",
															"src": "5889:117:11",
															"statements": [
																{
																	"nativeSrc": "5904:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5904:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5918:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5918:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5908:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5908:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5933:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5933:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5968:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5968:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5979:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5979:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5964:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5964:3:11"
																				},
																				"nativeSrc": "5964:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5964:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5988:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5988:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5943:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5943:20:11"
																		},
																		"nativeSrc": "5943:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5943:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5933:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5933:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5684:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5720:9:11",
														"nodeType": "YulTypedName",
														"src": "5720:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5731:7:11",
														"nodeType": "YulTypedName",
														"src": "5731:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5743:6:11",
														"nodeType": "YulTypedName",
														"src": "5743:6:11",
														"type": ""
													}
												],
												"src": "5684:329:11"
											},
											{
												"body": {
													"nativeSrc": "6063:57:11",
													"nodeType": "YulBlock",
													"src": "6063:57:11",
													"statements": [
														{
															"nativeSrc": "6073:41:11",
															"nodeType": "YulAssignment",
															"src": "6073:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6088:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6088:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6095:18:11",
																		"nodeType": "YulLiteral",
																		"src": "6095:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6084:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6084:3:11"
																},
																"nativeSrc": "6084:30:11",
																"nodeType": "YulFunctionCall",
																"src": "6084:30:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6073:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "6073:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "6019:101:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6045:5:11",
														"nodeType": "YulTypedName",
														"src": "6045:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6055:7:11",
														"nodeType": "YulTypedName",
														"src": "6055:7:11",
														"type": ""
													}
												],
												"src": "6019:101:11"
											},
											{
												"body": {
													"nativeSrc": "6168:78:11",
													"nodeType": "YulBlock",
													"src": "6168:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6224:16:11",
																"nodeType": "YulBlock",
																"src": "6224:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6233:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6233:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6236:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6236:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6226:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6226:6:11"
																			},
																			"nativeSrc": "6226:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6226:12:11"
																		},
																		"nativeSrc": "6226:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6226:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6191:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6191:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6215:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "6215:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nativeSrc": "6198:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "6198:16:11"
																				},
																				"nativeSrc": "6198:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6198:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6188:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "6188:2:11"
																		},
																		"nativeSrc": "6188:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6188:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6181:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6181:6:11"
																},
																"nativeSrc": "6181:42:11",
																"nodeType": "YulFunctionCall",
																"src": "6181:42:11"
															},
															"nativeSrc": "6178:62:11",
															"nodeType": "YulIf",
															"src": "6178:62:11"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nativeSrc": "6126:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6161:5:11",
														"nodeType": "YulTypedName",
														"src": "6161:5:11",
														"type": ""
													}
												],
												"src": "6126:120:11"
											},
											{
												"body": {
													"nativeSrc": "6303:86:11",
													"nodeType": "YulBlock",
													"src": "6303:86:11",
													"statements": [
														{
															"nativeSrc": "6313:29:11",
															"nodeType": "YulAssignment",
															"src": "6313:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6335:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6335:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6322:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6322:12:11"
																},
																"nativeSrc": "6322:20:11",
																"nodeType": "YulFunctionCall",
																"src": "6322:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6313:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "6313:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6377:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6377:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nativeSrc": "6351:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "6351:25:11"
																},
																"nativeSrc": "6351:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6351:32:11"
															},
															"nativeSrc": "6351:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "6351:32:11"
														}
													]
												},
												"name": "abi_decode_t_uint64",
												"nativeSrc": "6252:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6281:6:11",
														"nodeType": "YulTypedName",
														"src": "6281:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6289:3:11",
														"nodeType": "YulTypedName",
														"src": "6289:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6297:5:11",
														"nodeType": "YulTypedName",
														"src": "6297:5:11",
														"type": ""
													}
												],
												"src": "6252:137:11"
											},
											{
												"body": {
													"nativeSrc": "6494:518:11",
													"nodeType": "YulBlock",
													"src": "6494:518:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6540:83:11",
																"nodeType": "YulBlock",
																"src": "6540:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6542:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6542:77:11"
																			},
																			"nativeSrc": "6542:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6542:79:11"
																		},
																		"nativeSrc": "6542:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6542:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6515:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6515:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6524:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6524:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6511:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6511:3:11"
																		},
																		"nativeSrc": "6511:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6511:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6536:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6536:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6507:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6507:3:11"
																},
																"nativeSrc": "6507:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6507:32:11"
															},
															"nativeSrc": "6504:119:11",
															"nodeType": "YulIf",
															"src": "6504:119:11"
														},
														{
															"nativeSrc": "6633:116:11",
															"nodeType": "YulBlock",
															"src": "6633:116:11",
															"statements": [
																{
																	"nativeSrc": "6648:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6648:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6662:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6662:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6652:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6652:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6677:62:11",
																	"nodeType": "YulAssignment",
																	"src": "6677:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6711:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6711:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6722:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6722:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6707:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6707:3:11"
																				},
																				"nativeSrc": "6707:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6707:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6731:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6731:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nativeSrc": "6687:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "6687:19:11"
																		},
																		"nativeSrc": "6687:52:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6687:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6677:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6677:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6759:118:11",
															"nodeType": "YulBlock",
															"src": "6759:118:11",
															"statements": [
																{
																	"nativeSrc": "6774:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6774:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6788:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6788:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6778:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6778:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6804:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6804:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6839:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6839:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6850:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6850:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6835:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6835:3:11"
																				},
																				"nativeSrc": "6835:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6835:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6859:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6859:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6814:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6814:20:11"
																		},
																		"nativeSrc": "6814:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6814:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6804:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6804:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6887:118:11",
															"nodeType": "YulBlock",
															"src": "6887:118:11",
															"statements": [
																{
																	"nativeSrc": "6902:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6902:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6916:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6916:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6906:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6906:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6932:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6932:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6967:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6967:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6978:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6978:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6963:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6963:3:11"
																				},
																				"nativeSrc": "6963:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6963:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6987:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6987:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6942:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6942:20:11"
																		},
																		"nativeSrc": "6942:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6942:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6932:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6932:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint64t_addresst_uint256",
												"nativeSrc": "6395:617:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6448:9:11",
														"nodeType": "YulTypedName",
														"src": "6448:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6459:7:11",
														"nodeType": "YulTypedName",
														"src": "6459:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6471:6:11",
														"nodeType": "YulTypedName",
														"src": "6471:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6479:6:11",
														"nodeType": "YulTypedName",
														"src": "6479:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6487:6:11",
														"nodeType": "YulTypedName",
														"src": "6487:6:11",
														"type": ""
													}
												],
												"src": "6395:617:11"
											},
											{
												"body": {
													"nativeSrc": "7101:391:11",
													"nodeType": "YulBlock",
													"src": "7101:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7147:83:11",
																"nodeType": "YulBlock",
																"src": "7147:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7149:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "7149:77:11"
																			},
																			"nativeSrc": "7149:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7149:79:11"
																		},
																		"nativeSrc": "7149:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7149:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7122:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7122:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7131:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7131:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7118:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7118:3:11"
																		},
																		"nativeSrc": "7118:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7118:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7143:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7143:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7114:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7114:3:11"
																},
																"nativeSrc": "7114:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7114:32:11"
															},
															"nativeSrc": "7111:119:11",
															"nodeType": "YulIf",
															"src": "7111:119:11"
														},
														{
															"nativeSrc": "7240:117:11",
															"nodeType": "YulBlock",
															"src": "7240:117:11",
															"statements": [
																{
																	"nativeSrc": "7255:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7255:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7269:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7269:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7259:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7259:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7284:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7284:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7319:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7319:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7330:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7330:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7315:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7315:3:11"
																				},
																				"nativeSrc": "7315:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7315:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7339:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7339:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7294:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7294:20:11"
																		},
																		"nativeSrc": "7294:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7294:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7284:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7284:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7367:118:11",
															"nodeType": "YulBlock",
															"src": "7367:118:11",
															"statements": [
																{
																	"nativeSrc": "7382:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7382:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7396:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7396:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7386:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7386:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7412:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7412:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7447:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7447:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7458:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7458:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7443:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7443:3:11"
																				},
																				"nativeSrc": "7443:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7443:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7467:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7467:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7422:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7422:20:11"
																		},
																		"nativeSrc": "7422:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7422:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7412:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7412:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7018:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7063:9:11",
														"nodeType": "YulTypedName",
														"src": "7063:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7074:7:11",
														"nodeType": "YulTypedName",
														"src": "7074:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7086:6:11",
														"nodeType": "YulTypedName",
														"src": "7086:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7094:6:11",
														"nodeType": "YulTypedName",
														"src": "7094:6:11",
														"type": ""
													}
												],
												"src": "7018:474:11"
											},
											{
												"body": {
													"nativeSrc": "7526:152:11",
													"nodeType": "YulBlock",
													"src": "7526:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7543:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7543:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7546:77:11",
																		"nodeType": "YulLiteral",
																		"src": "7546:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7536:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7536:6:11"
																},
																"nativeSrc": "7536:88:11",
																"nodeType": "YulFunctionCall",
																"src": "7536:88:11"
															},
															"nativeSrc": "7536:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "7536:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7640:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7640:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7643:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7643:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7633:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7633:6:11"
																},
																"nativeSrc": "7633:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7633:15:11"
															},
															"nativeSrc": "7633:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7633:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7664:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7664:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7667:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7667:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7657:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7657:6:11"
																},
																"nativeSrc": "7657:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7657:15:11"
															},
															"nativeSrc": "7657:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7657:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7498:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7498:180:11"
											},
											{
												"body": {
													"nativeSrc": "7735:269:11",
													"nodeType": "YulBlock",
													"src": "7735:269:11",
													"statements": [
														{
															"nativeSrc": "7745:22:11",
															"nodeType": "YulAssignment",
															"src": "7745:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7759:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7759:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7765:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7765:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7755:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7755:3:11"
																},
																"nativeSrc": "7755:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7755:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7745:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7745:6:11"
																}
															]
														},
														{
															"nativeSrc": "7776:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7776:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7806:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7806:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7812:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7812:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7802:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7802:3:11"
																},
																"nativeSrc": "7802:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7802:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7780:18:11",
																	"nodeType": "YulTypedName",
																	"src": "7780:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7853:51:11",
																"nodeType": "YulBlock",
																"src": "7853:51:11",
																"statements": [
																	{
																		"nativeSrc": "7867:27:11",
																		"nodeType": "YulAssignment",
																		"src": "7867:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7881:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "7881:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7889:4:11",
																					"nodeType": "YulLiteral",
																					"src": "7889:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7877:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "7877:3:11"
																			},
																			"nativeSrc": "7877:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7877:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7867:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7867:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7833:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "7833:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7826:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7826:6:11"
																},
																"nativeSrc": "7826:26:11",
																"nodeType": "YulFunctionCall",
																"src": "7826:26:11"
															},
															"nativeSrc": "7823:81:11",
															"nodeType": "YulIf",
															"src": "7823:81:11"
														},
														{
															"body": {
																"nativeSrc": "7956:42:11",
																"nodeType": "YulBlock",
																"src": "7956:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7970:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7970:16:11"
																			},
																			"nativeSrc": "7970:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7970:18:11"
																		},
																		"nativeSrc": "7970:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7970:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7920:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "7920:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7943:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7943:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7951:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7951:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7940:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "7940:2:11"
																		},
																		"nativeSrc": "7940:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7940:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7917:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7917:2:11"
																},
																"nativeSrc": "7917:38:11",
																"nodeType": "YulFunctionCall",
																"src": "7917:38:11"
															},
															"nativeSrc": "7914:84:11",
															"nodeType": "YulIf",
															"src": "7914:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7684:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7719:4:11",
														"nodeType": "YulTypedName",
														"src": "7719:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7728:6:11",
														"nodeType": "YulTypedName",
														"src": "7728:6:11",
														"type": ""
													}
												],
												"src": "7684:320:11"
											},
											{
												"body": {
													"nativeSrc": "8099:28:11",
													"nodeType": "YulBlock",
													"src": "8099:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8116:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8116:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8119:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8119:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8109:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8109:6:11"
																},
																"nativeSrc": "8109:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8109:12:11"
															},
															"nativeSrc": "8109:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "8109:12:11"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nativeSrc": "8010:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "8010:117:11"
											},
											{
												"body": {
													"nativeSrc": "8161:152:11",
													"nodeType": "YulBlock",
													"src": "8161:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8178:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8178:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8181:77:11",
																		"nodeType": "YulLiteral",
																		"src": "8181:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8171:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8171:6:11"
																},
																"nativeSrc": "8171:88:11",
																"nodeType": "YulFunctionCall",
																"src": "8171:88:11"
															},
															"nativeSrc": "8171:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "8171:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8275:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8275:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8278:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8278:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8268:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8268:6:11"
																},
																"nativeSrc": "8268:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8268:15:11"
															},
															"nativeSrc": "8268:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8268:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8299:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8299:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8302:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8302:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8292:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8292:6:11"
																},
																"nativeSrc": "8292:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8292:15:11"
															},
															"nativeSrc": "8292:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8292:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "8133:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "8133:180:11"
											},
											{
												"body": {
													"nativeSrc": "8362:238:11",
													"nodeType": "YulBlock",
													"src": "8362:238:11",
													"statements": [
														{
															"nativeSrc": "8372:58:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8372:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8394:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8394:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "8424:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "8424:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8402:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "8402:21:11"
																		},
																		"nativeSrc": "8402:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8402:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8390:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8390:3:11"
																},
																"nativeSrc": "8390:40:11",
																"nodeType": "YulFunctionCall",
																"src": "8390:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "8376:10:11",
																	"nodeType": "YulTypedName",
																	"src": "8376:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8541:22:11",
																"nodeType": "YulBlock",
																"src": "8541:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8543:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "8543:16:11"
																			},
																			"nativeSrc": "8543:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8543:18:11"
																		},
																		"nativeSrc": "8543:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8543:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8484:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "8484:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8496:18:11",
																				"nodeType": "YulLiteral",
																				"src": "8496:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "8481:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "8481:2:11"
																		},
																		"nativeSrc": "8481:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8481:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "8520:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "8520:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "8532:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8532:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8517:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "8517:2:11"
																		},
																		"nativeSrc": "8517:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8517:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8478:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8478:2:11"
																},
																"nativeSrc": "8478:62:11",
																"nodeType": "YulFunctionCall",
																"src": "8478:62:11"
															},
															"nativeSrc": "8475:88:11",
															"nodeType": "YulIf",
															"src": "8475:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8579:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8579:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "8583:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "8583:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8572:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8572:6:11"
																},
																"nativeSrc": "8572:22:11",
																"nodeType": "YulFunctionCall",
																"src": "8572:22:11"
															},
															"nativeSrc": "8572:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "8572:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "8319:281:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8348:6:11",
														"nodeType": "YulTypedName",
														"src": "8348:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "8356:4:11",
														"nodeType": "YulTypedName",
														"src": "8356:4:11",
														"type": ""
													}
												],
												"src": "8319:281:11"
											},
											{
												"body": {
													"nativeSrc": "8647:88:11",
													"nodeType": "YulBlock",
													"src": "8647:88:11",
													"statements": [
														{
															"nativeSrc": "8657:30:11",
															"nodeType": "YulAssignment",
															"src": "8657:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "8667:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "8667:18:11"
																},
																"nativeSrc": "8667:20:11",
																"nodeType": "YulFunctionCall",
																"src": "8667:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "8657:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8657:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "8716:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8716:6:11"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "8724:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8724:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "8696:19:11",
																	"nodeType": "YulIdentifier",
																	"src": "8696:19:11"
																},
																"nativeSrc": "8696:33:11",
																"nodeType": "YulFunctionCall",
																"src": "8696:33:11"
															},
															"nativeSrc": "8696:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "8696:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "8606:129:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "8631:4:11",
														"nodeType": "YulTypedName",
														"src": "8631:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "8640:6:11",
														"nodeType": "YulTypedName",
														"src": "8640:6:11",
														"type": ""
													}
												],
												"src": "8606:129:11"
											},
											{
												"body": {
													"nativeSrc": "8830:28:11",
													"nodeType": "YulBlock",
													"src": "8830:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8847:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8847:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8850:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8850:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8840:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8840:6:11"
																},
																"nativeSrc": "8840:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8840:12:11"
															},
															"nativeSrc": "8840:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "8840:12:11"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nativeSrc": "8741:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "8741:117:11"
											},
											{
												"body": {
													"nativeSrc": "8926:79:11",
													"nodeType": "YulBlock",
													"src": "8926:79:11",
													"statements": [
														{
															"nativeSrc": "8936:22:11",
															"nodeType": "YulAssignment",
															"src": "8936:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8951:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8951:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8945:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8945:5:11"
																},
																"nativeSrc": "8945:13:11",
																"nodeType": "YulFunctionCall",
																"src": "8945:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8936:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "8936:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8993:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8993:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nativeSrc": "8967:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "8967:25:11"
																},
																"nativeSrc": "8967:32:11",
																"nodeType": "YulFunctionCall",
																"src": "8967:32:11"
															},
															"nativeSrc": "8967:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "8967:32:11"
														}
													]
												},
												"name": "abi_decode_t_uint64_fromMemory",
												"nativeSrc": "8864:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8904:6:11",
														"nodeType": "YulTypedName",
														"src": "8904:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8912:3:11",
														"nodeType": "YulTypedName",
														"src": "8912:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8920:5:11",
														"nodeType": "YulTypedName",
														"src": "8920:5:11",
														"type": ""
													}
												],
												"src": "8864:141:11"
											},
											{
												"body": {
													"nativeSrc": "9074:80:11",
													"nodeType": "YulBlock",
													"src": "9074:80:11",
													"statements": [
														{
															"nativeSrc": "9084:22:11",
															"nodeType": "YulAssignment",
															"src": "9084:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9099:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9099:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9093:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "9093:5:11"
																},
																"nativeSrc": "9093:13:11",
																"nodeType": "YulFunctionCall",
																"src": "9093:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9084:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "9084:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9142:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "9142:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "9115:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "9115:26:11"
																},
																"nativeSrc": "9115:33:11",
																"nodeType": "YulFunctionCall",
																"src": "9115:33:11"
															},
															"nativeSrc": "9115:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "9115:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "9011:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9052:6:11",
														"nodeType": "YulTypedName",
														"src": "9052:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9060:3:11",
														"nodeType": "YulTypedName",
														"src": "9060:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9068:5:11",
														"nodeType": "YulTypedName",
														"src": "9068:5:11",
														"type": ""
													}
												],
												"src": "9011:143:11"
											},
											{
												"body": {
													"nativeSrc": "9285:526:11",
													"nodeType": "YulBlock",
													"src": "9285:526:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9329:83:11",
																"nodeType": "YulBlock",
																"src": "9329:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nativeSrc": "9331:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "9331:77:11"
																			},
																			"nativeSrc": "9331:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9331:79:11"
																		},
																		"nativeSrc": "9331:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9331:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nativeSrc": "9306:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "9306:3:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9311:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9311:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9302:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9302:3:11"
																		},
																		"nativeSrc": "9302:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9302:19:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9323:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9323:4:11",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9298:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9298:3:11"
																},
																"nativeSrc": "9298:30:11",
																"nodeType": "YulFunctionCall",
																"src": "9298:30:11"
															},
															"nativeSrc": "9295:117:11",
															"nodeType": "YulIf",
															"src": "9295:117:11"
														},
														{
															"nativeSrc": "9421:30:11",
															"nodeType": "YulAssignment",
															"src": "9421:30:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9446:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9446:4:11",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9430:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "9430:15:11"
																},
																"nativeSrc": "9430:21:11",
																"nodeType": "YulFunctionCall",
																"src": "9430:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9421:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "9421:5:11"
																}
															]
														},
														{
															"nativeSrc": "9461:169:11",
															"nodeType": "YulBlock",
															"src": "9461:169:11",
															"statements": [
																{
																	"nativeSrc": "9505:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9505:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9519:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9519:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9509:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9509:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9545:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "9545:5:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9552:4:11",
																						"nodeType": "YulLiteral",
																						"src": "9552:4:11",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9541:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9541:3:11"
																				},
																				"nativeSrc": "9541:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9541:16:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "9594:9:11",
																								"nodeType": "YulIdentifier",
																								"src": "9594:9:11"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "9605:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "9605:6:11"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "9590:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9590:3:11"
																						},
																						"nativeSrc": "9590:22:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9590:22:11"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "9614:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "9614:3:11"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint64_fromMemory",
																					"nativeSrc": "9559:30:11",
																					"nodeType": "YulIdentifier",
																					"src": "9559:30:11"
																				},
																				"nativeSrc": "9559:59:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9559:59:11"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "9534:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9534:6:11"
																		},
																		"nativeSrc": "9534:85:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9534:85:11"
																	},
																	"nativeSrc": "9534:85:11",
																	"nodeType": "YulExpressionStatement",
																	"src": "9534:85:11"
																}
															]
														},
														{
															"nativeSrc": "9640:164:11",
															"nodeType": "YulBlock",
															"src": "9640:164:11",
															"statements": [
																{
																	"nativeSrc": "9677:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9677:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9691:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9691:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9681:6:11",
																			"nodeType": "YulTypedName",
																			"src": "9681:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9718:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "9718:5:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9725:4:11",
																						"nodeType": "YulLiteral",
																						"src": "9725:4:11",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9714:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9714:3:11"
																				},
																				"nativeSrc": "9714:16:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9714:16:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nativeSrc": "9768:9:11",
																								"nodeType": "YulIdentifier",
																								"src": "9768:9:11"
																							},
																							{
																								"name": "offset",
																								"nativeSrc": "9779:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "9779:6:11"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "9764:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9764:3:11"
																						},
																						"nativeSrc": "9764:22:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9764:22:11"
																					},
																					{
																						"name": "end",
																						"nativeSrc": "9788:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "9788:3:11"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address_fromMemory",
																					"nativeSrc": "9732:31:11",
																					"nodeType": "YulIdentifier",
																					"src": "9732:31:11"
																				},
																				"nativeSrc": "9732:60:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9732:60:11"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "9707:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "9707:6:11"
																		},
																		"nativeSrc": "9707:86:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9707:86:11"
																	},
																	"nativeSrc": "9707:86:11",
																	"nodeType": "YulExpressionStatement",
																	"src": "9707:86:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_MsgContext_$245_memory_ptr_fromMemory",
												"nativeSrc": "9192:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9260:9:11",
														"nodeType": "YulTypedName",
														"src": "9260:9:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9271:3:11",
														"nodeType": "YulTypedName",
														"src": "9271:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9279:5:11",
														"nodeType": "YulTypedName",
														"src": "9279:5:11",
														"type": ""
													}
												],
												"src": "9192:619:11"
											},
											{
												"body": {
													"nativeSrc": "9921:301:11",
													"nodeType": "YulBlock",
													"src": "9921:301:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9967:83:11",
																"nodeType": "YulBlock",
																"src": "9967:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9969:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "9969:77:11"
																			},
																			"nativeSrc": "9969:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9969:79:11"
																		},
																		"nativeSrc": "9969:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9969:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9942:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9942:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9951:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9951:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9938:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9938:3:11"
																		},
																		"nativeSrc": "9938:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9938:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9963:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9963:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9934:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9934:3:11"
																},
																"nativeSrc": "9934:32:11",
																"nodeType": "YulFunctionCall",
																"src": "9934:32:11"
															},
															"nativeSrc": "9931:119:11",
															"nodeType": "YulIf",
															"src": "9931:119:11"
														},
														{
															"nativeSrc": "10060:155:11",
															"nodeType": "YulBlock",
															"src": "10060:155:11",
															"statements": [
																{
																	"nativeSrc": "10075:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10075:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10089:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10089:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10079:6:11",
																			"nodeType": "YulTypedName",
																			"src": "10079:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10104:101:11",
																	"nodeType": "YulAssignment",
																	"src": "10104:101:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10177:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "10177:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10188:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "10188:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10173:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10173:3:11"
																				},
																				"nativeSrc": "10173:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10173:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10197:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "10197:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_struct$_MsgContext_$245_memory_ptr_fromMemory",
																			"nativeSrc": "10114:58:11",
																			"nodeType": "YulIdentifier",
																			"src": "10114:58:11"
																		},
																		"nativeSrc": "10114:91:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10114:91:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10104:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "10104:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_MsgContext_$245_memory_ptr_fromMemory",
												"nativeSrc": "9817:405:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9891:9:11",
														"nodeType": "YulTypedName",
														"src": "9891:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9902:7:11",
														"nodeType": "YulTypedName",
														"src": "9902:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9914:6:11",
														"nodeType": "YulTypedName",
														"src": "9914:6:11",
														"type": ""
													}
												],
												"src": "9817:405:11"
											},
											{
												"body": {
													"nativeSrc": "10334:129:11",
													"nodeType": "YulBlock",
													"src": "10334:129:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10356:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10356:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10364:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10364:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10352:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10352:3:11"
																		},
																		"nativeSrc": "10352:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10352:14:11"
																	},
																	{
																		"hexValue": "4f6d6e6945524332303a204f6e6c792063616c6c61626c65207669612063726f",
																		"kind": "string",
																		"nativeSrc": "10368:34:11",
																		"nodeType": "YulLiteral",
																		"src": "10368:34:11",
																		"type": "",
																		"value": "OmniERC20: Only callable via cro"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10345:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10345:6:11"
																},
																"nativeSrc": "10345:58:11",
																"nodeType": "YulFunctionCall",
																"src": "10345:58:11"
															},
															"nativeSrc": "10345:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "10345:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10424:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10424:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10432:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10432:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10420:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10420:3:11"
																		},
																		"nativeSrc": "10420:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10420:15:11"
																	},
																	{
																		"hexValue": "73732d636861696e206d657373616765",
																		"kind": "string",
																		"nativeSrc": "10437:18:11",
																		"nodeType": "YulLiteral",
																		"src": "10437:18:11",
																		"type": "",
																		"value": "ss-chain message"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10413:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10413:6:11"
																},
																"nativeSrc": "10413:43:11",
																"nodeType": "YulFunctionCall",
																"src": "10413:43:11"
															},
															"nativeSrc": "10413:43:11",
															"nodeType": "YulExpressionStatement",
															"src": "10413:43:11"
														}
													]
												},
												"name": "store_literal_in_memory_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808",
												"nativeSrc": "10228:235:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10326:6:11",
														"nodeType": "YulTypedName",
														"src": "10326:6:11",
														"type": ""
													}
												],
												"src": "10228:235:11"
											},
											{
												"body": {
													"nativeSrc": "10615:220:11",
													"nodeType": "YulBlock",
													"src": "10615:220:11",
													"statements": [
														{
															"nativeSrc": "10625:74:11",
															"nodeType": "YulAssignment",
															"src": "10625:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10691:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10691:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10696:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10696:2:11",
																		"type": "",
																		"value": "48"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10632:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "10632:58:11"
																},
																"nativeSrc": "10632:67:11",
																"nodeType": "YulFunctionCall",
																"src": "10632:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10625:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10625:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10797:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10797:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808",
																	"nativeSrc": "10708:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "10708:88:11"
																},
																"nativeSrc": "10708:93:11",
																"nodeType": "YulFunctionCall",
																"src": "10708:93:11"
															},
															"nativeSrc": "10708:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "10708:93:11"
														},
														{
															"nativeSrc": "10810:19:11",
															"nodeType": "YulAssignment",
															"src": "10810:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10821:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10821:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10826:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10826:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10817:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10817:3:11"
																},
																"nativeSrc": "10817:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10817:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10810:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10810:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10469:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10603:3:11",
														"nodeType": "YulTypedName",
														"src": "10603:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10611:3:11",
														"nodeType": "YulTypedName",
														"src": "10611:3:11",
														"type": ""
													}
												],
												"src": "10469:366:11"
											},
											{
												"body": {
													"nativeSrc": "11012:248:11",
													"nodeType": "YulBlock",
													"src": "11012:248:11",
													"statements": [
														{
															"nativeSrc": "11022:26:11",
															"nodeType": "YulAssignment",
															"src": "11022:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11034:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11034:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11045:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11045:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11030:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11030:3:11"
																},
																"nativeSrc": "11030:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11030:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11022:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11022:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11069:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11069:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11080:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11080:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11065:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11065:3:11"
																		},
																		"nativeSrc": "11065:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11065:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11088:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11088:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11094:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11094:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11084:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11084:3:11"
																		},
																		"nativeSrc": "11084:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11084:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11058:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11058:6:11"
																},
																"nativeSrc": "11058:47:11",
																"nodeType": "YulFunctionCall",
																"src": "11058:47:11"
															},
															"nativeSrc": "11058:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "11058:47:11"
														},
														{
															"nativeSrc": "11114:139:11",
															"nodeType": "YulAssignment",
															"src": "11114:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11248:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11248:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11122:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "11122:124:11"
																},
																"nativeSrc": "11122:131:11",
																"nodeType": "YulFunctionCall",
																"src": "11122:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11114:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11114:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10841:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10992:9:11",
														"nodeType": "YulTypedName",
														"src": "10992:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11007:4:11",
														"nodeType": "YulTypedName",
														"src": "11007:4:11",
														"type": ""
													}
												],
												"src": "10841:419:11"
											},
											{
												"body": {
													"nativeSrc": "11331:53:11",
													"nodeType": "YulBlock",
													"src": "11331:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11348:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11348:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11371:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "11371:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11353:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "11353:17:11"
																		},
																		"nativeSrc": "11353:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11353:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11341:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11341:6:11"
																},
																"nativeSrc": "11341:37:11",
																"nodeType": "YulFunctionCall",
																"src": "11341:37:11"
															},
															"nativeSrc": "11341:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "11341:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "11266:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11319:5:11",
														"nodeType": "YulTypedName",
														"src": "11319:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11326:3:11",
														"nodeType": "YulTypedName",
														"src": "11326:3:11",
														"type": ""
													}
												],
												"src": "11266:118:11"
											},
											{
												"body": {
													"nativeSrc": "11544:288:11",
													"nodeType": "YulBlock",
													"src": "11544:288:11",
													"statements": [
														{
															"nativeSrc": "11554:26:11",
															"nodeType": "YulAssignment",
															"src": "11554:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11566:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11566:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11577:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11577:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11562:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11562:3:11"
																},
																"nativeSrc": "11562:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11562:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11554:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11554:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11634:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11634:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11647:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11647:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11658:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11658:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11643:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11643:3:11"
																		},
																		"nativeSrc": "11643:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11643:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11590:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11590:43:11"
																},
																"nativeSrc": "11590:71:11",
																"nodeType": "YulFunctionCall",
																"src": "11590:71:11"
															},
															"nativeSrc": "11590:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "11590:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11715:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11715:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11728:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11728:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11739:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11739:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11724:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11724:3:11"
																		},
																		"nativeSrc": "11724:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11724:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11671:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11671:43:11"
																},
																"nativeSrc": "11671:72:11",
																"nodeType": "YulFunctionCall",
																"src": "11671:72:11"
															},
															"nativeSrc": "11671:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "11671:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11797:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11797:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11810:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11810:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11821:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11821:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11806:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11806:3:11"
																		},
																		"nativeSrc": "11806:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11806:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11753:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11753:43:11"
																},
																"nativeSrc": "11753:72:11",
																"nodeType": "YulFunctionCall",
																"src": "11753:72:11"
															},
															"nativeSrc": "11753:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "11753:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11390:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11500:9:11",
														"nodeType": "YulTypedName",
														"src": "11500:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11512:6:11",
														"nodeType": "YulTypedName",
														"src": "11512:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11520:6:11",
														"nodeType": "YulTypedName",
														"src": "11520:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11528:6:11",
														"nodeType": "YulTypedName",
														"src": "11528:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11539:4:11",
														"nodeType": "YulTypedName",
														"src": "11539:4:11",
														"type": ""
													}
												],
												"src": "11390:442:11"
											},
											{
												"body": {
													"nativeSrc": "11944:71:11",
													"nodeType": "YulBlock",
													"src": "11944:71:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11966:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11966:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11974:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11974:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11962:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11962:3:11"
																		},
																		"nativeSrc": "11962:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11962:14:11"
																	},
																	{
																		"hexValue": "4f6d6e6945524332303a20496e73756666696369656e7420666565",
																		"kind": "string",
																		"nativeSrc": "11978:29:11",
																		"nodeType": "YulLiteral",
																		"src": "11978:29:11",
																		"type": "",
																		"value": "OmniERC20: Insufficient fee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11955:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11955:6:11"
																},
																"nativeSrc": "11955:53:11",
																"nodeType": "YulFunctionCall",
																"src": "11955:53:11"
															},
															"nativeSrc": "11955:53:11",
															"nodeType": "YulExpressionStatement",
															"src": "11955:53:11"
														}
													]
												},
												"name": "store_literal_in_memory_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805",
												"nativeSrc": "11838:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11936:6:11",
														"nodeType": "YulTypedName",
														"src": "11936:6:11",
														"type": ""
													}
												],
												"src": "11838:177:11"
											},
											{
												"body": {
													"nativeSrc": "12167:220:11",
													"nodeType": "YulBlock",
													"src": "12167:220:11",
													"statements": [
														{
															"nativeSrc": "12177:74:11",
															"nodeType": "YulAssignment",
															"src": "12177:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12243:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12243:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12248:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12248:2:11",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12184:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "12184:58:11"
																},
																"nativeSrc": "12184:67:11",
																"nodeType": "YulFunctionCall",
																"src": "12184:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12177:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12177:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12349:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12349:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805",
																	"nativeSrc": "12260:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "12260:88:11"
																},
																"nativeSrc": "12260:93:11",
																"nodeType": "YulFunctionCall",
																"src": "12260:93:11"
															},
															"nativeSrc": "12260:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "12260:93:11"
														},
														{
															"nativeSrc": "12362:19:11",
															"nodeType": "YulAssignment",
															"src": "12362:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12373:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12373:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12378:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12378:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12369:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12369:3:11"
																},
																"nativeSrc": "12369:12:11",
																"nodeType": "YulFunctionCall",
																"src": "12369:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12362:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12362:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12021:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12155:3:11",
														"nodeType": "YulTypedName",
														"src": "12155:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12163:3:11",
														"nodeType": "YulTypedName",
														"src": "12163:3:11",
														"type": ""
													}
												],
												"src": "12021:366:11"
											},
											{
												"body": {
													"nativeSrc": "12564:248:11",
													"nodeType": "YulBlock",
													"src": "12564:248:11",
													"statements": [
														{
															"nativeSrc": "12574:26:11",
															"nodeType": "YulAssignment",
															"src": "12574:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12586:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12586:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12597:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12597:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12582:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12582:3:11"
																},
																"nativeSrc": "12582:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12582:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12574:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12574:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12621:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12621:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12632:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12632:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12617:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12617:3:11"
																		},
																		"nativeSrc": "12617:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12617:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12640:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "12640:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12646:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12646:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12636:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12636:3:11"
																		},
																		"nativeSrc": "12636:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12636:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12610:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12610:6:11"
																},
																"nativeSrc": "12610:47:11",
																"nodeType": "YulFunctionCall",
																"src": "12610:47:11"
															},
															"nativeSrc": "12610:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "12610:47:11"
														},
														{
															"nativeSrc": "12666:139:11",
															"nodeType": "YulAssignment",
															"src": "12666:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12800:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12800:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12674:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "12674:124:11"
																},
																"nativeSrc": "12674:131:11",
																"nodeType": "YulFunctionCall",
																"src": "12674:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12666:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12666:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12393:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12544:9:11",
														"nodeType": "YulTypedName",
														"src": "12544:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12559:4:11",
														"nodeType": "YulTypedName",
														"src": "12559:4:11",
														"type": ""
													}
												],
												"src": "12393:419:11"
											},
											{
												"body": {
													"nativeSrc": "12972:288:11",
													"nodeType": "YulBlock",
													"src": "12972:288:11",
													"statements": [
														{
															"nativeSrc": "12982:26:11",
															"nodeType": "YulAssignment",
															"src": "12982:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12994:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12994:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13005:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13005:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12990:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12990:3:11"
																},
																"nativeSrc": "12990:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12990:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12982:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12982:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13062:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13062:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13075:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13075:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13086:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13086:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13071:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13071:3:11"
																		},
																		"nativeSrc": "13071:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13071:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13018:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13018:43:11"
																},
																"nativeSrc": "13018:71:11",
																"nodeType": "YulFunctionCall",
																"src": "13018:71:11"
															},
															"nativeSrc": "13018:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "13018:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13143:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13143:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13156:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13156:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13167:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13167:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13152:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13152:3:11"
																		},
																		"nativeSrc": "13152:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13152:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13099:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13099:43:11"
																},
																"nativeSrc": "13099:72:11",
																"nodeType": "YulFunctionCall",
																"src": "13099:72:11"
															},
															"nativeSrc": "13099:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "13099:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13225:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13225:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13238:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13238:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13249:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13249:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13234:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13234:3:11"
																		},
																		"nativeSrc": "13234:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13234:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13181:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13181:43:11"
																},
																"nativeSrc": "13181:72:11",
																"nodeType": "YulFunctionCall",
																"src": "13181:72:11"
															},
															"nativeSrc": "13181:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "13181:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12818:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12928:9:11",
														"nodeType": "YulTypedName",
														"src": "12928:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12940:6:11",
														"nodeType": "YulTypedName",
														"src": "12940:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12948:6:11",
														"nodeType": "YulTypedName",
														"src": "12948:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12956:6:11",
														"nodeType": "YulTypedName",
														"src": "12956:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12967:4:11",
														"nodeType": "YulTypedName",
														"src": "12967:4:11",
														"type": ""
													}
												],
												"src": "12818:442:11"
											},
											{
												"body": {
													"nativeSrc": "13364:124:11",
													"nodeType": "YulBlock",
													"src": "13364:124:11",
													"statements": [
														{
															"nativeSrc": "13374:26:11",
															"nodeType": "YulAssignment",
															"src": "13374:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13386:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13386:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13397:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13397:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13382:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13382:3:11"
																},
																"nativeSrc": "13382:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13382:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13374:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13374:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13454:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13454:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13467:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13467:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13478:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13478:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13463:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13463:3:11"
																		},
																		"nativeSrc": "13463:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13463:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13410:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13410:43:11"
																},
																"nativeSrc": "13410:71:11",
																"nodeType": "YulFunctionCall",
																"src": "13410:71:11"
															},
															"nativeSrc": "13410:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "13410:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "13266:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13336:9:11",
														"nodeType": "YulTypedName",
														"src": "13336:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13348:6:11",
														"nodeType": "YulTypedName",
														"src": "13348:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13359:4:11",
														"nodeType": "YulTypedName",
														"src": "13359:4:11",
														"type": ""
													}
												],
												"src": "13266:222:11"
											},
											{
												"body": {
													"nativeSrc": "13534:76:11",
													"nodeType": "YulBlock",
													"src": "13534:76:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "13588:16:11",
																"nodeType": "YulBlock",
																"src": "13588:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13597:1:11",
																					"nodeType": "YulLiteral",
																					"src": "13597:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13600:1:11",
																					"nodeType": "YulLiteral",
																					"src": "13600:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13590:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "13590:6:11"
																			},
																			"nativeSrc": "13590:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13590:12:11"
																		},
																		"nativeSrc": "13590:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "13590:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13557:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "13557:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13579:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "13579:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "13564:14:11",
																					"nodeType": "YulIdentifier",
																					"src": "13564:14:11"
																				},
																				"nativeSrc": "13564:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13564:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "13554:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "13554:2:11"
																		},
																		"nativeSrc": "13554:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13554:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13547:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13547:6:11"
																},
																"nativeSrc": "13547:40:11",
																"nodeType": "YulFunctionCall",
																"src": "13547:40:11"
															},
															"nativeSrc": "13544:60:11",
															"nodeType": "YulIf",
															"src": "13544:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "13494:116:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13527:5:11",
														"nodeType": "YulTypedName",
														"src": "13527:5:11",
														"type": ""
													}
												],
												"src": "13494:116:11"
											},
											{
												"body": {
													"nativeSrc": "13676:77:11",
													"nodeType": "YulBlock",
													"src": "13676:77:11",
													"statements": [
														{
															"nativeSrc": "13686:22:11",
															"nodeType": "YulAssignment",
															"src": "13686:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13701:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13701:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13695:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "13695:5:11"
																},
																"nativeSrc": "13695:13:11",
																"nodeType": "YulFunctionCall",
																"src": "13695:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13686:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "13686:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13741:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "13741:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "13717:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "13717:23:11"
																},
																"nativeSrc": "13717:30:11",
																"nodeType": "YulFunctionCall",
																"src": "13717:30:11"
															},
															"nativeSrc": "13717:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "13717:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "13616:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13654:6:11",
														"nodeType": "YulTypedName",
														"src": "13654:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13662:3:11",
														"nodeType": "YulTypedName",
														"src": "13662:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13670:5:11",
														"nodeType": "YulTypedName",
														"src": "13670:5:11",
														"type": ""
													}
												],
												"src": "13616:137:11"
											},
											{
												"body": {
													"nativeSrc": "13833:271:11",
													"nodeType": "YulBlock",
													"src": "13833:271:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "13879:83:11",
																"nodeType": "YulBlock",
																"src": "13879:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13881:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "13881:77:11"
																			},
																			"nativeSrc": "13881:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13881:79:11"
																		},
																		"nativeSrc": "13881:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "13881:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13854:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "13854:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13863:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13863:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13850:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13850:3:11"
																		},
																		"nativeSrc": "13850:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13850:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13875:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13875:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13846:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13846:3:11"
																},
																"nativeSrc": "13846:32:11",
																"nodeType": "YulFunctionCall",
																"src": "13846:32:11"
															},
															"nativeSrc": "13843:119:11",
															"nodeType": "YulIf",
															"src": "13843:119:11"
														},
														{
															"nativeSrc": "13972:125:11",
															"nodeType": "YulBlock",
															"src": "13972:125:11",
															"statements": [
																{
																	"nativeSrc": "13987:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13987:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14001:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14001:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13991:6:11",
																			"nodeType": "YulTypedName",
																			"src": "13991:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14016:71:11",
																	"nodeType": "YulAssignment",
																	"src": "14016:71:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14059:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "14059:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14070:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "14070:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14055:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "14055:3:11"
																				},
																				"nativeSrc": "14055:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "14055:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14079:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "14079:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "14026:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "14026:28:11"
																		},
																		"nativeSrc": "14026:61:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14026:61:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14016:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "14016:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "13759:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13803:9:11",
														"nodeType": "YulTypedName",
														"src": "13803:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13814:7:11",
														"nodeType": "YulTypedName",
														"src": "13814:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13826:6:11",
														"nodeType": "YulTypedName",
														"src": "13826:6:11",
														"type": ""
													}
												],
												"src": "13759:345:11"
											},
											{
												"body": {
													"nativeSrc": "14138:152:11",
													"nodeType": "YulBlock",
													"src": "14138:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14155:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14155:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14158:77:11",
																		"nodeType": "YulLiteral",
																		"src": "14158:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14148:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14148:6:11"
																},
																"nativeSrc": "14148:88:11",
																"nodeType": "YulFunctionCall",
																"src": "14148:88:11"
															},
															"nativeSrc": "14148:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "14148:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14252:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14252:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14255:4:11",
																		"nodeType": "YulLiteral",
																		"src": "14255:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14245:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14245:6:11"
																},
																"nativeSrc": "14245:15:11",
																"nodeType": "YulFunctionCall",
																"src": "14245:15:11"
															},
															"nativeSrc": "14245:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "14245:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14276:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14276:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14279:4:11",
																		"nodeType": "YulLiteral",
																		"src": "14279:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14269:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14269:6:11"
																},
																"nativeSrc": "14269:15:11",
																"nodeType": "YulFunctionCall",
																"src": "14269:15:11"
															},
															"nativeSrc": "14269:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "14269:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14110:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "14110:180:11"
											},
											{
												"body": {
													"nativeSrc": "14340:147:11",
													"nodeType": "YulBlock",
													"src": "14340:147:11",
													"statements": [
														{
															"nativeSrc": "14350:25:11",
															"nodeType": "YulAssignment",
															"src": "14350:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14373:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14373:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14355:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "14355:17:11"
																},
																"nativeSrc": "14355:20:11",
																"nodeType": "YulFunctionCall",
																"src": "14355:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14350:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "14350:1:11"
																}
															]
														},
														{
															"nativeSrc": "14384:25:11",
															"nodeType": "YulAssignment",
															"src": "14384:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14407:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14407:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14389:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "14389:17:11"
																},
																"nativeSrc": "14389:20:11",
																"nodeType": "YulFunctionCall",
																"src": "14389:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14384:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "14384:1:11"
																}
															]
														},
														{
															"nativeSrc": "14418:16:11",
															"nodeType": "YulAssignment",
															"src": "14418:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14429:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14429:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14432:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14432:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14425:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14425:3:11"
																},
																"nativeSrc": "14425:9:11",
																"nodeType": "YulFunctionCall",
																"src": "14425:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14418:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14418:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14458:22:11",
																"nodeType": "YulBlock",
																"src": "14458:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14460:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "14460:16:11"
																			},
																			"nativeSrc": "14460:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14460:18:11"
																		},
																		"nativeSrc": "14460:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "14460:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14450:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "14450:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14453:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14453:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14447:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "14447:2:11"
																},
																"nativeSrc": "14447:10:11",
																"nodeType": "YulFunctionCall",
																"src": "14447:10:11"
															},
															"nativeSrc": "14444:36:11",
															"nodeType": "YulIf",
															"src": "14444:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14296:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14327:1:11",
														"nodeType": "YulTypedName",
														"src": "14327:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14330:1:11",
														"nodeType": "YulTypedName",
														"src": "14330:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14336:3:11",
														"nodeType": "YulTypedName",
														"src": "14336:3:11",
														"type": ""
													}
												],
												"src": "14296:191:11"
											},
											{
												"body": {
													"nativeSrc": "14556:52:11",
													"nodeType": "YulBlock",
													"src": "14556:52:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14573:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14573:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14595:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "14595:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "14578:16:11",
																			"nodeType": "YulIdentifier",
																			"src": "14578:16:11"
																		},
																		"nativeSrc": "14578:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14578:23:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14566:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14566:6:11"
																},
																"nativeSrc": "14566:36:11",
																"nodeType": "YulFunctionCall",
																"src": "14566:36:11"
															},
															"nativeSrc": "14566:36:11",
															"nodeType": "YulExpressionStatement",
															"src": "14566:36:11"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "14493:115:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14544:5:11",
														"nodeType": "YulTypedName",
														"src": "14544:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14551:3:11",
														"nodeType": "YulTypedName",
														"src": "14551:3:11",
														"type": ""
													}
												],
												"src": "14493:115:11"
											},
											{
												"body": {
													"nativeSrc": "14672:40:11",
													"nodeType": "YulBlock",
													"src": "14672:40:11",
													"statements": [
														{
															"nativeSrc": "14683:22:11",
															"nodeType": "YulAssignment",
															"src": "14683:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14699:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "14699:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14693:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "14693:5:11"
																},
																"nativeSrc": "14693:12:11",
																"nodeType": "YulFunctionCall",
																"src": "14693:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14683:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14683:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "14614:98:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14655:5:11",
														"nodeType": "YulTypedName",
														"src": "14655:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14665:6:11",
														"nodeType": "YulTypedName",
														"src": "14665:6:11",
														"type": ""
													}
												],
												"src": "14614:98:11"
											},
											{
												"body": {
													"nativeSrc": "14813:73:11",
													"nodeType": "YulBlock",
													"src": "14813:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14830:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14830:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14835:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14835:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14823:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14823:6:11"
																},
																"nativeSrc": "14823:19:11",
																"nodeType": "YulFunctionCall",
																"src": "14823:19:11"
															},
															"nativeSrc": "14823:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "14823:19:11"
														},
														{
															"nativeSrc": "14851:29:11",
															"nodeType": "YulAssignment",
															"src": "14851:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14870:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14870:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14875:4:11",
																		"nodeType": "YulLiteral",
																		"src": "14875:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14866:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14866:3:11"
																},
																"nativeSrc": "14866:14:11",
																"nodeType": "YulFunctionCall",
																"src": "14866:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14851:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "14851:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "14718:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14785:3:11",
														"nodeType": "YulTypedName",
														"src": "14785:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14790:6:11",
														"nodeType": "YulTypedName",
														"src": "14790:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14801:11:11",
														"nodeType": "YulTypedName",
														"src": "14801:11:11",
														"type": ""
													}
												],
												"src": "14718:168:11"
											},
											{
												"body": {
													"nativeSrc": "14982:283:11",
													"nodeType": "YulBlock",
													"src": "14982:283:11",
													"statements": [
														{
															"nativeSrc": "14992:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "14992:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15038:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "15038:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "15006:31:11",
																	"nodeType": "YulIdentifier",
																	"src": "15006:31:11"
																},
																"nativeSrc": "15006:38:11",
																"nodeType": "YulFunctionCall",
																"src": "15006:38:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14996:6:11",
																	"nodeType": "YulTypedName",
																	"src": "14996:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15053:77:11",
															"nodeType": "YulAssignment",
															"src": "15053:77:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15118:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15118:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15123:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15123:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "15060:57:11",
																	"nodeType": "YulIdentifier",
																	"src": "15060:57:11"
																},
																"nativeSrc": "15060:70:11",
																"nodeType": "YulFunctionCall",
																"src": "15060:70:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15053:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15053:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15178:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "15178:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15185:4:11",
																				"nodeType": "YulLiteral",
																				"src": "15185:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15174:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15174:3:11"
																		},
																		"nativeSrc": "15174:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15174:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15192:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15192:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15197:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15197:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "15139:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "15139:34:11"
																},
																"nativeSrc": "15139:65:11",
																"nodeType": "YulFunctionCall",
																"src": "15139:65:11"
															},
															"nativeSrc": "15139:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "15139:65:11"
														},
														{
															"nativeSrc": "15213:46:11",
															"nodeType": "YulAssignment",
															"src": "15213:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15224:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15224:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "15251:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15251:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "15229:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "15229:21:11"
																		},
																		"nativeSrc": "15229:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15229:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15220:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15220:3:11"
																},
																"nativeSrc": "15220:39:11",
																"nodeType": "YulFunctionCall",
																"src": "15220:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15213:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15213:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "14892:373:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14963:5:11",
														"nodeType": "YulTypedName",
														"src": "14963:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14970:3:11",
														"nodeType": "YulTypedName",
														"src": "14970:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14978:3:11",
														"nodeType": "YulTypedName",
														"src": "14978:3:11",
														"type": ""
													}
												],
												"src": "14892:373:11"
											},
											{
												"body": {
													"nativeSrc": "15439:353:11",
													"nodeType": "YulBlock",
													"src": "15439:353:11",
													"statements": [
														{
															"nativeSrc": "15449:26:11",
															"nodeType": "YulAssignment",
															"src": "15449:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15461:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15461:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15472:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15472:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15457:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15457:3:11"
																},
																"nativeSrc": "15457:18:11",
																"nodeType": "YulFunctionCall",
																"src": "15457:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15449:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15449:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15527:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15527:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15540:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15540:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15551:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15551:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15536:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15536:3:11"
																		},
																		"nativeSrc": "15536:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15536:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "15485:41:11",
																	"nodeType": "YulIdentifier",
																	"src": "15485:41:11"
																},
																"nativeSrc": "15485:69:11",
																"nodeType": "YulFunctionCall",
																"src": "15485:69:11"
															},
															"nativeSrc": "15485:69:11",
															"nodeType": "YulExpressionStatement",
															"src": "15485:69:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15575:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15575:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15586:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15586:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15571:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15571:3:11"
																		},
																		"nativeSrc": "15571:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15571:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15595:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "15595:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15601:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15601:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15591:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15591:3:11"
																		},
																		"nativeSrc": "15591:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15591:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15564:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15564:6:11"
																},
																"nativeSrc": "15564:48:11",
																"nodeType": "YulFunctionCall",
																"src": "15564:48:11"
															},
															"nativeSrc": "15564:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "15564:48:11"
														},
														{
															"nativeSrc": "15621:84:11",
															"nodeType": "YulAssignment",
															"src": "15621:84:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15691:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15691:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "15700:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "15700:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "15629:61:11",
																	"nodeType": "YulIdentifier",
																	"src": "15629:61:11"
																},
																"nativeSrc": "15629:76:11",
																"nodeType": "YulFunctionCall",
																"src": "15629:76:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15621:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15621:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15757:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15757:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15770:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15770:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15781:2:11",
																				"nodeType": "YulLiteral",
																				"src": "15781:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15766:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15766:3:11"
																		},
																		"nativeSrc": "15766:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15766:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "15715:41:11",
																	"nodeType": "YulIdentifier",
																	"src": "15715:41:11"
																},
																"nativeSrc": "15715:70:11",
																"nodeType": "YulFunctionCall",
																"src": "15715:70:11"
															},
															"nativeSrc": "15715:70:11",
															"nodeType": "YulExpressionStatement",
															"src": "15715:70:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_bytes_memory_ptr_t_uint64__to_t_uint64_t_bytes_memory_ptr_t_uint64__fromStack_reversed",
												"nativeSrc": "15271:521:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15395:9:11",
														"nodeType": "YulTypedName",
														"src": "15395:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15407:6:11",
														"nodeType": "YulTypedName",
														"src": "15407:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15415:6:11",
														"nodeType": "YulTypedName",
														"src": "15415:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15423:6:11",
														"nodeType": "YulTypedName",
														"src": "15423:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15434:4:11",
														"nodeType": "YulTypedName",
														"src": "15434:4:11",
														"type": ""
													}
												],
												"src": "15271:521:11"
											},
											{
												"body": {
													"nativeSrc": "15861:80:11",
													"nodeType": "YulBlock",
													"src": "15861:80:11",
													"statements": [
														{
															"nativeSrc": "15871:22:11",
															"nodeType": "YulAssignment",
															"src": "15871:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15886:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "15886:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15880:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "15880:5:11"
																},
																"nativeSrc": "15880:13:11",
																"nodeType": "YulFunctionCall",
																"src": "15880:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15871:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "15871:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15929:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "15929:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "15902:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "15902:26:11"
																},
																"nativeSrc": "15902:33:11",
																"nodeType": "YulFunctionCall",
																"src": "15902:33:11"
															},
															"nativeSrc": "15902:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "15902:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "15798:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15839:6:11",
														"nodeType": "YulTypedName",
														"src": "15839:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15847:3:11",
														"nodeType": "YulTypedName",
														"src": "15847:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15855:5:11",
														"nodeType": "YulTypedName",
														"src": "15855:5:11",
														"type": ""
													}
												],
												"src": "15798:143:11"
											},
											{
												"body": {
													"nativeSrc": "16024:274:11",
													"nodeType": "YulBlock",
													"src": "16024:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "16070:83:11",
																"nodeType": "YulBlock",
																"src": "16070:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16072:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "16072:77:11"
																			},
																			"nativeSrc": "16072:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "16072:79:11"
																		},
																		"nativeSrc": "16072:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "16072:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16045:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "16045:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16054:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "16054:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16041:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16041:3:11"
																		},
																		"nativeSrc": "16041:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16041:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16066:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16066:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16037:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16037:3:11"
																},
																"nativeSrc": "16037:32:11",
																"nodeType": "YulFunctionCall",
																"src": "16037:32:11"
															},
															"nativeSrc": "16034:119:11",
															"nodeType": "YulIf",
															"src": "16034:119:11"
														},
														{
															"nativeSrc": "16163:128:11",
															"nodeType": "YulBlock",
															"src": "16163:128:11",
															"statements": [
																{
																	"nativeSrc": "16178:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16178:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16192:1:11",
																		"nodeType": "YulLiteral",
																		"src": "16192:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16182:6:11",
																			"nodeType": "YulTypedName",
																			"src": "16182:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16207:74:11",
																	"nodeType": "YulAssignment",
																	"src": "16207:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16253:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "16253:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16264:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "16264:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16249:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "16249:3:11"
																				},
																				"nativeSrc": "16249:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "16249:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16273:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "16273:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "16217:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "16217:31:11"
																		},
																		"nativeSrc": "16217:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16217:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16207:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "16207:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "15947:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15994:9:11",
														"nodeType": "YulTypedName",
														"src": "15994:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16005:7:11",
														"nodeType": "YulTypedName",
														"src": "16005:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16017:6:11",
														"nodeType": "YulTypedName",
														"src": "16017:6:11",
														"type": ""
													}
												],
												"src": "15947:351:11"
											},
											{
												"body": {
													"nativeSrc": "16410:68:11",
													"nodeType": "YulBlock",
													"src": "16410:68:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16432:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "16432:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16440:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16440:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16428:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16428:3:11"
																		},
																		"nativeSrc": "16428:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16428:14:11"
																	},
																	{
																		"hexValue": "584170703a20696e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nativeSrc": "16444:26:11",
																		"nodeType": "YulLiteral",
																		"src": "16444:26:11",
																		"type": "",
																		"value": "XApp: insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16421:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16421:6:11"
																},
																"nativeSrc": "16421:50:11",
																"nodeType": "YulFunctionCall",
																"src": "16421:50:11"
															},
															"nativeSrc": "16421:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "16421:50:11"
														}
													]
												},
												"name": "store_literal_in_memory_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6",
												"nativeSrc": "16304:174:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16402:6:11",
														"nodeType": "YulTypedName",
														"src": "16402:6:11",
														"type": ""
													}
												],
												"src": "16304:174:11"
											},
											{
												"body": {
													"nativeSrc": "16630:220:11",
													"nodeType": "YulBlock",
													"src": "16630:220:11",
													"statements": [
														{
															"nativeSrc": "16640:74:11",
															"nodeType": "YulAssignment",
															"src": "16640:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16706:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16706:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16711:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16711:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16647:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "16647:58:11"
																},
																"nativeSrc": "16647:67:11",
																"nodeType": "YulFunctionCall",
																"src": "16647:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16640:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16640:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16812:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16812:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6",
																	"nativeSrc": "16723:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "16723:88:11"
																},
																"nativeSrc": "16723:93:11",
																"nodeType": "YulFunctionCall",
																"src": "16723:93:11"
															},
															"nativeSrc": "16723:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "16723:93:11"
														},
														{
															"nativeSrc": "16825:19:11",
															"nodeType": "YulAssignment",
															"src": "16825:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16836:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16836:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16841:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16841:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16832:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16832:3:11"
																},
																"nativeSrc": "16832:12:11",
																"nodeType": "YulFunctionCall",
																"src": "16832:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16825:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16825:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16484:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16618:3:11",
														"nodeType": "YulTypedName",
														"src": "16618:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16626:3:11",
														"nodeType": "YulTypedName",
														"src": "16626:3:11",
														"type": ""
													}
												],
												"src": "16484:366:11"
											},
											{
												"body": {
													"nativeSrc": "17027:248:11",
													"nodeType": "YulBlock",
													"src": "17027:248:11",
													"statements": [
														{
															"nativeSrc": "17037:26:11",
															"nodeType": "YulAssignment",
															"src": "17037:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17049:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "17049:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17060:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17060:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17045:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17045:3:11"
																},
																"nativeSrc": "17045:18:11",
																"nodeType": "YulFunctionCall",
																"src": "17045:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17037:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17037:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17084:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17084:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17095:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17095:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17080:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17080:3:11"
																		},
																		"nativeSrc": "17080:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17080:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17103:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "17103:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17109:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17109:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17099:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17099:3:11"
																		},
																		"nativeSrc": "17099:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17099:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17073:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17073:6:11"
																},
																"nativeSrc": "17073:47:11",
																"nodeType": "YulFunctionCall",
																"src": "17073:47:11"
															},
															"nativeSrc": "17073:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "17073:47:11"
														},
														{
															"nativeSrc": "17129:139:11",
															"nodeType": "YulAssignment",
															"src": "17129:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17263:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17263:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17137:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "17137:124:11"
																},
																"nativeSrc": "17137:131:11",
																"nodeType": "YulFunctionCall",
																"src": "17137:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17129:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17129:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16856:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17007:9:11",
														"nodeType": "YulTypedName",
														"src": "17007:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17022:4:11",
														"nodeType": "YulTypedName",
														"src": "17022:4:11",
														"type": ""
													}
												],
												"src": "16856:419:11"
											},
											{
												"body": {
													"nativeSrc": "17501:515:11",
													"nodeType": "YulBlock",
													"src": "17501:515:11",
													"statements": [
														{
															"nativeSrc": "17511:27:11",
															"nodeType": "YulAssignment",
															"src": "17511:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17523:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "17523:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17534:3:11",
																		"nodeType": "YulLiteral",
																		"src": "17534:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17519:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17519:3:11"
																},
																"nativeSrc": "17519:19:11",
																"nodeType": "YulFunctionCall",
																"src": "17519:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17511:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17511:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17590:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17590:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17603:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17603:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17614:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17614:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17599:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17599:3:11"
																		},
																		"nativeSrc": "17599:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17599:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "17548:41:11",
																	"nodeType": "YulIdentifier",
																	"src": "17548:41:11"
																},
																"nativeSrc": "17548:69:11",
																"nodeType": "YulFunctionCall",
																"src": "17548:69:11"
															},
															"nativeSrc": "17548:69:11",
															"nodeType": "YulExpressionStatement",
															"src": "17548:69:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17667:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17667:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17680:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17680:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17691:2:11",
																				"nodeType": "YulLiteral",
																				"src": "17691:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17676:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17676:3:11"
																		},
																		"nativeSrc": "17676:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17676:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "17627:39:11",
																	"nodeType": "YulIdentifier",
																	"src": "17627:39:11"
																},
																"nativeSrc": "17627:68:11",
																"nodeType": "YulFunctionCall",
																"src": "17627:68:11"
															},
															"nativeSrc": "17627:68:11",
															"nodeType": "YulExpressionStatement",
															"src": "17627:68:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "17749:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17749:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17762:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17762:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17773:2:11",
																				"nodeType": "YulLiteral",
																				"src": "17773:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17758:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17758:3:11"
																		},
																		"nativeSrc": "17758:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17758:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17705:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "17705:43:11"
																},
																"nativeSrc": "17705:72:11",
																"nodeType": "YulFunctionCall",
																"src": "17705:72:11"
															},
															"nativeSrc": "17705:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "17705:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17798:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17798:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17809:2:11",
																				"nodeType": "YulLiteral",
																				"src": "17809:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17794:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17794:3:11"
																		},
																		"nativeSrc": "17794:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17794:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17818:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "17818:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17824:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17824:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17814:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17814:3:11"
																		},
																		"nativeSrc": "17814:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17814:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17787:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17787:6:11"
																},
																"nativeSrc": "17787:48:11",
																"nodeType": "YulFunctionCall",
																"src": "17787:48:11"
															},
															"nativeSrc": "17787:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "17787:48:11"
														},
														{
															"nativeSrc": "17844:84:11",
															"nodeType": "YulAssignment",
															"src": "17844:84:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "17914:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17914:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "17923:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "17923:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "17852:61:11",
																	"nodeType": "YulIdentifier",
																	"src": "17852:61:11"
																},
																"nativeSrc": "17852:76:11",
																"nodeType": "YulFunctionCall",
																"src": "17852:76:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17844:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "17844:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "17980:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "17980:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17993:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17993:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18004:3:11",
																				"nodeType": "YulLiteral",
																				"src": "18004:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17989:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17989:3:11"
																		},
																		"nativeSrc": "17989:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17989:19:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "17938:41:11",
																	"nodeType": "YulIdentifier",
																	"src": "17938:41:11"
																},
																"nativeSrc": "17938:71:11",
																"nodeType": "YulFunctionCall",
																"src": "17938:71:11"
															},
															"nativeSrc": "17938:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "17938:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_uint8_t_address_t_bytes_memory_ptr_t_uint64__to_t_uint64_t_uint8_t_address_t_bytes_memory_ptr_t_uint64__fromStack_reversed",
												"nativeSrc": "17281:735:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17441:9:11",
														"nodeType": "YulTypedName",
														"src": "17441:9:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "17453:6:11",
														"nodeType": "YulTypedName",
														"src": "17453:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17461:6:11",
														"nodeType": "YulTypedName",
														"src": "17461:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17469:6:11",
														"nodeType": "YulTypedName",
														"src": "17469:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17477:6:11",
														"nodeType": "YulTypedName",
														"src": "17477:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17485:6:11",
														"nodeType": "YulTypedName",
														"src": "17485:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17496:4:11",
														"nodeType": "YulTypedName",
														"src": "17496:4:11",
														"type": ""
													}
												],
												"src": "17281:735:11"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IOmniPortal_$175_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IOmniPortal_$175_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IOmniPortal_$175_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IOmniPortal_$175__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IOmniPortal_$175_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // struct XTypes.MsgContext\n    function abi_decode_t_struct$_MsgContext_$245_memory_ptr_fromMemory(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x40) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x40)\n\n        {\n            // sourceChainId\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint64_fromMemory(add(headStart, offset), end))\n\n        }\n\n        {\n            // sender\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address_fromMemory(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_MsgContext_$245_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_MsgContext_$245_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808(memPtr) {\n\n        mstore(add(memPtr, 0), \"OmniERC20: Only callable via cro\")\n\n        mstore(add(memPtr, 32), \"ss-chain message\")\n\n    }\n\n    function abi_encode_t_stringliteral_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 48)\n        store_literal_in_memory_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805(memPtr) {\n\n        mstore(add(memPtr, 0), \"OmniERC20: Insufficient fee\")\n\n    }\n\n    function abi_encode_t_stringliteral_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint64_t_bytes_memory_ptr_t_uint64__to_t_uint64_t_bytes_memory_ptr_t_uint64__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6(memPtr) {\n\n        mstore(add(memPtr, 0), \"XApp: insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint8_t_address_t_bytes_memory_ptr_t_uint64__to_t_uint64_t_uint8_t_address_t_bytes_memory_ptr_t_uint64__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value4,  add(headStart, 128))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100dc575f3560e01c80634a536a061161007e57806395d89b411161005857806395d89b41146102b6578063a9059cbb146102e0578063d15dcd621461031c578063dd62ed3e14610338576100dc565b80634a536a061461022857806370a082311461025057806374eeb8471461028c576100dc565b806323b872dd116100ba57806323b872dd14610170578063313ce567146101ac57806339acf9f1146101d657806340c10f1914610200576100dc565b806306fdde03146100e0578063095ea7b31461010a57806318160ddd14610146575b5f80fd5b3480156100eb575f80fd5b506100f4610374565b6040516101019190611183565b60405180910390f35b348015610115575f80fd5b50610130600480360381019061012b919061123d565b610404565b60405161013d9190611295565b60405180910390f35b348015610151575f80fd5b5061015a610426565b60405161016791906112bd565b60405180910390f35b34801561017b575f80fd5b50610196600480360381019061019191906112d6565b61042f565b6040516101a39190611295565b60405180910390f35b3480156101b7575f80fd5b506101c061045d565b6040516101cd9190611341565b60405180910390f35b3480156101e1575f80fd5b506101ea610465565b6040516101f791906113b5565b60405180910390f35b34801561020b575f80fd5b506102266004803603810190610221919061123d565b610488565b005b348015610233575f80fd5b5061024e600480360381019061024991906112d6565b610496565b005b34801561025b575f80fd5b50610276600480360381019061027191906113ce565b610633565b60405161028391906112bd565b60405180910390f35b348015610297575f80fd5b506102a0610679565b6040516102ad9190611341565b60405180910390f35b3480156102c1575f80fd5b506102ca61068b565b6040516102d79190611183565b60405180910390f35b3480156102eb575f80fd5b506103066004803603810190610301919061123d565b61071b565b6040516103139190611295565b60405180910390f35b61033660048036038101906103319190611436565b61073d565b005b348015610343575f80fd5b5061035e60048036038101906103599190611486565b61080d565b60405161036b91906112bd565b60405180910390f35b606060058054610383906114f1565b80601f01602080910402602001604051908101604052809291908181526020018280546103af906114f1565b80156103fa5780601f106103d1576101008083540402835291602001916103fa565b820191905f5260205f20905b8154815290600101906020018083116103dd57829003601f168201915b5050505050905090565b5f8061040e61088f565b905061041b818585610896565b600191505092915050565b5f600454905090565b5f8061043961088f565b90506104468582856108a8565b61045185858561093a565b60019150509392505050565b5f6012905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104928282610a2a565b5050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632f32700e6040518163ffffffff1660e01b81526004016040805180830381865afa1580156104fd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105219190611612565b60015f820151815f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055506020820151815f0160086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506105a0610aa9565b6105df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d6906116ad565b60405180910390fd5b6105ea838383610b92565b60015f8082015f6101000a81549067ffffffffffffffff02191690555f820160086101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050505050565b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60149054906101000a900460ff1681565b60606006805461069a906114f1565b80601f01602080910402602001604051908101604052809291908181526020018280546106c6906114f1565b80156107115780601f106106e857610100808354040283529160200191610711565b820191905f5260205f20905b8154815290600101906020018083116106f457829003601f168201915b5050505050905090565b5f8061072561088f565b905061073281858561093a565b600191505092915050565b5f61074661088f565b905061075381308461093a565b5f308484604051602401610769939291906116da565b604051602081830303815290604052634a536a0660e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090505f6107c0863084620249f0610dae565b905080341015610805576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fc90611759565b60405180910390fd5b505050505050565b5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f33905090565b6108a38383836001610f44565b505050565b5f6108b3848461080d565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109345781811015610925578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161091c93929190611777565b60405180910390fd5b61093384848484035f610f44565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109aa575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109a191906117ac565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a1a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a1191906117ac565b60405180910390fd5b610a25838383610b92565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a9a575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a9191906117ac565b60405180910390fd5b610aa55f8383610b92565b5050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166355e2448e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b13573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b3791906117ef565b8015610b8d57505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b905090565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610be2578060045f828254610bd69190611847565b92505081905550610cb2565b5f60025f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610c6c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610c6393929190611777565b60405180910390fd5b81810360025f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cf9578060045f8282540392505081905550610d44565b8060025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610da191906112bd565b60405180910390a3505050565b5f805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638dd9523c8786866040518463ffffffff1660e01b8152600401610e0c939291906118db565b602060405180830381865afa158015610e27573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e4b919061192b565b90508047101580610e5c5750803410155b610e9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e92906119a0565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c21dda4f82885f60149054906101000a900460ff168989896040518763ffffffff1660e01b8152600401610f0a9594939291906119be565b5f604051808303818588803b158015610f21575f80fd5b505af1158015610f33573d5f803e3d5ffd5b505050505080915050949350505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610fb4575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610fab91906117ac565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611024575f6040517f94280d6200000000000000000000000000000000000000000000000000000000815260040161101b91906117ac565b60405180910390fd5b8160035f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561110d578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161110491906112bd565b60405180910390a35b50505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61115582611113565b61115f818561111d565b935061116f81856020860161112d565b6111788161113b565b840191505092915050565b5f6020820190508181035f83015261119b818461114b565b905092915050565b5f604051905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111d9826111b0565b9050919050565b6111e9816111cf565b81146111f3575f80fd5b50565b5f81359050611204816111e0565b92915050565b5f819050919050565b61121c8161120a565b8114611226575f80fd5b50565b5f8135905061123781611213565b92915050565b5f8060408385031215611253576112526111ac565b5b5f611260858286016111f6565b925050602061127185828601611229565b9150509250929050565b5f8115159050919050565b61128f8161127b565b82525050565b5f6020820190506112a85f830184611286565b92915050565b6112b78161120a565b82525050565b5f6020820190506112d05f8301846112ae565b92915050565b5f805f606084860312156112ed576112ec6111ac565b5b5f6112fa868287016111f6565b935050602061130b868287016111f6565b925050604061131c86828701611229565b9150509250925092565b5f60ff82169050919050565b61133b81611326565b82525050565b5f6020820190506113545f830184611332565b92915050565b5f819050919050565b5f61137d611378611373846111b0565b61135a565b6111b0565b9050919050565b5f61138e82611363565b9050919050565b5f61139f82611384565b9050919050565b6113af81611395565b82525050565b5f6020820190506113c85f8301846113a6565b92915050565b5f602082840312156113e3576113e26111ac565b5b5f6113f0848285016111f6565b91505092915050565b5f67ffffffffffffffff82169050919050565b611415816113f9565b811461141f575f80fd5b50565b5f813590506114308161140c565b92915050565b5f805f6060848603121561144d5761144c6111ac565b5b5f61145a86828701611422565b935050602061146b868287016111f6565b925050604061147c86828701611229565b9150509250925092565b5f806040838503121561149c5761149b6111ac565b5b5f6114a9858286016111f6565b92505060206114ba858286016111f6565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061150857607f821691505b60208210810361151b5761151a6114c4565b5b50919050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61155b8261113b565b810181811067ffffffffffffffff8211171561157a57611579611525565b5b80604052505050565b5f61158c6111a3565b90506115988282611552565b919050565b5f815190506115ab8161140c565b92915050565b5f815190506115bf816111e0565b92915050565b5f604082840312156115da576115d9611521565b5b6115e46040611583565b90505f6115f38482850161159d565b5f830152506020611606848285016115b1565b60208301525092915050565b5f60408284031215611627576116266111ac565b5b5f611634848285016115c5565b91505092915050565b7f4f6d6e6945524332303a204f6e6c792063616c6c61626c65207669612063726f5f8201527f73732d636861696e206d65737361676500000000000000000000000000000000602082015250565b5f61169760308361111d565b91506116a28261163d565b604082019050919050565b5f6020820190508181035f8301526116c48161168b565b9050919050565b6116d4816111cf565b82525050565b5f6060820190506116ed5f8301866116cb565b6116fa60208301856116cb565b61170760408301846112ae565b949350505050565b7f4f6d6e6945524332303a20496e73756666696369656e742066656500000000005f82015250565b5f611743601b8361111d565b915061174e8261170f565b602082019050919050565b5f6020820190508181035f83015261177081611737565b9050919050565b5f60608201905061178a5f8301866116cb565b61179760208301856112ae565b6117a460408301846112ae565b949350505050565b5f6020820190506117bf5f8301846116cb565b92915050565b6117ce8161127b565b81146117d8575f80fd5b50565b5f815190506117e9816117c5565b92915050565b5f60208284031215611804576118036111ac565b5b5f611811848285016117db565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118518261120a565b915061185c8361120a565b92508282019050808211156118745761187361181a565b5b92915050565b611883816113f9565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f6118ad82611889565b6118b78185611893565b93506118c781856020860161112d565b6118d08161113b565b840191505092915050565b5f6060820190506118ee5f83018661187a565b818103602083015261190081856118a3565b905061190f604083018461187a565b949350505050565b5f8151905061192581611213565b92915050565b5f602082840312156119405761193f6111ac565b5b5f61194d84828501611917565b91505092915050565b7f584170703a20696e73756666696369656e742066756e647300000000000000005f82015250565b5f61198a60188361111d565b915061199582611956565b602082019050919050565b5f6020820190508181035f8301526119b78161197e565b9050919050565b5f60a0820190506119d15f83018861187a565b6119de6020830187611332565b6119eb60408301866116cb565b81810360608301526119fd81856118a3565b9050611a0c608083018461187a565b969550505050505056fea264697066735822122046700868c6dfbdf830947272e2181fd8499785655d3d7cee16653aa26672ef4564736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4A536A06 GT PUSH2 0x7E JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xD15DCD62 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x338 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x4A536A06 EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x74EEB847 EQ PUSH2 0x28C JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xBA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x39ACF9F1 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x200 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF4 PUSH2 0x374 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x130 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12B SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH2 0x426 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x12BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x42F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH2 0x45D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EA PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x12D6 JUMP JUMPDEST PUSH2 0x496 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x13CE JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x12BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A0 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CA PUSH2 0x68B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x123D JUMP JUMPDEST PUSH2 0x71B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x1295 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x336 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x331 SWAP2 SWAP1 PUSH2 0x1436 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x343 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x359 SWAP2 SWAP1 PUSH2 0x1486 JUMP JUMPDEST PUSH2 0x80D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x12BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x383 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3AF SWAP1 PUSH2 0x14F1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3DD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x40E PUSH2 0x88F JUMP JUMPDEST SWAP1 POP PUSH2 0x41B DUP2 DUP6 DUP6 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x439 PUSH2 0x88F JUMP JUMPDEST SWAP1 POP PUSH2 0x446 DUP6 DUP3 DUP6 PUSH2 0x8A8 JUMP JUMPDEST PUSH2 0x451 DUP6 DUP6 DUP6 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x492 DUP3 DUP3 PUSH2 0xA2A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2F32700E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4FD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x1612 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x5A0 PUSH2 0xAA9 JUMP JUMPDEST PUSH2 0x5DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D6 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5EA DUP4 DUP4 DUP4 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH0 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x69A SWAP1 PUSH2 0x14F1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6C6 SWAP1 PUSH2 0x14F1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x711 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6E8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x711 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6F4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x725 PUSH2 0x88F JUMP JUMPDEST SWAP1 POP PUSH2 0x732 DUP2 DUP6 DUP6 PUSH2 0x93A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x746 PUSH2 0x88F JUMP JUMPDEST SWAP1 POP PUSH2 0x753 DUP2 ADDRESS DUP5 PUSH2 0x93A JUMP JUMPDEST PUSH0 ADDRESS DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x769 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH4 0x4A536A06 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x7C0 DUP7 ADDRESS DUP5 PUSH3 0x249F0 PUSH2 0xDAE JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x805 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FC SWAP1 PUSH2 0x1759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8A3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF44 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8B3 DUP5 DUP5 PUSH2 0x80D JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x934 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x925 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x91C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x933 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xF44 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A1 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA11 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA25 DUP4 DUP4 DUP4 PUSH2 0xB92 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA91 SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA5 PUSH0 DUP4 DUP4 PUSH2 0xB92 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x55E2448E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB13 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB37 SWAP2 SWAP1 PUSH2 0x17EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB8D JUMPI POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE2 JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xBD6 SWAP2 SWAP1 PUSH2 0x1847 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xCB2 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC6C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC63 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1777 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x2 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCF9 JUMPI DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xD44 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xDA1 SWAP2 SWAP1 PUSH2 0x12BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DD9523C DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE27 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE4B SWAP2 SWAP1 PUSH2 0x192B JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO DUP1 PUSH2 0xE5C JUMPI POP DUP1 CALLVALUE LT ISZERO JUMPDEST PUSH2 0xE9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE92 SWAP1 PUSH2 0x19A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC21DDA4F DUP3 DUP9 PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP10 DUP10 DUP10 PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF0A SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19BE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF21 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF33 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP DUP1 SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFB4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAB SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1024 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101B SWAP2 SWAP1 PUSH2 0x17AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x110D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1104 SWAP2 SWAP1 PUSH2 0x12BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1155 DUP3 PUSH2 0x1113 JUMP JUMPDEST PUSH2 0x115F DUP2 DUP6 PUSH2 0x111D JUMP JUMPDEST SWAP4 POP PUSH2 0x116F DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x112D JUMP JUMPDEST PUSH2 0x1178 DUP2 PUSH2 0x113B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x119B DUP2 DUP5 PUSH2 0x114B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11D9 DUP3 PUSH2 0x11B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11E9 DUP2 PUSH2 0x11CF JUMP JUMPDEST DUP2 EQ PUSH2 0x11F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1204 DUP2 PUSH2 0x11E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x121C DUP2 PUSH2 0x120A JUMP JUMPDEST DUP2 EQ PUSH2 0x1226 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1237 DUP2 PUSH2 0x1213 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1253 JUMPI PUSH2 0x1252 PUSH2 0x11AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1260 DUP6 DUP3 DUP7 ADD PUSH2 0x11F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1271 DUP6 DUP3 DUP7 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x128F DUP2 PUSH2 0x127B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12A8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1286 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12B7 DUP2 PUSH2 0x120A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12D0 PUSH0 DUP4 ADD DUP5 PUSH2 0x12AE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12ED JUMPI PUSH2 0x12EC PUSH2 0x11AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12FA DUP7 DUP3 DUP8 ADD PUSH2 0x11F6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x130B DUP7 DUP3 DUP8 ADD PUSH2 0x11F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x131C DUP7 DUP3 DUP8 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x133B DUP2 PUSH2 0x1326 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1354 PUSH0 DUP4 ADD DUP5 PUSH2 0x1332 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x137D PUSH2 0x1378 PUSH2 0x1373 DUP5 PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0x135A JUMP JUMPDEST PUSH2 0x11B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x138E DUP3 PUSH2 0x1363 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x139F DUP3 PUSH2 0x1384 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13AF DUP2 PUSH2 0x1395 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13C8 PUSH0 DUP4 ADD DUP5 PUSH2 0x13A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E3 JUMPI PUSH2 0x13E2 PUSH2 0x11AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13F0 DUP5 DUP3 DUP6 ADD PUSH2 0x11F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1415 DUP2 PUSH2 0x13F9 JUMP JUMPDEST DUP2 EQ PUSH2 0x141F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1430 DUP2 PUSH2 0x140C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x144D JUMPI PUSH2 0x144C PUSH2 0x11AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x145A DUP7 DUP3 DUP8 ADD PUSH2 0x1422 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x146B DUP7 DUP3 DUP8 ADD PUSH2 0x11F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x147C DUP7 DUP3 DUP8 ADD PUSH2 0x1229 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149C JUMPI PUSH2 0x149B PUSH2 0x11AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14A9 DUP6 DUP3 DUP7 ADD PUSH2 0x11F6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14BA DUP6 DUP3 DUP7 ADD PUSH2 0x11F6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1508 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x151B JUMPI PUSH2 0x151A PUSH2 0x14C4 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x155B DUP3 PUSH2 0x113B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x157A JUMPI PUSH2 0x1579 PUSH2 0x1525 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x158C PUSH2 0x11A3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1598 DUP3 DUP3 PUSH2 0x1552 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x15AB DUP2 PUSH2 0x140C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x15BF DUP2 PUSH2 0x11E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15DA JUMPI PUSH2 0x15D9 PUSH2 0x1521 JUMP JUMPDEST JUMPDEST PUSH2 0x15E4 PUSH1 0x40 PUSH2 0x1583 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x15F3 DUP5 DUP3 DUP6 ADD PUSH2 0x159D JUMP JUMPDEST PUSH0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x1606 DUP5 DUP3 DUP6 ADD PUSH2 0x15B1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1627 JUMPI PUSH2 0x1626 PUSH2 0x11AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1634 DUP5 DUP3 DUP6 ADD PUSH2 0x15C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6D6E6945524332303A204F6E6C792063616C6C61626C65207669612063726F PUSH0 DUP3 ADD MSTORE PUSH32 0x73732D636861696E206D65737361676500000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1697 PUSH1 0x30 DUP4 PUSH2 0x111D JUMP JUMPDEST SWAP2 POP PUSH2 0x16A2 DUP3 PUSH2 0x163D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16C4 DUP2 PUSH2 0x168B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D4 DUP2 PUSH2 0x11CF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x16ED PUSH0 DUP4 ADD DUP7 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x16FA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x1707 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12AE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6D6E6945524332303A20496E73756666696369656E74206665650000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1743 PUSH1 0x1B DUP4 PUSH2 0x111D JUMP JUMPDEST SWAP2 POP PUSH2 0x174E DUP3 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1770 DUP2 PUSH2 0x1737 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x178A PUSH0 DUP4 ADD DUP7 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x1797 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12AE JUMP JUMPDEST PUSH2 0x17A4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12AE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17BF PUSH0 DUP4 ADD DUP5 PUSH2 0x16CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17CE DUP2 PUSH2 0x127B JUMP JUMPDEST DUP2 EQ PUSH2 0x17D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x17E9 DUP2 PUSH2 0x17C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1804 JUMPI PUSH2 0x1803 PUSH2 0x11AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1811 DUP5 DUP3 DUP6 ADD PUSH2 0x17DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1851 DUP3 PUSH2 0x120A JUMP JUMPDEST SWAP2 POP PUSH2 0x185C DUP4 PUSH2 0x120A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1874 JUMPI PUSH2 0x1873 PUSH2 0x181A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1883 DUP2 PUSH2 0x13F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x18AD DUP3 PUSH2 0x1889 JUMP JUMPDEST PUSH2 0x18B7 DUP2 DUP6 PUSH2 0x1893 JUMP JUMPDEST SWAP4 POP PUSH2 0x18C7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x112D JUMP JUMPDEST PUSH2 0x18D0 DUP2 PUSH2 0x113B JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x18EE PUSH0 DUP4 ADD DUP7 PUSH2 0x187A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x1900 DUP2 DUP6 PUSH2 0x18A3 JUMP JUMPDEST SWAP1 POP PUSH2 0x190F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1925 DUP2 PUSH2 0x1213 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1940 JUMPI PUSH2 0x193F PUSH2 0x11AC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x194D DUP5 DUP3 DUP6 ADD PUSH2 0x1917 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x584170703A20696E73756666696369656E742066756E64730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x198A PUSH1 0x18 DUP4 PUSH2 0x111D JUMP JUMPDEST SWAP2 POP PUSH2 0x1995 DUP3 PUSH2 0x1956 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19B7 DUP2 PUSH2 0x197E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x19D1 PUSH0 DUP4 ADD DUP9 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x19DE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1332 JUMP JUMPDEST PUSH2 0x19EB PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x16CB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x19FD DUP2 DUP6 PUSH2 0x18A3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1A0C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID PUSH17 0x868C6DFBDF830947272E2181FD8499785 PUSH6 0x5D3D7CEE1665 GASPRICE LOG2 PUSH7 0x72EF4564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "128:856:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:98:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1656:195;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1257:106;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1857:253;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1160:91;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;680:23:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;577:161:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2759:204:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1369:125;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;779:29:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1052:102:7;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2117:187;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2309:444;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1501:149;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;948:98;1002:13;1034:5;1027:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;948:98;:::o;1656:195::-;1738:4;1754:13;1770:12;:10;:12::i;:::-;1754:28;;1792:31;1801:5;1808:7;1817:5;1792:8;:31::i;:::-;1840:4;1833:11;;;1656:195;;;;:::o;1257:106::-;1318:7;1344:12;;1337:19;;1257:106;:::o;1857:253::-;1953:4;1969:15;1987:12;:10;:12::i;:::-;1969:30;;2009:37;2025:4;2031:7;2040:5;2009:15;:37::i;:::-;2056:26;2066:4;2072:2;2076:5;2056:9;:26::i;:::-;2099:4;2092:11;;;1857:253;;;;;:::o;1160:91::-;1218:5;1242:2;1235:9;;1160:91;:::o;680:23:4:-;;;;;;;;;;;;:::o;577:161:9:-;710:21;716:7;725:5;710;:21::i;:::-;577:161;;:::o;2759:204:7:-;1058:4:4;;;;;;;;;;:9;;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1051:4;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2859:9:7::1;:7;:9::i;:::-;2851:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2931:24;2939:4;2945:2;2949:5;2931:7;:24::i;:::-;1097:4:4::0;;1090:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2759:204:7;;;:::o;1369:125::-;1443:7;1469:9;:18;1479:7;1469:18;;;;;;;;;;;;;;;;1462:25;;1369:125;;;:::o;779:29:4:-;;;;;;;;;;;;;:::o;1052:102:7:-;1108:13;1140:7;1133:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1052:102;:::o;2117:187::-;2195:4;2211:13;2227:12;:10;:12::i;:::-;2211:28;;2249:27;2259:5;2266:2;2270:5;2249:9;:27::i;:::-;2293:4;2286:11;;;2117:187;;;;:::o;2309:444::-;2400:12;2415;:10;:12::i;:::-;2400:27;;2437:37;2447:4;2461;2468:5;2437:9;:37::i;:::-;2521:17;2592:4;2599:2;2603:5;2541:69;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2521:89;;2620:11;2634:45;2640:9;2659:4;2666;2672:6;2634:5;:45::i;:::-;2620:59;;2710:3;2697:9;:16;;2689:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2389:364;;;2309:444;;;:::o;1501:149::-;1590:7;1616:11;:18;1628:5;1616:18;;;;;;;;;;;;;;;:27;1635:7;1616:27;;;;;;;;;;;;;;;;1609:34;;1501:149;;;;:::o;656:96:10:-;709:7;735:10;728:17;;656:96;:::o;3998:128:7:-;4082:37;4091:5;4098:7;4107:5;4114:4;4082:8;:37::i;:::-;3998:128;;;:::o;4570:477::-;4669:24;4696:25;4706:5;4713:7;4696:9;:25::i;:::-;4669:52;;4755:17;4735:16;:37;4731:310;;4811:5;4792:16;:24;4788:130;;;4870:7;4879:16;4897:5;4843:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;4788:130;4959:57;4968:5;4975:7;5003:5;4984:16;:24;5010:5;4959:8;:57::i;:::-;4731:310;4659:388;4570:477;;;:::o;2969:309::-;3076:1;3060:18;;:4;:18;;;3056:86;;3128:1;3101:30;;;;;;;;;;;:::i;:::-;;;;;;;;3056:86;3169:1;3155:16;;:2;:16;;;3151:86;;3223:1;3194:32;;;;;;;;;;;:::i;:::-;;;;;;;;3151:86;3247:24;3255:4;3261:2;3265:5;3247:7;:24::i;:::-;2969:309;;;:::o;774:208:9:-;863:1;844:21;;:7;:21;;;840:91;;917:1;888:32;;;;;;;;;;;:::i;:::-;;;;;;;;840:91;940:35;956:1;960:7;969:5;940:7;:35::i;:::-;774:208;;:::o;1209:117:4:-;1251:4;1274;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:45;;;;;1314:4;;;;;;;;;;1292:27;;:10;:27;;;1274:45;1267:52;;1209:117;:::o;3285:706:7:-;3390:1;3374:18;;:4;:18;;;3370:359;;3424:5;3408:12;;:21;;;;;;;:::i;:::-;;;;;;;;3370:359;;;3460:19;3482:9;:15;3492:4;3482:15;;;;;;;;;;;;;;;;3460:37;;3529:5;3515:11;:19;3511:115;;;3586:4;3592:11;3605:5;3561:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;3511:115;3699:5;3685:11;:19;3667:9;:15;3677:4;3667:15;;;;;;;;;;;;;;;:37;;;;3446:283;3370:359;3757:1;3743:16;;:2;:16;;;3739:205;;3819:5;3803:12;;:21;;;;;;;;;;;3739:205;;;3914:5;3897:9;:13;3907:2;3897:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;3739:205;3974:2;3959:25;;3968:4;3959:25;;;3978:5;3959:25;;;;;;:::i;:::-;;;;;;;;3285:706;;;:::o;2156:381:4:-;2257:7;2276:11;2290:4;;;;;;;;;;:11;;;2302;2315:4;2321:8;2290:40;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2276:54;;2373:3;2348:21;:28;;:48;;;;2393:3;2380:9;:16;;2348:48;2340:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2435:4;;;;;;;;;;:10;;;2454:3;2460:11;2473:16;;;;;;;;;;;2491:2;2495:4;2501:8;2435:75;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2527:3;2520:10;;;2156:381;;;;;;:::o;4132:432:7:-;4261:1;4244:19;;:5;:19;;;4240:89;;4315:1;4286:32;;;;;;;;;;;:::i;:::-;;;;;;;;4240:89;4361:1;4342:21;;:7;:21;;;4338:90;;4414:1;4386:31;;;;;;;;;;;:::i;:::-;;;;;;;;4338:90;4467:5;4437:11;:18;4449:5;4437:18;;;;;;;;;;;;;;;:27;4456:7;4437:27;;;;;;;;;;;;;;;:35;;;;4486:9;4482:76;;;4532:7;4516:31;;4525:5;4516:31;;;4541:5;4516:31;;;;;;:::i;:::-;;;;;;;;4482:76;4132:432;;;;:::o;7:99:11:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:60::-;4774:3;4795:5;4788:12;;4746:60;;;:::o;4812:142::-;4862:9;4895:53;4913:34;4922:24;4940:5;4922:24;:::i;:::-;4913:34;:::i;:::-;4895:53;:::i;:::-;4882:66;;4812:142;;;:::o;4960:126::-;5010:9;5043:37;5074:5;5043:37;:::i;:::-;5030:50;;4960:126;;;:::o;5092:145::-;5161:9;5194:37;5225:5;5194:37;:::i;:::-;5181:50;;5092:145;;;:::o;5243:169::-;5349:56;5399:5;5349:56;:::i;:::-;5344:3;5337:69;5243:169;;:::o;5418:260::-;5530:4;5568:2;5557:9;5553:18;5545:26;;5581:90;5668:1;5657:9;5653:17;5644:6;5581:90;:::i;:::-;5418:260;;;;:::o;5684:329::-;5743:6;5792:2;5780:9;5771:7;5767:23;5763:32;5760:119;;;5798:79;;:::i;:::-;5760:119;5918:1;5943:53;5988:7;5979:6;5968:9;5964:22;5943:53;:::i;:::-;5933:63;;5889:117;5684:329;;;;:::o;6019:101::-;6055:7;6095:18;6088:5;6084:30;6073:41;;6019:101;;;:::o;6126:120::-;6198:23;6215:5;6198:23;:::i;:::-;6191:5;6188:34;6178:62;;6236:1;6233;6226:12;6178:62;6126:120;:::o;6252:137::-;6297:5;6335:6;6322:20;6313:29;;6351:32;6377:5;6351:32;:::i;:::-;6252:137;;;;:::o;6395:617::-;6471:6;6479;6487;6536:2;6524:9;6515:7;6511:23;6507:32;6504:119;;;6542:79;;:::i;:::-;6504:119;6662:1;6687:52;6731:7;6722:6;6711:9;6707:22;6687:52;:::i;:::-;6677:62;;6633:116;6788:2;6814:53;6859:7;6850:6;6839:9;6835:22;6814:53;:::i;:::-;6804:63;;6759:118;6916:2;6942:53;6987:7;6978:6;6967:9;6963:22;6942:53;:::i;:::-;6932:63;;6887:118;6395:617;;;;;:::o;7018:474::-;7086:6;7094;7143:2;7131:9;7122:7;7118:23;7114:32;7111:119;;;7149:79;;:::i;:::-;7111:119;7269:1;7294:53;7339:7;7330:6;7319:9;7315:22;7294:53;:::i;:::-;7284:63;;7240:117;7396:2;7422:53;7467:7;7458:6;7447:9;7443:22;7422:53;:::i;:::-;7412:63;;7367:118;7018:474;;;;;:::o;7498:180::-;7546:77;7543:1;7536:88;7643:4;7640:1;7633:15;7667:4;7664:1;7657:15;7684:320;7728:6;7765:1;7759:4;7755:12;7745:22;;7812:1;7806:4;7802:12;7833:18;7823:81;;7889:4;7881:6;7877:17;7867:27;;7823:81;7951:2;7943:6;7940:14;7920:18;7917:38;7914:84;;7970:18;;:::i;:::-;7914:84;7735:269;7684:320;;;:::o;8010:117::-;8119:1;8116;8109:12;8133:180;8181:77;8178:1;8171:88;8278:4;8275:1;8268:15;8302:4;8299:1;8292:15;8319:281;8402:27;8424:4;8402:27;:::i;:::-;8394:6;8390:40;8532:6;8520:10;8517:22;8496:18;8484:10;8481:34;8478:62;8475:88;;;8543:18;;:::i;:::-;8475:88;8583:10;8579:2;8572:22;8362:238;8319:281;;:::o;8606:129::-;8640:6;8667:20;;:::i;:::-;8657:30;;8696:33;8724:4;8716:6;8696:33;:::i;:::-;8606:129;;;:::o;8864:141::-;8920:5;8951:6;8945:13;8936:22;;8967:32;8993:5;8967:32;:::i;:::-;8864:141;;;;:::o;9011:143::-;9068:5;9099:6;9093:13;9084:22;;9115:33;9142:5;9115:33;:::i;:::-;9011:143;;;;:::o;9192:619::-;9279:5;9323:4;9311:9;9306:3;9302:19;9298:30;9295:117;;;9331:79;;:::i;:::-;9295:117;9430:21;9446:4;9430:21;:::i;:::-;9421:30;;9519:1;9559:59;9614:3;9605:6;9594:9;9590:22;9559:59;:::i;:::-;9552:4;9545:5;9541:16;9534:85;9461:169;9691:2;9732:60;9788:3;9779:6;9768:9;9764:22;9732:60;:::i;:::-;9725:4;9718:5;9714:16;9707:86;9640:164;9192:619;;;;:::o;9817:405::-;9914:6;9963:2;9951:9;9942:7;9938:23;9934:32;9931:119;;;9969:79;;:::i;:::-;9931:119;10089:1;10114:91;10197:7;10188:6;10177:9;10173:22;10114:91;:::i;:::-;10104:101;;10060:155;9817:405;;;;:::o;10228:235::-;10368:34;10364:1;10356:6;10352:14;10345:58;10437:18;10432:2;10424:6;10420:15;10413:43;10228:235;:::o;10469:366::-;10611:3;10632:67;10696:2;10691:3;10632:67;:::i;:::-;10625:74;;10708:93;10797:3;10708:93;:::i;:::-;10826:2;10821:3;10817:12;10810:19;;10469:366;;;:::o;10841:419::-;11007:4;11045:2;11034:9;11030:18;11022:26;;11094:9;11088:4;11084:20;11080:1;11069:9;11065:17;11058:47;11122:131;11248:4;11122:131;:::i;:::-;11114:139;;10841:419;;;:::o;11266:118::-;11353:24;11371:5;11353:24;:::i;:::-;11348:3;11341:37;11266:118;;:::o;11390:442::-;11539:4;11577:2;11566:9;11562:18;11554:26;;11590:71;11658:1;11647:9;11643:17;11634:6;11590:71;:::i;:::-;11671:72;11739:2;11728:9;11724:18;11715:6;11671:72;:::i;:::-;11753;11821:2;11810:9;11806:18;11797:6;11753:72;:::i;:::-;11390:442;;;;;;:::o;11838:177::-;11978:29;11974:1;11966:6;11962:14;11955:53;11838:177;:::o;12021:366::-;12163:3;12184:67;12248:2;12243:3;12184:67;:::i;:::-;12177:74;;12260:93;12349:3;12260:93;:::i;:::-;12378:2;12373:3;12369:12;12362:19;;12021:366;;;:::o;12393:419::-;12559:4;12597:2;12586:9;12582:18;12574:26;;12646:9;12640:4;12636:20;12632:1;12621:9;12617:17;12610:47;12674:131;12800:4;12674:131;:::i;:::-;12666:139;;12393:419;;;:::o;12818:442::-;12967:4;13005:2;12994:9;12990:18;12982:26;;13018:71;13086:1;13075:9;13071:17;13062:6;13018:71;:::i;:::-;13099:72;13167:2;13156:9;13152:18;13143:6;13099:72;:::i;:::-;13181;13249:2;13238:9;13234:18;13225:6;13181:72;:::i;:::-;12818:442;;;;;;:::o;13266:222::-;13359:4;13397:2;13386:9;13382:18;13374:26;;13410:71;13478:1;13467:9;13463:17;13454:6;13410:71;:::i;:::-;13266:222;;;;:::o;13494:116::-;13564:21;13579:5;13564:21;:::i;:::-;13557:5;13554:32;13544:60;;13600:1;13597;13590:12;13544:60;13494:116;:::o;13616:137::-;13670:5;13701:6;13695:13;13686:22;;13717:30;13741:5;13717:30;:::i;:::-;13616:137;;;;:::o;13759:345::-;13826:6;13875:2;13863:9;13854:7;13850:23;13846:32;13843:119;;;13881:79;;:::i;:::-;13843:119;14001:1;14026:61;14079:7;14070:6;14059:9;14055:22;14026:61;:::i;:::-;14016:71;;13972:125;13759:345;;;;:::o;14110:180::-;14158:77;14155:1;14148:88;14255:4;14252:1;14245:15;14279:4;14276:1;14269:15;14296:191;14336:3;14355:20;14373:1;14355:20;:::i;:::-;14350:25;;14389:20;14407:1;14389:20;:::i;:::-;14384:25;;14432:1;14429;14425:9;14418:16;;14453:3;14450:1;14447:10;14444:36;;;14460:18;;:::i;:::-;14444:36;14296:191;;;;:::o;14493:115::-;14578:23;14595:5;14578:23;:::i;:::-;14573:3;14566:36;14493:115;;:::o;14614:98::-;14665:6;14699:5;14693:12;14683:22;;14614:98;;;:::o;14718:168::-;14801:11;14835:6;14830:3;14823:19;14875:4;14870:3;14866:14;14851:29;;14718:168;;;;:::o;14892:373::-;14978:3;15006:38;15038:5;15006:38;:::i;:::-;15060:70;15123:6;15118:3;15060:70;:::i;:::-;15053:77;;15139:65;15197:6;15192:3;15185:4;15178:5;15174:16;15139:65;:::i;:::-;15229:29;15251:6;15229:29;:::i;:::-;15224:3;15220:39;15213:46;;14982:283;14892:373;;;;:::o;15271:521::-;15434:4;15472:2;15461:9;15457:18;15449:26;;15485:69;15551:1;15540:9;15536:17;15527:6;15485:69;:::i;:::-;15601:9;15595:4;15591:20;15586:2;15575:9;15571:18;15564:48;15629:76;15700:4;15691:6;15629:76;:::i;:::-;15621:84;;15715:70;15781:2;15770:9;15766:18;15757:6;15715:70;:::i;:::-;15271:521;;;;;;:::o;15798:143::-;15855:5;15886:6;15880:13;15871:22;;15902:33;15929:5;15902:33;:::i;:::-;15798:143;;;;:::o;15947:351::-;16017:6;16066:2;16054:9;16045:7;16041:23;16037:32;16034:119;;;16072:79;;:::i;:::-;16034:119;16192:1;16217:64;16273:7;16264:6;16253:9;16249:22;16217:64;:::i;:::-;16207:74;;16163:128;15947:351;;;;:::o;16304:174::-;16444:26;16440:1;16432:6;16428:14;16421:50;16304:174;:::o;16484:366::-;16626:3;16647:67;16711:2;16706:3;16647:67;:::i;:::-;16640:74;;16723:93;16812:3;16723:93;:::i;:::-;16841:2;16836:3;16832:12;16825:19;;16484:366;;;:::o;16856:419::-;17022:4;17060:2;17049:9;17045:18;17037:26;;17109:9;17103:4;17099:20;17095:1;17084:9;17080:17;17073:47;17137:131;17263:4;17137:131;:::i;:::-;17129:139;;16856:419;;;:::o;17281:735::-;17496:4;17534:3;17523:9;17519:19;17511:27;;17548:69;17614:1;17603:9;17599:17;17590:6;17548:69;:::i;:::-;17627:68;17691:2;17680:9;17676:18;17667:6;17627:68;:::i;:::-;17705:72;17773:2;17762:9;17758:18;17749:6;17705:72;:::i;:::-;17824:9;17818:4;17814:20;17809:2;17798:9;17794:18;17787:48;17852:76;17923:4;17914:6;17852:76;:::i;:::-;17844:84;;17938:71;18004:3;17993:9;17989:19;17980:6;17938:71;:::i;:::-;17281:735;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1346400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"decimals()": "383",
								"defaultConfLevel()": "2583",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"omni()": "infinite",
								"receiveTransfer(address,address,uint256)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transfer(uint64,address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 128,
									"end": 984,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 128,
									"end": 984,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 128,
									"end": 984,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 472,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 169,
									"end": 472,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 169,
									"end": 472,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 472,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 169,
									"end": 472,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 169,
									"end": 472,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 169,
									"end": 472,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 169,
									"end": 472,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 316,
									"end": 321,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 323,
									"end": 330,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 332,
									"end": 342,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 855,
									"end": 865,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 571,
									"end": 572,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 296,
									"end": 317,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 311,
									"end": 316,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 296,
									"end": 310,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 296,
									"end": 310,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 296,
									"end": 310,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 296,
									"end": 317,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 296,
									"end": 317,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 296,
									"end": 317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 296,
									"end": 317,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 296,
									"end": 317,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 327,
									"end": 366,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 348,
									"end": 365,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 327,
									"end": 347,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 327,
									"end": 347,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 327,
									"end": 347,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 327,
									"end": 366,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 327,
									"end": 366,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 327,
									"end": 366,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 327,
									"end": 366,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 327,
									"end": 366,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 234,
									"end": 373,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 234,
									"end": 373,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 903,
									"end": 908,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 895,
									"end": 900,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 895,
									"end": 908,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 895,
									"end": 908,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 895,
									"end": 908,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 895,
									"end": 908,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 895,
									"end": 908,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 895,
									"end": 908,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 895,
									"end": 908,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 895,
									"end": 908,
									"modifierDepth": 1,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 895,
									"end": 908,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 895,
									"end": 908,
									"modifierDepth": 1,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 935,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 918,
									"end": 925,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 918,
									"end": 935,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 935,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 918,
									"end": 935,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 918,
									"end": 935,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 918,
									"end": 935,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 918,
									"end": 935,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 918,
									"end": 935,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 918,
									"end": 935,
									"modifierDepth": 1,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 918,
									"end": 935,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 918,
									"end": 935,
									"modifierDepth": 1,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 774,
									"end": 942,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 774,
									"end": 942,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 774,
									"end": 942,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 433,
									"end": 465,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 439,
									"end": 449,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 451,
									"end": 464,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 433,
									"end": 438,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 433,
									"end": 438,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 433,
									"end": 438,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 433,
									"end": 465,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 433,
									"end": 465,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 433,
									"end": 465,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 433,
									"end": 465,
									"modifierDepth": 1,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 433,
									"end": 465,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 169,
									"end": 472,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 128,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 128,
									"end": 984,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3791,
									"end": 3976,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 3791,
									"end": 3976,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3874,
									"end": 3875,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3857,
									"end": 3876,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3857,
									"end": 3876,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3857,
									"end": 3862,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3857,
									"end": 3876,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3857,
									"end": 3876,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3857,
									"end": 3876,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 3849,
									"end": 3899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 3849,
									"end": 3899,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3928,
									"end": 3933,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3913,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3909,
									"end": 3913,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3909,
									"end": 3934,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "PUSH",
									"source": 4,
									"value": "79162C8D053A07E70CDC1CCC536F0440B571F8508377D2BEF51094FADAB98F47"
								},
								{
									"begin": 3963,
									"end": 3968,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 3949,
									"end": 3969,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3949,
									"end": 3969,
									"name": "LOG1",
									"source": 4
								},
								{
									"begin": 3791,
									"end": 3976,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3791,
									"end": 3976,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3462,
									"end": 3663,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 3462,
									"end": 3663,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3531,
									"end": 3554,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 3549,
									"end": 3553,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3531,
									"end": 3548,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 3531,
									"end": 3548,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3531,
									"end": 3548,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 3531,
									"end": 3554,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3531,
									"end": 3554,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 3531,
									"end": 3554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3531,
									"end": 3554,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 3531,
									"end": 3554,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 3523,
									"end": 3583,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 3523,
									"end": 3583,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3612,
									"end": 3616,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3609,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3593,
									"end": 3609,
									"name": "PUSH",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3593,
									"end": 3616,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "PUSH",
									"source": 4,
									"value": "8DE08A798B4E50B4F351C1EAA91A11530043802BE3FFAC2DF87DB0C45A2E8483"
								},
								{
									"begin": 3651,
									"end": 3655,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 3631,
									"end": 3656,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3631,
									"end": 3656,
									"name": "LOG1",
									"source": 4
								},
								{
									"begin": 3462,
									"end": 3663,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3462,
									"end": 3663,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 774,
									"end": 982,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 774,
									"end": 982,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 863,
									"end": 864,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 844,
									"end": 865,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 844,
									"end": 865,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 844,
									"end": 851,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 844,
									"end": 865,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 844,
									"end": 865,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 844,
									"end": 865,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 840,
									"end": 931,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 840,
									"end": 931,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 917,
									"end": 918,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 888,
									"end": 920,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 888,
									"end": 920,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 888,
									"end": 920,
									"name": "PUSH",
									"source": 9,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 888,
									"end": 920,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 888,
									"end": 920,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 888,
									"end": 920,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 888,
									"end": 920,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 888,
									"end": 920,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 888,
									"end": 920,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 888,
									"end": 920,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 888,
									"end": 920,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 888,
									"end": 920,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 888,
									"end": 920,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 888,
									"end": 920,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 888,
									"end": 920,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 888,
									"end": 920,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 888,
									"end": 920,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 888,
									"end": 920,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 888,
									"end": 920,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 888,
									"end": 920,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 888,
									"end": 920,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 840,
									"end": 931,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 840,
									"end": 931,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 940,
									"end": 975,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 956,
									"end": 957,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 969,
									"end": 974,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 940,
									"end": 947,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 940,
									"end": 947,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 947,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 940,
									"end": 975,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 975,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 940,
									"end": 975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 940,
									"end": 975,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 940,
									"end": 975,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 774,
									"end": 982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 774,
									"end": 982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 774,
									"end": 982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 791,
									"end": 911,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 791,
									"end": 911,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 844,
									"end": 848,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 571,
									"end": 572,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 867,
									"end": 882,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 867,
									"end": 882,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 867,
									"end": 872,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 867,
									"end": 882,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 867,
									"end": 882,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 867,
									"end": 882,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 867,
									"end": 904,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 867,
									"end": 904,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 867,
									"end": 904,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 867,
									"end": 904,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 710,
									"end": 711,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 886,
									"end": 904,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 886,
									"end": 904,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 886,
									"end": 891,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 886,
									"end": 904,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 886,
									"end": 904,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 886,
									"end": 904,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 867,
									"end": 904,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 867,
									"end": 904,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 860,
									"end": 904,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 860,
									"end": 904,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 791,
									"end": 911,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 791,
									"end": 911,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 791,
									"end": 911,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 791,
									"end": 911,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3285,
									"end": 3991,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 3285,
									"end": 3991,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3390,
									"end": 3391,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3374,
									"end": 3392,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3374,
									"end": 3392,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3374,
									"end": 3378,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3374,
									"end": 3392,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3374,
									"end": 3392,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3374,
									"end": 3392,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3370,
									"end": 3729,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 3370,
									"end": 3729,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3424,
									"end": 3429,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3408,
									"end": 3420,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3408,
									"end": 3420,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3408,
									"end": 3429,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3408,
									"end": 3429,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3408,
									"end": 3429,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3408,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 3408,
									"end": 3429,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3408,
									"end": 3429,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3408,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3408,
									"end": 3429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3408,
									"end": 3429,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 3408,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3408,
									"end": 3429,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3408,
									"end": 3429,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3408,
									"end": 3429,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3408,
									"end": 3429,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3408,
									"end": 3429,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3408,
									"end": 3429,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3408,
									"end": 3429,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3370,
									"end": 3729,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3370,
									"end": 3729,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3370,
									"end": 3729,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 3370,
									"end": 3729,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3460,
									"end": 3479,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3482,
									"end": 3491,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3492,
									"end": 3496,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 3482,
									"end": 3497,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3460,
									"end": 3497,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3460,
									"end": 3497,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3529,
									"end": 3534,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3515,
									"end": 3526,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3515,
									"end": 3534,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3626,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 3511,
									"end": 3626,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3586,
									"end": 3590,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3592,
									"end": 3603,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3605,
									"end": 3610,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "PUSH",
									"source": 7,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 3561,
									"end": 3611,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3561,
									"end": 3611,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3511,
									"end": 3626,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 3511,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3699,
									"end": 3704,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3685,
									"end": 3696,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3685,
									"end": 3704,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3676,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3677,
									"end": 3681,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3667,
									"end": 3682,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3704,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3704,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3704,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3667,
									"end": 3704,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3446,
									"end": 3729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3370,
									"end": 3729,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3370,
									"end": 3729,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3757,
									"end": 3758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3743,
									"end": 3759,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3743,
									"end": 3759,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3743,
									"end": 3745,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3743,
									"end": 3759,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3743,
									"end": 3759,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3743,
									"end": 3759,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3739,
									"end": 3944,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3739,
									"end": 3944,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 3819,
									"end": 3824,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 3803,
									"end": 3815,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3803,
									"end": 3824,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3739,
									"end": 3944,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 3739,
									"end": 3944,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3739,
									"end": 3944,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 3739,
									"end": 3944,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3914,
									"end": 3919,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3906,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3907,
									"end": 3909,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3910,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3897,
									"end": 3919,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3919,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3919,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3919,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3919,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3919,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3919,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3919,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3919,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3919,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3897,
									"end": 3919,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3739,
									"end": 3944,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 3739,
									"end": 3944,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3974,
									"end": 3976,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3968,
									"end": 3972,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "PUSH",
									"source": 7,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 3978,
									"end": 3983,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 3959,
									"end": 3984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3959,
									"end": 3984,
									"name": "LOG3",
									"source": 7
								},
								{
									"begin": 3285,
									"end": 3991,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3285,
									"end": 3991,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3285,
									"end": 3991,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3285,
									"end": 3991,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "123"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 11,
									"value": "123"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "128"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 11,
									"value": "128"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "tag",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2647,
									"end": 2689,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2640,
									"end": 2645,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2636,
									"end": 2690,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2625,
									"end": 2690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 2696,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 2696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "tag",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2739,
									"end": 2746,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 2786,
									"end": 2791,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2768,
									"end": 2792,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "tag",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 2768,
									"end": 2792,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2757,
									"end": 2792,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2702,
									"end": 2798,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2702,
									"end": 2798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 2877,
									"end": 2901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "tag",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 2877,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2870,
									"end": 2875,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2867,
									"end": 2902,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2916,
									"end": 2917,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2913,
									"end": 2914,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2906,
									"end": 2918,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "tag",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 2857,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2804,
									"end": 2926,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2804,
									"end": 2926,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2989,
									"end": 2994,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3014,
									"end": 3027,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3005,
									"end": 3027,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 3063,
									"end": 3068,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 3036,
									"end": 3069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "tag",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 3036,
									"end": 3069,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2932,
									"end": 3075,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2932,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3118,
									"end": 3125,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3147,
									"end": 3152,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3136,
									"end": 3152,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3136,
									"end": 3152,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3081,
									"end": 3158,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3081,
									"end": 3158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "tag",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 3255,
									"end": 3260,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 3237,
									"end": 3261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "tag",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 3237,
									"end": 3261,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3230,
									"end": 3235,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3227,
									"end": 3262,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3276,
									"end": 3277,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3273,
									"end": 3274,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3266,
									"end": 3278,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "tag",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 3217,
									"end": 3280,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3164,
									"end": 3286,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3164,
									"end": 3286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3349,
									"end": 3354,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3380,
									"end": 3386,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3374,
									"end": 3387,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3365,
									"end": 3387,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3365,
									"end": 3387,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "144"
								},
								{
									"begin": 3423,
									"end": 3428,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 3396,
									"end": 3429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "tag",
									"source": 11,
									"value": "144"
								},
								{
									"begin": 3396,
									"end": 3429,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3292,
									"end": 3435,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3292,
									"end": 3435,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3558,
									"end": 3564,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3566,
									"end": 3572,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3574,
									"end": 3580,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3582,
									"end": 3588,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3634,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3619,
									"end": 3628,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3610,
									"end": 3617,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3606,
									"end": 3629,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 3602,
									"end": 3635,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "146"
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "147"
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 3638,
									"end": 3717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "tag",
									"source": 11,
									"value": "147"
								},
								{
									"begin": 3638,
									"end": 3717,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "tag",
									"source": 11,
									"value": "146"
								},
								{
									"begin": 3599,
									"end": 3719,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3779,
									"end": 3780,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3768,
									"end": 3777,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3764,
									"end": 3781,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3758,
									"end": 3782,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3809,
									"end": 3827,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3801,
									"end": 3807,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3798,
									"end": 3828,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3795,
									"end": 3912,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3795,
									"end": 3912,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "148"
								},
								{
									"begin": 3795,
									"end": 3912,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3831,
									"end": 3910,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "149"
								},
								{
									"begin": 3831,
									"end": 3910,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 3831,
									"end": 3910,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3831,
									"end": 3910,
									"name": "tag",
									"source": 11,
									"value": "149"
								},
								{
									"begin": 3831,
									"end": 3910,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3795,
									"end": 3912,
									"name": "tag",
									"source": 11,
									"value": "148"
								},
								{
									"begin": 3795,
									"end": 3912,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3936,
									"end": 4010,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "150"
								},
								{
									"begin": 4002,
									"end": 4009,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3993,
									"end": 3999,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3982,
									"end": 3991,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 3978,
									"end": 4000,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3936,
									"end": 4010,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 3936,
									"end": 4010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3936,
									"end": 4010,
									"name": "tag",
									"source": 11,
									"value": "150"
								},
								{
									"begin": 3936,
									"end": 4010,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3926,
									"end": 4010,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 3926,
									"end": 4010,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3729,
									"end": 4020,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4080,
									"end": 4082,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4069,
									"end": 4078,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 4065,
									"end": 4083,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4059,
									"end": 4084,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4111,
									"end": 4129,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4103,
									"end": 4109,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4100,
									"end": 4130,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 4097,
									"end": 4214,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 4097,
									"end": 4214,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "151"
								},
								{
									"begin": 4097,
									"end": 4214,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4133,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "152"
								},
								{
									"begin": 4133,
									"end": 4212,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 4133,
									"end": 4212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4133,
									"end": 4212,
									"name": "tag",
									"source": 11,
									"value": "152"
								},
								{
									"begin": 4133,
									"end": 4212,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4097,
									"end": 4214,
									"name": "tag",
									"source": 11,
									"value": "151"
								},
								{
									"begin": 4097,
									"end": 4214,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4238,
									"end": 4312,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "153"
								},
								{
									"begin": 4304,
									"end": 4311,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 4295,
									"end": 4301,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4284,
									"end": 4293,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 4280,
									"end": 4302,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4238,
									"end": 4312,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 4238,
									"end": 4312,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4238,
									"end": 4312,
									"name": "tag",
									"source": 11,
									"value": "153"
								},
								{
									"begin": 4238,
									"end": 4312,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4228,
									"end": 4312,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 4228,
									"end": 4312,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4030,
									"end": 4322,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4361,
									"end": 4363,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 4387,
									"end": 4451,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "154"
								},
								{
									"begin": 4443,
									"end": 4450,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 4434,
									"end": 4440,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4423,
									"end": 4432,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 4419,
									"end": 4441,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4387,
									"end": 4451,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 4387,
									"end": 4451,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4387,
									"end": 4451,
									"name": "tag",
									"source": 11,
									"value": "154"
								},
								{
									"begin": 4387,
									"end": 4451,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4377,
									"end": 4451,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4377,
									"end": 4451,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4332,
									"end": 4461,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4500,
									"end": 4502,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 4526,
									"end": 4590,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "155"
								},
								{
									"begin": 4582,
									"end": 4589,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 4573,
									"end": 4579,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4562,
									"end": 4571,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 4558,
									"end": 4580,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4526,
									"end": 4590,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 4526,
									"end": 4590,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4526,
									"end": 4590,
									"name": "tag",
									"source": 11,
									"value": "155"
								},
								{
									"begin": 4526,
									"end": 4590,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4516,
									"end": 4590,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4516,
									"end": 4590,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4471,
									"end": 4600,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3441,
									"end": 4607,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3441,
									"end": 4607,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4665,
									"end": 4671,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4699,
									"end": 4704,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4693,
									"end": 4705,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4683,
									"end": 4705,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4683,
									"end": 4705,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4613,
									"end": 4712,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4613,
									"end": 4712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4718,
									"end": 4898,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 4718,
									"end": 4898,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4766,
									"end": 4843,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4763,
									"end": 4764,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4756,
									"end": 4844,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4863,
									"end": 4867,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 4860,
									"end": 4861,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 4853,
									"end": 4868,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4887,
									"end": 4891,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4884,
									"end": 4885,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4877,
									"end": 4892,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4948,
									"end": 4954,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4985,
									"end": 4986,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 4979,
									"end": 4983,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4975,
									"end": 4987,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 4965,
									"end": 4987,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4965,
									"end": 4987,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5032,
									"end": 5033,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5026,
									"end": 5030,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5022,
									"end": 5034,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5053,
									"end": 5071,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "159"
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5109,
									"end": 5113,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 5101,
									"end": 5107,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5097,
									"end": 5114,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5087,
									"end": 5114,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5087,
									"end": 5114,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "tag",
									"source": 11,
									"value": "159"
								},
								{
									"begin": 5043,
									"end": 5124,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5171,
									"end": 5173,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5163,
									"end": 5169,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5160,
									"end": 5174,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 5140,
									"end": 5158,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5137,
									"end": 5175,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "160"
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "161"
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 5190,
									"end": 5208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "tag",
									"source": 11,
									"value": "161"
								},
								{
									"begin": 5190,
									"end": 5208,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "tag",
									"source": 11,
									"value": "160"
								},
								{
									"begin": 5134,
									"end": 5218,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4955,
									"end": 5224,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4904,
									"end": 5224,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4904,
									"end": 5224,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5279,
									"end": 5283,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5302,
									"end": 5305,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5294,
									"end": 5305,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5294,
									"end": 5305,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5325,
									"end": 5328,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5322,
									"end": 5323,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5315,
									"end": 5329,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 5359,
									"end": 5363,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5356,
									"end": 5357,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5346,
									"end": 5364,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 5338,
									"end": 5364,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5338,
									"end": 5364,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5230,
									"end": 5371,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5230,
									"end": 5371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5414,
									"end": 5420,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5461,
									"end": 5463,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 5456,
									"end": 5458,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 5449,
									"end": 5454,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5445,
									"end": 5459,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5441,
									"end": 5464,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 5431,
									"end": 5464,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5431,
									"end": 5464,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5377,
									"end": 5470,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5377,
									"end": 5470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5520,
									"end": 5528,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5570,
									"end": 5575,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5564,
									"end": 5568,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5560,
									"end": 5576,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 5539,
									"end": 5576,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5539,
									"end": 5576,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5476,
									"end": 5583,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5476,
									"end": 5583,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5658,
									"end": 5664,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5708,
									"end": 5709,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 5696,
									"end": 5706,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5692,
									"end": 5710,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "166"
								},
								{
									"begin": 5761,
									"end": 5827,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5750,
									"end": 5759,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 5731,
									"end": 5828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "tag",
									"source": 11,
									"value": "166"
								},
								{
									"begin": 5731,
									"end": 5828,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "167"
								},
								{
									"begin": 5879,
									"end": 5887,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5868,
									"end": 5877,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 5849,
									"end": 5888,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "tag",
									"source": 11,
									"value": "167"
								},
								{
									"begin": 5849,
									"end": 5888,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5837,
									"end": 5888,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 5837,
									"end": 5888,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5921,
									"end": 5925,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5917,
									"end": 5926,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 5910,
									"end": 5915,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5906,
									"end": 5927,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5897,
									"end": 5927,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 5897,
									"end": 5927,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5970,
									"end": 5974,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5960,
									"end": 5968,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5956,
									"end": 5975,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5949,
									"end": 5954,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5946,
									"end": 5976,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 5936,
									"end": 5976,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 5936,
									"end": 5976,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5665,
									"end": 5982,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5665,
									"end": 5982,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5589,
									"end": 5982,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5589,
									"end": 5982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6016,
									"end": 6019,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6037,
									"end": 6042,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6042,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6042,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5988,
									"end": 6048,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5988,
									"end": 6048,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6104,
									"end": 6113,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "170"
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "171"
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "172"
								},
								{
									"begin": 6182,
									"end": 6187,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 6164,
									"end": 6188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "tag",
									"source": 11,
									"value": "172"
								},
								{
									"begin": 6164,
									"end": 6188,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 6155,
									"end": 6189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "tag",
									"source": 11,
									"value": "171"
								},
								{
									"begin": 6155,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 6137,
									"end": 6190,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "tag",
									"source": 11,
									"value": "170"
								},
								{
									"begin": 6137,
									"end": 6190,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6124,
									"end": 6190,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6124,
									"end": 6190,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6054,
									"end": 6196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6054,
									"end": 6196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6245,
									"end": 6248,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6266,
									"end": 6271,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6259,
									"end": 6271,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6259,
									"end": 6271,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6202,
									"end": 6277,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6202,
									"end": 6277,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "175"
								},
								{
									"begin": 6424,
									"end": 6431,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 6393,
									"end": 6432,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "tag",
									"source": 11,
									"value": "175"
								},
								{
									"begin": 6393,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "176"
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "177"
								},
								{
									"begin": 6527,
									"end": 6543,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 6503,
									"end": 6544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "tag",
									"source": 11,
									"value": "177"
								},
								{
									"begin": 6503,
									"end": 6544,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6495,
									"end": 6501,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6488,
									"end": 6492,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6482,
									"end": 6493,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 6454,
									"end": 6545,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "tag",
									"source": 11,
									"value": "176"
								},
								{
									"begin": 6454,
									"end": 6545,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6448,
									"end": 6452,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6441,
									"end": 6546,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 6359,
									"end": 6552,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6283,
									"end": 6552,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6283,
									"end": 6552,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6558,
									"end": 6631,
									"name": "tag",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 6558,
									"end": 6631,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6603,
									"end": 6606,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6558,
									"end": 6631,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6558,
									"end": 6631,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "tag",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "180"
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "84"
								},
								{
									"begin": 6714,
									"end": 6746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "tag",
									"source": 11,
									"value": "180"
								},
								{
									"begin": 6714,
									"end": 6746,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "181"
								},
								{
									"begin": 6813,
									"end": 6819,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6805,
									"end": 6811,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6799,
									"end": 6803,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 6755,
									"end": 6820,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "tag",
									"source": 11,
									"value": "181"
								},
								{
									"begin": 6755,
									"end": 6820,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6690,
									"end": 6826,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6637,
									"end": 6826,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6637,
									"end": 6826,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "tag",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "tag",
									"source": 11,
									"value": "183"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6909,
									"end": 6912,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6902,
									"end": 6907,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6899,
									"end": 6913,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "185"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "186"
								},
								{
									"begin": 7000,
									"end": 7001,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6993,
									"end": 6998,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "85"
								},
								{
									"begin": 6963,
									"end": 7002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "tag",
									"source": 11,
									"value": "186"
								},
								{
									"begin": 6963,
									"end": 7002,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6936,
									"end": 6937,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 6929,
									"end": 6934,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6925,
									"end": 6938,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6916,
									"end": 6938,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6916,
									"end": 6938,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "183"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "tag",
									"source": 11,
									"value": "185"
								},
								{
									"begin": 6892,
									"end": 7012,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6832,
									"end": 7018,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6832,
									"end": 7018,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "tag",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7125,
									"end": 7127,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 7120,
									"end": 7123,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7117,
									"end": 7128,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "188"
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "189"
								},
								{
									"begin": 7191,
									"end": 7196,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 7159,
									"end": 7197,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "tag",
									"source": 11,
									"value": "189"
								},
								{
									"begin": 7159,
									"end": 7197,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "190"
								},
								{
									"begin": 7261,
									"end": 7271,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 7243,
									"end": 7272,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "tag",
									"source": 11,
									"value": "190"
								},
								{
									"begin": 7243,
									"end": 7272,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7233,
									"end": 7241,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7229,
									"end": 7273,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7426,
									"end": 7428,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7414,
									"end": 7424,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7411,
									"end": 7429,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "191"
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7447,
									"end": 7455,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7432,
									"end": 7455,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7432,
									"end": 7455,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "tag",
									"source": 11,
									"value": "191"
								},
								{
									"begin": 7408,
									"end": 7457,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "192"
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "193"
								},
								{
									"begin": 7544,
									"end": 7547,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 7526,
									"end": 7548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "tag",
									"source": 11,
									"value": "193"
								},
								{
									"begin": 7526,
									"end": 7548,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7516,
									"end": 7524,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7512,
									"end": 7549,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7499,
									"end": 7510,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "86"
								},
								{
									"begin": 7470,
									"end": 7550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "tag",
									"source": 11,
									"value": "192"
								},
								{
									"begin": 7470,
									"end": 7550,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7129,
									"end": 7560,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7129,
									"end": 7560,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "tag",
									"source": 11,
									"value": "188"
								},
								{
									"begin": 7114,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7024,
									"end": 7567,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7024,
									"end": 7567,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "tag",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7627,
									"end": 7635,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7677,
									"end": 7682,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7671,
									"end": 7675,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7667,
									"end": 7683,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 7646,
									"end": 7683,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7646,
									"end": 7683,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7573,
									"end": 7690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7573,
									"end": 7690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7740,
									"end": 7746,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "196"
								},
								{
									"begin": 7821,
									"end": 7822,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7817,
									"end": 7823,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 7809,
									"end": 7814,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7806,
									"end": 7807,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 7802,
									"end": 7815,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 7773,
									"end": 7824,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "tag",
									"source": 11,
									"value": "196"
								},
								{
									"begin": 7773,
									"end": 7824,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7769,
									"end": 7825,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 7854,
									"end": 7858,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 7848,
									"end": 7852,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7844,
									"end": 7859,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 7834,
									"end": 7859,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7834,
									"end": 7859,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7747,
									"end": 7865,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7696,
									"end": 7865,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7696,
									"end": 7865,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "tag",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7946,
									"end": 7950,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "198"
								},
								{
									"begin": 8117,
									"end": 8120,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8111,
									"end": 8115,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 8092,
									"end": 8121,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "tag",
									"source": 11,
									"value": "198"
								},
								{
									"begin": 8092,
									"end": 8121,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8084,
									"end": 8121,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8084,
									"end": 8121,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8154,
									"end": 8157,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8151,
									"end": 8152,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 8147,
									"end": 8158,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 8141,
									"end": 8145,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8138,
									"end": 8159,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 8130,
									"end": 8159,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8130,
									"end": 8159,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7870,
									"end": 8165,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7870,
									"end": 8165,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "200"
								},
								{
									"begin": 8320,
									"end": 8323,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 8287,
									"end": 8324,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "tag",
									"source": 11,
									"value": "200"
								},
								{
									"begin": 8287,
									"end": 8324,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8389,
									"end": 8407,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8381,
									"end": 8387,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8378,
									"end": 8408,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "201"
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "202"
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 8411,
									"end": 8429,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "tag",
									"source": 11,
									"value": "202"
								},
								{
									"begin": 8411,
									"end": 8429,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "tag",
									"source": 11,
									"value": "201"
								},
								{
									"begin": 8375,
									"end": 8431,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "203"
								},
								{
									"begin": 8487,
									"end": 8491,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8481,
									"end": 8492,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 8455,
									"end": 8493,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "tag",
									"source": 11,
									"value": "203"
								},
								{
									"begin": 8455,
									"end": 8493,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "204"
								},
								{
									"begin": 8600,
									"end": 8606,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8592,
									"end": 8598,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8586,
									"end": 8590,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 8540,
									"end": 8607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "tag",
									"source": 11,
									"value": "204"
								},
								{
									"begin": 8540,
									"end": 8607,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8634,
									"end": 8635,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8658,
									"end": 8662,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8645,
									"end": 8662,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8645,
									"end": 8662,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8690,
									"end": 8692,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8682,
									"end": 8688,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8679,
									"end": 8693,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 8707,
									"end": 8708,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "206"
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 9364,
									"end": 9365,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9381,
									"end": 9387,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "207"
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 9430,
									"end": 9439,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9425,
									"end": 9428,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 9421,
									"end": 9440,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9415,
									"end": 9441,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 9406,
									"end": 9441,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9406,
									"end": 9441,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "tag",
									"source": 11,
									"value": "207"
								},
								{
									"begin": 9378,
									"end": 9455,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "208"
								},
								{
									"begin": 9541,
									"end": 9547,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 9534,
									"end": 9539,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "90"
								},
								{
									"begin": 9481,
									"end": 9548,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "tag",
									"source": 11,
									"value": "208"
								},
								{
									"begin": 9481,
									"end": 9548,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9475,
									"end": 9479,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 9468,
									"end": 9549,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 9337,
									"end": 9559,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "205"
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "tag",
									"source": 11,
									"value": "206"
								},
								{
									"begin": 8702,
									"end": 9320,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8754,
									"end": 8758,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8750,
									"end": 8759,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 8742,
									"end": 8748,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8738,
									"end": 8760,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "209"
								},
								{
									"begin": 8820,
									"end": 8824,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 8788,
									"end": 8825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "tag",
									"source": 11,
									"value": "209"
								},
								{
									"begin": 8788,
									"end": 8825,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8847,
									"end": 8848,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "tag",
									"source": 11,
									"value": "210"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8875,
									"end": 8882,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8872,
									"end": 8873,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8869,
									"end": 8883,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "212"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8954,
									"end": 8963,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8949,
									"end": 8952,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8945,
									"end": 8964,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8939,
									"end": 8965,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8931,
									"end": 8937,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8924,
									"end": 8966,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 9005,
									"end": 9006,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8997,
									"end": 9003,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8993,
									"end": 9007,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8983,
									"end": 9007,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8983,
									"end": 9007,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9052,
									"end": 9054,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 9041,
									"end": 9050,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 9037,
									"end": 9055,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9024,
									"end": 9055,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 9024,
									"end": 9055,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8898,
									"end": 8902,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8895,
									"end": 8896,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8891,
									"end": 8903,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8886,
									"end": 8903,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8886,
									"end": 8903,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "210"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "tag",
									"source": 11,
									"value": "212"
								},
								{
									"begin": 8861,
									"end": 9069,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9097,
									"end": 9103,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 9088,
									"end": 9095,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 9085,
									"end": 9104,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "213"
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 9155,
									"end": 9164,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 9150,
									"end": 9153,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 9146,
									"end": 9165,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9140,
									"end": 9166,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "214"
								},
								{
									"begin": 9240,
									"end": 9244,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 9232,
									"end": 9238,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 9228,
									"end": 9245,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 9217,
									"end": 9226,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 9198,
									"end": 9246,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "tag",
									"source": 11,
									"value": "214"
								},
								{
									"begin": 9198,
									"end": 9246,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9190,
									"end": 9196,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 9183,
									"end": 9247,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 9105,
									"end": 9261,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "tag",
									"source": 11,
									"value": "213"
								},
								{
									"begin": 9082,
									"end": 9261,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9307,
									"end": 9308,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 9303,
									"end": 9304,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 9295,
									"end": 9301,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 9291,
									"end": 9305,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 9287,
									"end": 9309,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9281,
									"end": 9285,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 9274,
									"end": 9310,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8709,
									"end": 9320,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8709,
									"end": 9320,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8709,
									"end": 9320,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "tag",
									"source": 11,
									"value": "205"
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8672,
									"end": 9559,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8262,
									"end": 9565,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8262,
									"end": 9565,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8262,
									"end": 9565,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8170,
									"end": 9565,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8170,
									"end": 9565,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9571,
									"end": 9740,
									"name": "tag",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 9571,
									"end": 9740,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9655,
									"end": 9666,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9689,
									"end": 9695,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9684,
									"end": 9687,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9677,
									"end": 9696,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 9729,
									"end": 9733,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 9724,
									"end": 9727,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9720,
									"end": 9734,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9705,
									"end": 9734,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9705,
									"end": 9734,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9571,
									"end": 9740,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 9571,
									"end": 9740,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 9571,
									"end": 9740,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9571,
									"end": 9740,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9571,
									"end": 9740,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9746,
									"end": 9914,
									"name": "tag",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 9746,
									"end": 9914,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9886,
									"end": 9906,
									"name": "PUSH",
									"source": 11,
									"value": "584170703A206E6F207A65726F206F6D6E690000000000000000000000000000"
								},
								{
									"begin": 9882,
									"end": 9883,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9874,
									"end": 9880,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9870,
									"end": 9884,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9863,
									"end": 9907,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 9746,
									"end": 9914,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9746,
									"end": 9914,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9920,
									"end": 10286,
									"name": "tag",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 9920,
									"end": 10286,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10062,
									"end": 10065,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 10083,
									"end": 10150,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "218"
								},
								{
									"begin": 10147,
									"end": 10149,
									"name": "PUSH",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 10142,
									"end": 10145,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 10083,
									"end": 10150,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 10083,
									"end": 10150,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10083,
									"end": 10150,
									"name": "tag",
									"source": 11,
									"value": "218"
								},
								{
									"begin": 10083,
									"end": 10150,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10076,
									"end": 10150,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 10076,
									"end": 10150,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10159,
									"end": 10252,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "219"
								},
								{
									"begin": 10248,
									"end": 10251,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 10159,
									"end": 10252,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 10159,
									"end": 10252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10159,
									"end": 10252,
									"name": "tag",
									"source": 11,
									"value": "219"
								},
								{
									"begin": 10159,
									"end": 10252,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10277,
									"end": 10279,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 10272,
									"end": 10275,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 10268,
									"end": 10280,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10261,
									"end": 10280,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 10261,
									"end": 10280,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9920,
									"end": 10286,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 9920,
									"end": 10286,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9920,
									"end": 10286,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9920,
									"end": 10286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10292,
									"end": 10711,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 10292,
									"end": 10711,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10458,
									"end": 10462,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 10496,
									"end": 10498,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 10485,
									"end": 10494,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 10481,
									"end": 10499,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10473,
									"end": 10499,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 10473,
									"end": 10499,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10545,
									"end": 10554,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 10539,
									"end": 10543,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 10535,
									"end": 10555,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 10531,
									"end": 10532,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 10520,
									"end": 10529,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 10516,
									"end": 10533,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10509,
									"end": 10556,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 10573,
									"end": 10704,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "221"
								},
								{
									"begin": 10699,
									"end": 10703,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 10573,
									"end": 10704,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 10573,
									"end": 10704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10573,
									"end": 10704,
									"name": "tag",
									"source": 11,
									"value": "221"
								},
								{
									"begin": 10573,
									"end": 10704,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10565,
									"end": 10704,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 10565,
									"end": 10704,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10292,
									"end": 10711,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 10292,
									"end": 10711,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 10292,
									"end": 10711,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10292,
									"end": 10711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10717,
									"end": 10835,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 10717,
									"end": 10835,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10804,
									"end": 10828,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "223"
								},
								{
									"begin": 10822,
									"end": 10827,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 10804,
									"end": 10828,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 10804,
									"end": 10828,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10804,
									"end": 10828,
									"name": "tag",
									"source": 11,
									"value": "223"
								},
								{
									"begin": 10804,
									"end": 10828,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10799,
									"end": 10802,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 10792,
									"end": 10829,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 10717,
									"end": 10835,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10717,
									"end": 10835,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10717,
									"end": 10835,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10841,
									"end": 11063,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 10841,
									"end": 11063,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10934,
									"end": 10938,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 10972,
									"end": 10974,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 10961,
									"end": 10970,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 10957,
									"end": 10975,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10949,
									"end": 10975,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 10949,
									"end": 10975,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10985,
									"end": 11056,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "225"
								},
								{
									"begin": 11053,
									"end": 11054,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 11042,
									"end": 11051,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 11038,
									"end": 11055,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 11029,
									"end": 11035,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 10985,
									"end": 11056,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 10985,
									"end": 11056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10985,
									"end": 11056,
									"name": "tag",
									"source": 11,
									"value": "225"
								},
								{
									"begin": 10985,
									"end": 11056,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10841,
									"end": 11063,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 10841,
									"end": 11063,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 10841,
									"end": 11063,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10841,
									"end": 11063,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10841,
									"end": 11063,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11069,
									"end": 11243,
									"name": "tag",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 11069,
									"end": 11243,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11209,
									"end": 11235,
									"name": "PUSH",
									"source": 11,
									"value": "584170703A20696E76616C696420636F6E66206C6576656C0000000000000000"
								},
								{
									"begin": 11205,
									"end": 11206,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 11197,
									"end": 11203,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 11193,
									"end": 11207,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 11186,
									"end": 11236,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 11069,
									"end": 11243,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11069,
									"end": 11243,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11249,
									"end": 11615,
									"name": "tag",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 11249,
									"end": 11615,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11391,
									"end": 11394,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 11412,
									"end": 11479,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "228"
								},
								{
									"begin": 11476,
									"end": 11478,
									"name": "PUSH",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 11471,
									"end": 11474,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 11412,
									"end": 11479,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 11412,
									"end": 11479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11412,
									"end": 11479,
									"name": "tag",
									"source": 11,
									"value": "228"
								},
								{
									"begin": 11412,
									"end": 11479,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11405,
									"end": 11479,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 11405,
									"end": 11479,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11488,
									"end": 11581,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "229"
								},
								{
									"begin": 11577,
									"end": 11580,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 11488,
									"end": 11581,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 11488,
									"end": 11581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11488,
									"end": 11581,
									"name": "tag",
									"source": 11,
									"value": "229"
								},
								{
									"begin": 11488,
									"end": 11581,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11606,
									"end": 11608,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 11601,
									"end": 11604,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 11597,
									"end": 11609,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 11590,
									"end": 11609,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 11590,
									"end": 11609,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11249,
									"end": 11615,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 11249,
									"end": 11615,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 11249,
									"end": 11615,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11249,
									"end": 11615,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11621,
									"end": 12040,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 11621,
									"end": 12040,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11787,
									"end": 11791,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 11825,
									"end": 11827,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 11814,
									"end": 11823,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 11810,
									"end": 11828,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 11802,
									"end": 11828,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 11802,
									"end": 11828,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11874,
									"end": 11883,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 11868,
									"end": 11872,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 11864,
									"end": 11884,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 11860,
									"end": 11861,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 11849,
									"end": 11858,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 11845,
									"end": 11862,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 11838,
									"end": 11885,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 11902,
									"end": 12033,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "231"
								},
								{
									"begin": 12028,
									"end": 12032,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 11902,
									"end": 12033,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 11902,
									"end": 12033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 11902,
									"end": 12033,
									"name": "tag",
									"source": 11,
									"value": "231"
								},
								{
									"begin": 11902,
									"end": 12033,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 11894,
									"end": 12033,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 11894,
									"end": 12033,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11621,
									"end": 12040,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 11621,
									"end": 12040,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 11621,
									"end": 12040,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 11621,
									"end": 12040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12046,
									"end": 12132,
									"name": "tag",
									"source": 11,
									"value": "97"
								},
								{
									"begin": 12046,
									"end": 12132,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12081,
									"end": 12088,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 12121,
									"end": 12125,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 12114,
									"end": 12119,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12110,
									"end": 12126,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 12099,
									"end": 12126,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 12099,
									"end": 12126,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12046,
									"end": 12132,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 12046,
									"end": 12132,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 12046,
									"end": 12132,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12046,
									"end": 12132,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12138,
									"end": 12250,
									"name": "tag",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 12138,
									"end": 12250,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12221,
									"end": 12243,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "234"
								},
								{
									"begin": 12237,
									"end": 12242,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 12221,
									"end": 12243,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "97"
								},
								{
									"begin": 12221,
									"end": 12243,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12221,
									"end": 12243,
									"name": "tag",
									"source": 11,
									"value": "234"
								},
								{
									"begin": 12221,
									"end": 12243,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12216,
									"end": 12219,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12209,
									"end": 12244,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 12138,
									"end": 12250,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12138,
									"end": 12250,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12138,
									"end": 12250,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12256,
									"end": 12470,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 12256,
									"end": 12470,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12345,
									"end": 12349,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 12383,
									"end": 12385,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 12372,
									"end": 12381,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12368,
									"end": 12386,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 12360,
									"end": 12386,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 12360,
									"end": 12386,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12396,
									"end": 12463,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "236"
								},
								{
									"begin": 12460,
									"end": 12461,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 12449,
									"end": 12458,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 12445,
									"end": 12462,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 12436,
									"end": 12442,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 12396,
									"end": 12463,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 12396,
									"end": 12463,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12396,
									"end": 12463,
									"name": "tag",
									"source": 11,
									"value": "236"
								},
								{
									"begin": 12396,
									"end": 12463,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12256,
									"end": 12470,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 12256,
									"end": 12470,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 12256,
									"end": 12470,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12256,
									"end": 12470,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12256,
									"end": 12470,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12476,
									"end": 12656,
									"name": "tag",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 12476,
									"end": 12656,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12524,
									"end": 12601,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12521,
									"end": 12522,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 12514,
									"end": 12602,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 12621,
									"end": 12625,
									"name": "PUSH",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 12618,
									"end": 12619,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 12611,
									"end": 12626,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 12645,
									"end": 12649,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 12642,
									"end": 12643,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 12635,
									"end": 12650,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 12662,
									"end": 12853,
									"name": "tag",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 12662,
									"end": 12853,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12702,
									"end": 12705,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 12721,
									"end": 12741,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "239"
								},
								{
									"begin": 12739,
									"end": 12740,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12721,
									"end": 12741,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 12721,
									"end": 12741,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12721,
									"end": 12741,
									"name": "tag",
									"source": 11,
									"value": "239"
								},
								{
									"begin": 12721,
									"end": 12741,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12716,
									"end": 12741,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 12716,
									"end": 12741,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12755,
									"end": 12775,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "240"
								},
								{
									"begin": 12773,
									"end": 12774,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 12755,
									"end": 12775,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 12755,
									"end": 12775,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12755,
									"end": 12775,
									"name": "tag",
									"source": 11,
									"value": "240"
								},
								{
									"begin": 12755,
									"end": 12775,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12750,
									"end": 12775,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 12750,
									"end": 12775,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12798,
									"end": 12799,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12795,
									"end": 12796,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12791,
									"end": 12800,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 12784,
									"end": 12800,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 12784,
									"end": 12800,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12819,
									"end": 12822,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 12816,
									"end": 12817,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12813,
									"end": 12823,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 12810,
									"end": 12846,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 12810,
									"end": 12846,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "241"
								},
								{
									"begin": 12810,
									"end": 12846,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 12826,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "242"
								},
								{
									"begin": 12826,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 12826,
									"end": 12844,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12826,
									"end": 12844,
									"name": "tag",
									"source": 11,
									"value": "242"
								},
								{
									"begin": 12826,
									"end": 12844,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12810,
									"end": 12846,
									"name": "tag",
									"source": 11,
									"value": "241"
								},
								{
									"begin": 12810,
									"end": 12846,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12662,
									"end": 12853,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 12662,
									"end": 12853,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 12662,
									"end": 12853,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12662,
									"end": 12853,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12662,
									"end": 12853,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12859,
									"end": 12977,
									"name": "tag",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 12859,
									"end": 12977,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12946,
									"end": 12970,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "244"
								},
								{
									"begin": 12964,
									"end": 12969,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 12946,
									"end": 12970,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 12946,
									"end": 12970,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12946,
									"end": 12970,
									"name": "tag",
									"source": 11,
									"value": "244"
								},
								{
									"begin": 12946,
									"end": 12970,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12941,
									"end": 12944,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 12934,
									"end": 12971,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 12859,
									"end": 12977,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12859,
									"end": 12977,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12859,
									"end": 12977,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 12983,
									"end": 13425,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 12983,
									"end": 13425,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 13132,
									"end": 13136,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 13170,
									"end": 13172,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 13159,
									"end": 13168,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 13155,
									"end": 13173,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 13147,
									"end": 13173,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 13147,
									"end": 13173,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 13183,
									"end": 13254,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "246"
								},
								{
									"begin": 13251,
									"end": 13252,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 13240,
									"end": 13249,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 13236,
									"end": 13253,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 13227,
									"end": 13233,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 13183,
									"end": 13254,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 13183,
									"end": 13254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 13183,
									"end": 13254,
									"name": "tag",
									"source": 11,
									"value": "246"
								},
								{
									"begin": 13183,
									"end": 13254,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 13264,
									"end": 13336,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "247"
								},
								{
									"begin": 13332,
									"end": 13334,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 13321,
									"end": 13330,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 13317,
									"end": 13335,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 13308,
									"end": 13314,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 13264,
									"end": 13336,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 13264,
									"end": 13336,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 13264,
									"end": 13336,
									"name": "tag",
									"source": 11,
									"value": "247"
								},
								{
									"begin": 13264,
									"end": 13336,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 13346,
									"end": 13418,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "248"
								},
								{
									"begin": 13414,
									"end": 13416,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 13403,
									"end": 13412,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 13399,
									"end": 13417,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 13390,
									"end": 13396,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 13346,
									"end": 13418,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 13346,
									"end": 13418,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 13346,
									"end": 13418,
									"name": "tag",
									"source": 11,
									"value": "248"
								},
								{
									"begin": 13346,
									"end": 13418,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 12983,
									"end": 13425,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 12983,
									"end": 13425,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 12983,
									"end": 13425,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12983,
									"end": 13425,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12983,
									"end": 13425,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12983,
									"end": 13425,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 12983,
									"end": 13425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 13431,
									"end": 13653,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 13431,
									"end": 13653,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 13524,
									"end": 13528,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 13562,
									"end": 13564,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 13551,
									"end": 13560,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 13547,
									"end": 13565,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 13539,
									"end": 13565,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 13539,
									"end": 13565,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 13575,
									"end": 13646,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "250"
								},
								{
									"begin": 13643,
									"end": 13644,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 13632,
									"end": 13641,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 13628,
									"end": 13645,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 13619,
									"end": 13625,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 13575,
									"end": 13646,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 13575,
									"end": 13646,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 13575,
									"end": 13646,
									"name": "tag",
									"source": 11,
									"value": "250"
								},
								{
									"begin": 13575,
									"end": 13646,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 13431,
									"end": 13653,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 13431,
									"end": 13653,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 13431,
									"end": 13653,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 13431,
									"end": 13653,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 13431,
									"end": 13653,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 128,
									"end": 984,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 128,
									"end": 984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 128,
									"end": 984,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 984,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 128,
									"end": 984,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 128,
									"end": 984,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 984,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 128,
									"end": 984,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 128,
									"end": 984,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122046700868c6dfbdf830947272e2181fd8499785655d3d7cee16653aa26672ef4564736f6c634300081a0033",
									".code": [
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "4A536A06"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "D15DCD62"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "4A536A06"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "74EEB847"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "39ACF9F1"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "40C10F19"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 128,
											"end": 984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 128,
											"end": 984,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 948,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 948,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1656,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1656,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1656,
											"end": 1851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1257,
											"end": 1363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1257,
											"end": 1363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 1857,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1857,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1160,
											"end": 1251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1160,
											"end": 1251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 680,
											"end": 703,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 680,
											"end": 703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 680,
											"end": 703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 577,
											"end": 738,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 577,
											"end": 738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 577,
											"end": 738,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 577,
											"end": 738,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 577,
											"end": 738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 577,
											"end": 738,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 577,
											"end": 738,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 577,
											"end": 738,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 577,
											"end": 738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 577,
											"end": 738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 577,
											"end": 738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 577,
											"end": 738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2759,
											"end": 2963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2759,
											"end": 2963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1369,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1369,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1369,
											"end": 1494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 779,
											"end": 808,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 779,
											"end": 808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 779,
											"end": 808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1052,
											"end": 1154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 1052,
											"end": 1154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2117,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2117,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 2117,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 2309,
											"end": 2753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2309,
											"end": 2753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 1501,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1501,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1501,
											"end": 1650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1002,
											"end": 1015,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1034,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1027,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1027,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 948,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1754,
											"end": 1767,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1770,
											"end": 1782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1782,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 1770,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1754,
											"end": 1782,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1754,
											"end": 1782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1792,
											"end": 1823,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1801,
											"end": 1806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1808,
											"end": 1815,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1817,
											"end": 1822,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1792,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1792,
											"end": 1823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1792,
											"end": 1823,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1792,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1840,
											"end": 1844,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1833,
											"end": 1844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1833,
											"end": 1844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1833,
											"end": 1844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1325,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1344,
											"end": 1356,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1356,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1356,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1984,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1987,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1987,
											"end": 1999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 1999,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 1987,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1969,
											"end": 1999,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1969,
											"end": 1999,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2009,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 2025,
											"end": 2029,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2045,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2009,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 2009,
											"end": 2046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2009,
											"end": 2046,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 2009,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2066,
											"end": 2070,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2072,
											"end": 2074,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2081,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2056,
											"end": 2082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 2056,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2099,
											"end": 2103,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2092,
											"end": 2103,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2092,
											"end": 2103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2092,
											"end": 2103,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 2110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1223,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1244,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1235,
											"end": 1244,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1235,
											"end": 1244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 680,
											"end": 703,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 680,
											"end": 703,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 680,
											"end": 703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 577,
											"end": 738,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 577,
											"end": 738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 710,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 716,
											"end": 723,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 725,
											"end": 730,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 710,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 710,
											"end": 731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 710,
											"end": 731,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 710,
											"end": 731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 577,
											"end": 738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1058,
											"end": 1062,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1067,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1058,
											"end": 1067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1067,
											"name": "PUSH",
											"source": 4,
											"value": "2F32700E"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1058,
											"end": 1069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 1058,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1055,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2859,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2859,
											"end": 2866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 2859,
											"end": 2868,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2859,
											"end": 2868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 2859,
											"end": 2868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2851,
											"end": 2921,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 2851,
											"end": 2921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2955,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2939,
											"end": 2943,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2945,
											"end": 2947,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2954,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 2931,
											"end": 2955,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2955,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2931,
											"end": 2955,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1101,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1097,
											"end": 1101,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1101,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1478,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1486,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1487,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1462,
											"end": 1487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1369,
											"end": 1494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 779,
											"end": 808,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 779,
											"end": 808,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 779,
											"end": 808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1121,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1140,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1133,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 1133,
											"end": 1147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1052,
											"end": 1154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2195,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2224,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2227,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 2227,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2227,
											"end": 2239,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2227,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2211,
											"end": 2239,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2211,
											"end": 2239,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2259,
											"end": 2264,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2268,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2270,
											"end": 2275,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2249,
											"end": 2276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2276,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 2249,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2297,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2117,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2415,
											"end": 2427,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2415,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 2415,
											"end": 2427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2415,
											"end": 2427,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 2415,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2427,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2400,
											"end": 2427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2447,
											"end": 2451,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2461,
											"end": 2465,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2468,
											"end": 2473,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2437,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 2437,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2538,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2596,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2599,
											"end": 2601,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2603,
											"end": 2608,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2541,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "PUSH",
											"source": 7,
											"value": "4A536A06"
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2610,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2620,
											"end": 2631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2640,
											"end": 2649,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2659,
											"end": 2663,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2666,
											"end": 2670,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2678,
											"name": "PUSH",
											"source": 7,
											"value": "249F0"
										},
										{
											"begin": 2634,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2634,
											"end": 2679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2634,
											"end": 2679,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2634,
											"end": 2679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2620,
											"end": 2679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2620,
											"end": 2679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2713,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2706,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2713,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2713,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 2689,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2689,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2389,
											"end": 2753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2389,
											"end": 2753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2389,
											"end": 2753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2309,
											"end": 2753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "tag",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1590,
											"end": 1597,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1627,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1633,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1634,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1635,
											"end": 1642,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1616,
											"end": 1643,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1609,
											"end": 1643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1609,
											"end": 1643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1501,
											"end": 1650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3998,
											"end": 4126,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 3998,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4082,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 4091,
											"end": 4096,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4098,
											"end": 4105,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4107,
											"end": 4112,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4118,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4082,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4082,
											"end": 4119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4082,
											"end": 4119,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 4082,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4126,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 5047,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 4570,
											"end": 5047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4696,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 4706,
											"end": 4711,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4713,
											"end": 4720,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4696,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4696,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4696,
											"end": 4721,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 4696,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4669,
											"end": 4721,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4669,
											"end": 4721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4755,
											"end": 4772,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4735,
											"end": 4751,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4735,
											"end": 4772,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4731,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 4731,
											"end": 5041,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4811,
											"end": 4816,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4792,
											"end": 4808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4792,
											"end": 4816,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4918,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4788,
											"end": 4918,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4879,
											"end": 4895,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4897,
											"end": 4902,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "PUSH",
											"source": 7,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 4843,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4903,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4918,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 4788,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4959,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4968,
											"end": 4973,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4975,
											"end": 4982,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5003,
											"end": 5008,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4984,
											"end": 5000,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4984,
											"end": 5008,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5010,
											"end": 5015,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4959,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4959,
											"end": 5016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4959,
											"end": 5016,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 4959,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4731,
											"end": 5041,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 4731,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4659,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 5047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4570,
											"end": 5047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3278,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 2969,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3076,
											"end": 3077,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3060,
											"end": 3078,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3060,
											"end": 3078,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3064,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3078,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3060,
											"end": 3078,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3078,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3056,
											"end": 3142,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3129,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "PUSH",
											"source": 7,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3101,
											"end": 3131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3101,
											"end": 3131,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3056,
											"end": 3142,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 3056,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3169,
											"end": 3170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3155,
											"end": 3171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3157,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3155,
											"end": 3171,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3155,
											"end": 3171,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3151,
											"end": 3237,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3223,
											"end": 3224,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 3194,
											"end": 3226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3151,
											"end": 3237,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 3151,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 3255,
											"end": 3259,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3265,
											"end": 3270,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3247,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3271,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 3247,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 774,
											"end": 982,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 774,
											"end": 982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 863,
											"end": 864,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 865,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 844,
											"end": 865,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 844,
											"end": 865,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 844,
											"end": 865,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 844,
											"end": 865,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 840,
											"end": 931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 840,
											"end": 931,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 917,
											"end": 918,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH",
											"source": 9,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 888,
											"end": 920,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 888,
											"end": 920,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 888,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 888,
											"end": 920,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 888,
											"end": 920,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 920,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 888,
											"end": 920,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 888,
											"end": 920,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 888,
											"end": 920,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 888,
											"end": 920,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 888,
											"end": 920,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 840,
											"end": 931,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 840,
											"end": 931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 940,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 956,
											"end": 957,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 967,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 969,
											"end": 974,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 940,
											"end": 975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 940,
											"end": 975,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 940,
											"end": 975,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 774,
											"end": 982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 774,
											"end": 982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 774,
											"end": 982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1209,
											"end": 1326,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1209,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1274,
											"end": 1278,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1274,
											"end": 1286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1286,
											"name": "PUSH",
											"source": 4,
											"value": "55E2448E"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1274,
											"end": 1288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1314,
											"end": 1318,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1292,
											"end": 1319,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1292,
											"end": 1319,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1292,
											"end": 1302,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1292,
											"end": 1319,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1292,
											"end": 1319,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1292,
											"end": 1319,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1274,
											"end": 1319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1319,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1267,
											"end": 1319,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3285,
											"end": 3991,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 3285,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3391,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3374,
											"end": 3378,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 3370,
											"end": 3729,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3424,
											"end": 3429,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3420,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3420,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 3408,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3408,
											"end": 3429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3729,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3370,
											"end": 3729,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3729,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 3370,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3491,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3492,
											"end": 3496,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3482,
											"end": 3497,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3497,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3497,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3529,
											"end": 3534,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3511,
											"end": 3626,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3511,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3511,
											"end": 3626,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3586,
											"end": 3590,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3592,
											"end": 3603,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3605,
											"end": 3610,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "PUSH",
											"source": 7,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 3561,
											"end": 3611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3611,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3511,
											"end": 3626,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3511,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3699,
											"end": 3704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3696,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3704,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3677,
											"end": 3681,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3667,
											"end": 3682,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3704,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3704,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3704,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3729,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3370,
											"end": 3729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3743,
											"end": 3759,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3743,
											"end": 3759,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3745,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3759,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3743,
											"end": 3759,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3743,
											"end": 3759,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3739,
											"end": 3944,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3819,
											"end": 3824,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3803,
											"end": 3815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3824,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3824,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3824,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3824,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3824,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3824,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3803,
											"end": 3824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3739,
											"end": 3944,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3944,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 3739,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3914,
											"end": 3919,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3906,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3907,
											"end": 3909,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3910,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3919,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3919,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3919,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3919,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3919,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3919,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3919,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3919,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3897,
											"end": 3919,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3944,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 3739,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 3976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3968,
											"end": 3972,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "PUSH",
											"source": 7,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 3978,
											"end": 3983,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 3959,
											"end": 3984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3984,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3991,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2156,
											"end": 2537,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2156,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2264,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2287,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2290,
											"end": 2294,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2301,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2290,
											"end": 2301,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2301,
											"name": "PUSH",
											"source": 4,
											"value": "8DD9523C"
										},
										{
											"begin": 2302,
											"end": 2313,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2315,
											"end": 2319,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2329,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2290,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2290,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2290,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2373,
											"end": 2376,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2369,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2376,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2376,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2348,
											"end": 2396,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2396,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2393,
											"end": 2396,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2389,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2396,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2396,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2396,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2348,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2340,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2340,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2435,
											"end": 2439,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2445,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2435,
											"end": 2445,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2445,
											"name": "PUSH",
											"source": 4,
											"value": "C21DDA4F"
										},
										{
											"begin": 2454,
											"end": 2457,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2471,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2491,
											"end": 2493,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2509,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 2435,
											"end": 2510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2510,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2527,
											"end": 2530,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2530,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2520,
											"end": 2530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2537,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2537,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2537,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2537,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2537,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2537,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2156,
											"end": 2537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4564,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 4132,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4262,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4263,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4263,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4249,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4263,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4263,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4244,
											"end": 4263,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4240,
											"end": 4329,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4315,
											"end": 4316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "PUSH",
											"source": 7,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4286,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4329,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4240,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4361,
											"end": 4362,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4363,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4342,
											"end": 4363,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4342,
											"end": 4349,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4342,
											"end": 4363,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4342,
											"end": 4363,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4342,
											"end": 4363,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4338,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4338,
											"end": 4428,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4414,
											"end": 4415,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "PUSH",
											"source": 7,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 4386,
											"end": 4417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4386,
											"end": 4417,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4338,
											"end": 4428,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4338,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4467,
											"end": 4472,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4448,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4449,
											"end": 4454,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4455,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4463,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4464,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4472,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4472,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4437,
											"end": 4472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4495,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4482,
											"end": 4558,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4482,
											"end": 4558,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4482,
											"end": 4558,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4532,
											"end": 4539,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4525,
											"end": 4530,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "PUSH",
											"source": 7,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 4541,
											"end": 4546,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 4516,
											"end": 4547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4547,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 4482,
											"end": 4558,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 4482,
											"end": 4558,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4132,
											"end": 4564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4132,
											"end": 4564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4132,
											"end": 4564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4132,
											"end": 4564,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4132,
											"end": 4564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 4806,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 4746,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4774,
											"end": 4777,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4795,
											"end": 4800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4788,
											"end": 4800,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4788,
											"end": 4800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 4806,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 4806,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 4806,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4746,
											"end": 4806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4954,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 4812,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4862,
											"end": 4871,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 4913,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 4922,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 4940,
											"end": 4945,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 4922,
											"end": 4946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4922,
											"end": 4946,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 4922,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 4913,
											"end": 4947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4913,
											"end": 4947,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 4913,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 4895,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4882,
											"end": 4948,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4882,
											"end": 4948,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4954,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4954,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4954,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4960,
											"end": 5086,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 4960,
											"end": 5086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5010,
											"end": 5019,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 5074,
											"end": 5079,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5080,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 5043,
											"end": 5080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5080,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 5043,
											"end": 5080,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5030,
											"end": 5080,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5030,
											"end": 5080,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4960,
											"end": 5086,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4960,
											"end": 5086,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4960,
											"end": 5086,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4960,
											"end": 5086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5237,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 5092,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5194,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 5225,
											"end": 5230,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5194,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 5194,
											"end": 5231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5194,
											"end": 5231,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 5194,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5181,
											"end": 5231,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5181,
											"end": 5231,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5237,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5237,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5237,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5092,
											"end": 5237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5412,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 5243,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 5399,
											"end": 5404,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 5349,
											"end": 5405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 5349,
											"end": 5405,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5344,
											"end": 5347,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5337,
											"end": 5406,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5243,
											"end": 5412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5418,
											"end": 5678,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 5418,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5530,
											"end": 5534,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5570,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5557,
											"end": 5566,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5553,
											"end": 5571,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5545,
											"end": 5571,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5545,
											"end": 5571,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5581,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 5668,
											"end": 5669,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5657,
											"end": 5666,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5653,
											"end": 5670,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5644,
											"end": 5650,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5581,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 5581,
											"end": 5671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5581,
											"end": 5671,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 5581,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5418,
											"end": 5678,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5418,
											"end": 5678,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5418,
											"end": 5678,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5418,
											"end": 5678,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5418,
											"end": 5678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 6013,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 5684,
											"end": 6013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5743,
											"end": 5749,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5792,
											"end": 5794,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5780,
											"end": 5789,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5771,
											"end": 5778,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5767,
											"end": 5790,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5763,
											"end": 5795,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5760,
											"end": 5879,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5760,
											"end": 5879,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 5760,
											"end": 5879,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5798,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 5798,
											"end": 5877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 5798,
											"end": 5877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5798,
											"end": 5877,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 5798,
											"end": 5877,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5760,
											"end": 5879,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 5760,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5918,
											"end": 5919,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5943,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 5988,
											"end": 5995,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5979,
											"end": 5985,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5968,
											"end": 5977,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5964,
											"end": 5986,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5943,
											"end": 5996,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 5943,
											"end": 5996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5943,
											"end": 5996,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 5943,
											"end": 5996,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5933,
											"end": 5996,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5933,
											"end": 5996,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5889,
											"end": 6006,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 6013,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 6013,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 6013,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 6013,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5684,
											"end": 6013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6019,
											"end": 6120,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 6019,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6055,
											"end": 6062,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6095,
											"end": 6113,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6088,
											"end": 6093,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6084,
											"end": 6114,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6073,
											"end": 6114,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6073,
											"end": 6114,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6019,
											"end": 6120,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6019,
											"end": 6120,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6019,
											"end": 6120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6019,
											"end": 6120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6246,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 6126,
											"end": 6246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6198,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 6215,
											"end": 6220,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6198,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 6198,
											"end": 6221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6198,
											"end": 6221,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 6198,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6191,
											"end": 6196,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6188,
											"end": 6222,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6178,
											"end": 6240,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 6178,
											"end": 6240,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6236,
											"end": 6237,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6234,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6226,
											"end": 6238,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6178,
											"end": 6240,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 6178,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6126,
											"end": 6246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6252,
											"end": 6389,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 6252,
											"end": 6389,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6297,
											"end": 6302,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6335,
											"end": 6341,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6322,
											"end": 6342,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6313,
											"end": 6342,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6313,
											"end": 6342,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6351,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 6377,
											"end": 6382,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6351,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 6351,
											"end": 6383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6351,
											"end": 6383,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 6351,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6252,
											"end": 6389,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6252,
											"end": 6389,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6252,
											"end": 6389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6252,
											"end": 6389,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6252,
											"end": 6389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6395,
											"end": 7012,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 6395,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6471,
											"end": 6477,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6485,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6487,
											"end": 6493,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6538,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6524,
											"end": 6533,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6515,
											"end": 6522,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6511,
											"end": 6534,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6507,
											"end": 6539,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6504,
											"end": 6623,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6504,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 6504,
											"end": 6623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6542,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 6542,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 6542,
											"end": 6621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6542,
											"end": 6621,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 6542,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6504,
											"end": 6623,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 6504,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6662,
											"end": 6663,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 6731,
											"end": 6738,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6722,
											"end": 6728,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6711,
											"end": 6720,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6687,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 6687,
											"end": 6739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6687,
											"end": 6739,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 6687,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6677,
											"end": 6739,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6677,
											"end": 6739,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6633,
											"end": 6749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6788,
											"end": 6790,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6814,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 6859,
											"end": 6866,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6850,
											"end": 6856,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6839,
											"end": 6848,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6835,
											"end": 6857,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6814,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 6814,
											"end": 6867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6814,
											"end": 6867,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 6814,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6804,
											"end": 6867,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6804,
											"end": 6867,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6759,
											"end": 6877,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6916,
											"end": 6918,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6942,
											"end": 6995,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 6987,
											"end": 6994,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6978,
											"end": 6984,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6967,
											"end": 6976,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6963,
											"end": 6985,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6942,
											"end": 6995,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 6942,
											"end": 6995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6942,
											"end": 6995,
											"name": "tag",
											"source": 11,
											"value": "341"
										},
										{
											"begin": 6942,
											"end": 6995,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6932,
											"end": 6995,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6932,
											"end": 6995,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6887,
											"end": 7005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6395,
											"end": 7012,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6395,
											"end": 7012,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6395,
											"end": 7012,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6395,
											"end": 7012,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6395,
											"end": 7012,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6395,
											"end": 7012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7018,
											"end": 7492,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 7018,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7086,
											"end": 7092,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7094,
											"end": 7100,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7143,
											"end": 7145,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7131,
											"end": 7140,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7122,
											"end": 7129,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7118,
											"end": 7141,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7114,
											"end": 7146,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7111,
											"end": 7230,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7111,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 7111,
											"end": 7230,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7149,
											"end": 7228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 7149,
											"end": 7228,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 7149,
											"end": 7228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7149,
											"end": 7228,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 7149,
											"end": 7228,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7111,
											"end": 7230,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 7111,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7294,
											"end": 7347,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 7339,
											"end": 7346,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7315,
											"end": 7337,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7294,
											"end": 7347,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 7294,
											"end": 7347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7294,
											"end": 7347,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 7294,
											"end": 7347,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7284,
											"end": 7347,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7284,
											"end": 7347,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7240,
											"end": 7357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7396,
											"end": 7398,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7422,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 7467,
											"end": 7474,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7447,
											"end": 7456,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7443,
											"end": 7465,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7422,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 7422,
											"end": 7475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7422,
											"end": 7475,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 7422,
											"end": 7475,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7412,
											"end": 7475,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7412,
											"end": 7475,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7367,
											"end": 7485,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7018,
											"end": 7492,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7018,
											"end": 7492,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7018,
											"end": 7492,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7018,
											"end": 7492,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7018,
											"end": 7492,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7018,
											"end": 7492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7498,
											"end": 7678,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 7498,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7546,
											"end": 7623,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7543,
											"end": 7544,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7536,
											"end": 7624,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7643,
											"end": 7647,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7633,
											"end": 7648,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7667,
											"end": 7671,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7664,
											"end": 7665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7657,
											"end": 7672,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 8004,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 7684,
											"end": 8004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7765,
											"end": 7766,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 7759,
											"end": 7763,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7767,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 7745,
											"end": 7767,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7745,
											"end": 7767,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7812,
											"end": 7813,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7806,
											"end": 7810,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7802,
											"end": 7814,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7833,
											"end": 7851,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7823,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 7823,
											"end": 7904,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7889,
											"end": 7893,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 7881,
											"end": 7887,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7877,
											"end": 7894,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7867,
											"end": 7894,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7867,
											"end": 7894,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7823,
											"end": 7904,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 7823,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7951,
											"end": 7953,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7943,
											"end": 7949,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7940,
											"end": 7954,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7920,
											"end": 7938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7917,
											"end": 7955,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7914,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 7914,
											"end": 7998,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7970,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 7970,
											"end": 7988,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 7970,
											"end": 7988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7970,
											"end": 7988,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 7970,
											"end": 7988,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7914,
											"end": 7998,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 7914,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7735,
											"end": 8004,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 8004,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 8004,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 8004,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7684,
											"end": 8004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8010,
											"end": 8127,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 8010,
											"end": 8127,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8119,
											"end": 8120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8116,
											"end": 8117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8109,
											"end": 8121,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8313,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 8133,
											"end": 8313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8181,
											"end": 8258,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8178,
											"end": 8179,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8171,
											"end": 8259,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8278,
											"end": 8282,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 8275,
											"end": 8276,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8268,
											"end": 8283,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8302,
											"end": 8306,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8299,
											"end": 8300,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8292,
											"end": 8307,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8319,
											"end": 8600,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 8319,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8402,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 8424,
											"end": 8428,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8402,
											"end": 8429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 8402,
											"end": 8429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8402,
											"end": 8429,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 8402,
											"end": 8429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8394,
											"end": 8400,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8390,
											"end": 8430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8532,
											"end": 8538,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8520,
											"end": 8530,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8517,
											"end": 8539,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 8496,
											"end": 8514,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8484,
											"end": 8494,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8481,
											"end": 8515,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8478,
											"end": 8540,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 8475,
											"end": 8563,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8475,
											"end": 8563,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 8475,
											"end": 8563,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8543,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 8543,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 8543,
											"end": 8561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8543,
											"end": 8561,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 8543,
											"end": 8561,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8475,
											"end": 8563,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 8475,
											"end": 8563,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8583,
											"end": 8593,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8579,
											"end": 8581,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8572,
											"end": 8594,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8362,
											"end": 8600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8319,
											"end": 8600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8319,
											"end": 8600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8319,
											"end": 8600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8606,
											"end": 8735,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 8606,
											"end": 8735,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8640,
											"end": 8646,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8667,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 8667,
											"end": 8687,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 8667,
											"end": 8687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8667,
											"end": 8687,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 8667,
											"end": 8687,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8657,
											"end": 8687,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8657,
											"end": 8687,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8696,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 8724,
											"end": 8728,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8716,
											"end": 8722,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8696,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 8696,
											"end": 8729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8696,
											"end": 8729,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 8696,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8606,
											"end": 8735,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8606,
											"end": 8735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8606,
											"end": 8735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8606,
											"end": 8735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8864,
											"end": 9005,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 8864,
											"end": 9005,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8920,
											"end": 8925,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8951,
											"end": 8957,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8945,
											"end": 8958,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8936,
											"end": 8958,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8936,
											"end": 8958,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8967,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 8993,
											"end": 8998,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8967,
											"end": 8999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 8967,
											"end": 8999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8967,
											"end": 8999,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 8967,
											"end": 8999,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8864,
											"end": 9005,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8864,
											"end": 9005,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8864,
											"end": 9005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8864,
											"end": 9005,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8864,
											"end": 9005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9154,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 9011,
											"end": 9154,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9068,
											"end": 9073,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9099,
											"end": 9105,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9093,
											"end": 9106,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9084,
											"end": 9106,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9084,
											"end": 9106,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9115,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 9142,
											"end": 9147,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9115,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 9115,
											"end": 9148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9115,
											"end": 9148,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 9115,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9154,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9154,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9154,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9154,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9192,
											"end": 9811,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 9192,
											"end": 9811,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9279,
											"end": 9284,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9323,
											"end": 9327,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9311,
											"end": 9320,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9306,
											"end": 9309,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9302,
											"end": 9321,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9298,
											"end": 9328,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9295,
											"end": 9412,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9295,
											"end": 9412,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 9295,
											"end": 9412,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9331,
											"end": 9410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 9331,
											"end": 9410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 9331,
											"end": 9410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9331,
											"end": 9410,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 9331,
											"end": 9410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9295,
											"end": 9412,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 9295,
											"end": 9412,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 9446,
											"end": 9450,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9430,
											"end": 9451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 9430,
											"end": 9451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9451,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 9430,
											"end": 9451,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9421,
											"end": 9451,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9421,
											"end": 9451,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9519,
											"end": 9520,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9559,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 9614,
											"end": 9617,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9605,
											"end": 9611,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9594,
											"end": 9603,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9590,
											"end": 9612,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9559,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 9559,
											"end": 9618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9559,
											"end": 9618,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 9559,
											"end": 9618,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9552,
											"end": 9556,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9545,
											"end": 9550,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9541,
											"end": 9557,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9534,
											"end": 9619,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9461,
											"end": 9630,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9691,
											"end": 9693,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9732,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 9788,
											"end": 9791,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9779,
											"end": 9785,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9768,
											"end": 9777,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9764,
											"end": 9786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9732,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 9732,
											"end": 9792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9732,
											"end": 9792,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 9732,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9725,
											"end": 9729,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9718,
											"end": 9723,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9714,
											"end": 9730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9707,
											"end": 9793,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9640,
											"end": 9804,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9192,
											"end": 9811,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9192,
											"end": 9811,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9192,
											"end": 9811,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9192,
											"end": 9811,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9192,
											"end": 9811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9817,
											"end": 10222,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 9817,
											"end": 10222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9914,
											"end": 9920,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9963,
											"end": 9965,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9951,
											"end": 9960,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9942,
											"end": 9949,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9938,
											"end": 9961,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9934,
											"end": 9966,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9931,
											"end": 10050,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9931,
											"end": 10050,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 9931,
											"end": 10050,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9969,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 9969,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 9969,
											"end": 10048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9969,
											"end": 10048,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 9969,
											"end": 10048,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9931,
											"end": 10050,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 9931,
											"end": 10050,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10089,
											"end": 10090,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10114,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 10197,
											"end": 10204,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10188,
											"end": 10194,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10177,
											"end": 10186,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10173,
											"end": 10195,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10114,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 10114,
											"end": 10205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10114,
											"end": 10205,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 10114,
											"end": 10205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10205,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10104,
											"end": 10205,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10060,
											"end": 10215,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9817,
											"end": 10222,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9817,
											"end": 10222,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9817,
											"end": 10222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9817,
											"end": 10222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9817,
											"end": 10222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10228,
											"end": 10463,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 10228,
											"end": 10463,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10368,
											"end": 10402,
											"name": "PUSH",
											"source": 11,
											"value": "4F6D6E6945524332303A204F6E6C792063616C6C61626C65207669612063726F"
										},
										{
											"begin": 10364,
											"end": 10365,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10356,
											"end": 10362,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10352,
											"end": 10366,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10345,
											"end": 10403,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10437,
											"end": 10455,
											"name": "PUSH",
											"source": 11,
											"value": "73732D636861696E206D65737361676500000000000000000000000000000000"
										},
										{
											"begin": 10432,
											"end": 10434,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10424,
											"end": 10430,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10420,
											"end": 10435,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10413,
											"end": 10456,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10228,
											"end": 10463,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10228,
											"end": 10463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10469,
											"end": 10835,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 10469,
											"end": 10835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10611,
											"end": 10614,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10632,
											"end": 10699,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 10696,
											"end": 10698,
											"name": "PUSH",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 10691,
											"end": 10694,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10632,
											"end": 10699,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 10632,
											"end": 10699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10632,
											"end": 10699,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 10632,
											"end": 10699,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10625,
											"end": 10699,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10625,
											"end": 10699,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10708,
											"end": 10801,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 10797,
											"end": 10800,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10708,
											"end": 10801,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 10708,
											"end": 10801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10708,
											"end": 10801,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 10708,
											"end": 10801,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10826,
											"end": 10828,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10821,
											"end": 10824,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10817,
											"end": 10829,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10810,
											"end": 10829,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10810,
											"end": 10829,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10469,
											"end": 10835,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10469,
											"end": 10835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10469,
											"end": 10835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10469,
											"end": 10835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10841,
											"end": 11260,
											"name": "tag",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 10841,
											"end": 11260,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11007,
											"end": 11011,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11045,
											"end": 11047,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11034,
											"end": 11043,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11030,
											"end": 11048,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11022,
											"end": 11048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11022,
											"end": 11048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11094,
											"end": 11103,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11088,
											"end": 11092,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11084,
											"end": 11104,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11080,
											"end": 11081,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11069,
											"end": 11078,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11065,
											"end": 11082,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11058,
											"end": 11105,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 11248,
											"end": 11252,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 11122,
											"end": 11253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11253,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 11122,
											"end": 11253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11114,
											"end": 11253,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11114,
											"end": 11253,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10841,
											"end": 11260,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10841,
											"end": 11260,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10841,
											"end": 11260,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10841,
											"end": 11260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11266,
											"end": 11384,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 11266,
											"end": 11384,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11353,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 11371,
											"end": 11376,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11353,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 11353,
											"end": 11377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11353,
											"end": 11377,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 11353,
											"end": 11377,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11348,
											"end": 11351,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11341,
											"end": 11378,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11266,
											"end": 11384,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11266,
											"end": 11384,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11266,
											"end": 11384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11832,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 11390,
											"end": 11832,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11539,
											"end": 11543,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11577,
											"end": 11579,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11566,
											"end": 11575,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11562,
											"end": 11580,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11554,
											"end": 11580,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11554,
											"end": 11580,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11590,
											"end": 11661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 11658,
											"end": 11659,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11647,
											"end": 11656,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11643,
											"end": 11660,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11634,
											"end": 11640,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11590,
											"end": 11661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 11590,
											"end": 11661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11590,
											"end": 11661,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 11590,
											"end": 11661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11671,
											"end": 11743,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 11739,
											"end": 11741,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11728,
											"end": 11737,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11724,
											"end": 11742,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11715,
											"end": 11721,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11671,
											"end": 11743,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 11671,
											"end": 11743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11671,
											"end": 11743,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 11671,
											"end": 11743,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11753,
											"end": 11825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 11821,
											"end": 11823,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11810,
											"end": 11819,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11806,
											"end": 11824,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11797,
											"end": 11803,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11753,
											"end": 11825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 11753,
											"end": 11825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11753,
											"end": 11825,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 11753,
											"end": 11825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11832,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11832,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11832,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11832,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11832,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11832,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11838,
											"end": 12015,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 11838,
											"end": 12015,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11978,
											"end": 12007,
											"name": "PUSH",
											"source": 11,
											"value": "4F6D6E6945524332303A20496E73756666696369656E74206665650000000000"
										},
										{
											"begin": 11974,
											"end": 11975,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11966,
											"end": 11972,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11962,
											"end": 11976,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11955,
											"end": 12008,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11838,
											"end": 12015,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11838,
											"end": 12015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12021,
											"end": 12387,
											"name": "tag",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 12021,
											"end": 12387,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12163,
											"end": 12166,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12184,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 12248,
											"end": 12250,
											"name": "PUSH",
											"source": 11,
											"value": "1B"
										},
										{
											"begin": 12243,
											"end": 12246,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12184,
											"end": 12251,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 12184,
											"end": 12251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12184,
											"end": 12251,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 12184,
											"end": 12251,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12251,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12177,
											"end": 12251,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 12349,
											"end": 12352,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12353,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 12260,
											"end": 12353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12353,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 12260,
											"end": 12353,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12378,
											"end": 12380,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12373,
											"end": 12376,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12369,
											"end": 12381,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12362,
											"end": 12381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12362,
											"end": 12381,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12021,
											"end": 12387,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12021,
											"end": 12387,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12021,
											"end": 12387,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12021,
											"end": 12387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12393,
											"end": 12812,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 12393,
											"end": 12812,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12559,
											"end": 12563,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12597,
											"end": 12599,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12586,
											"end": 12595,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12582,
											"end": 12600,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12574,
											"end": 12600,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12574,
											"end": 12600,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12646,
											"end": 12655,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12640,
											"end": 12644,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12636,
											"end": 12656,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 12633,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12621,
											"end": 12630,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12617,
											"end": 12634,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12610,
											"end": 12657,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12674,
											"end": 12805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 12800,
											"end": 12804,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12674,
											"end": 12805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 12674,
											"end": 12805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12674,
											"end": 12805,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 12674,
											"end": 12805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12666,
											"end": 12805,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12666,
											"end": 12805,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12393,
											"end": 12812,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12393,
											"end": 12812,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12393,
											"end": 12812,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12393,
											"end": 12812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12818,
											"end": 13260,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 12818,
											"end": 13260,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12967,
											"end": 12971,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13005,
											"end": 13007,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 12994,
											"end": 13003,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12990,
											"end": 13008,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12982,
											"end": 13008,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12982,
											"end": 13008,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13018,
											"end": 13089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 13086,
											"end": 13087,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13075,
											"end": 13084,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13071,
											"end": 13088,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13062,
											"end": 13068,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 13018,
											"end": 13089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 13018,
											"end": 13089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13018,
											"end": 13089,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 13018,
											"end": 13089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13099,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 13167,
											"end": 13169,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13156,
											"end": 13165,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13152,
											"end": 13170,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13143,
											"end": 13149,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13099,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 13099,
											"end": 13171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13099,
											"end": 13171,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 13099,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13181,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 13249,
											"end": 13251,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13238,
											"end": 13247,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13234,
											"end": 13252,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13225,
											"end": 13231,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13181,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 13181,
											"end": 13253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13181,
											"end": 13253,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 13181,
											"end": 13253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12818,
											"end": 13260,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 12818,
											"end": 13260,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 12818,
											"end": 13260,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12818,
											"end": 13260,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12818,
											"end": 13260,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12818,
											"end": 13260,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12818,
											"end": 13260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13266,
											"end": 13488,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 13266,
											"end": 13488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13359,
											"end": 13363,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13397,
											"end": 13399,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13386,
											"end": 13395,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13382,
											"end": 13400,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13374,
											"end": 13400,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13374,
											"end": 13400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13410,
											"end": 13481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 13478,
											"end": 13479,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13467,
											"end": 13476,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13463,
											"end": 13480,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13454,
											"end": 13460,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13410,
											"end": 13481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 13410,
											"end": 13481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13410,
											"end": 13481,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 13410,
											"end": 13481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13266,
											"end": 13488,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13266,
											"end": 13488,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13266,
											"end": 13488,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13266,
											"end": 13488,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13266,
											"end": 13488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13494,
											"end": 13610,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 13494,
											"end": 13610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13564,
											"end": 13585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 13579,
											"end": 13584,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13564,
											"end": 13585,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 13564,
											"end": 13585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13564,
											"end": 13585,
											"name": "tag",
											"source": 11,
											"value": "401"
										},
										{
											"begin": 13564,
											"end": 13585,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13557,
											"end": 13562,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13554,
											"end": 13586,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 13544,
											"end": 13604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 13544,
											"end": 13604,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13600,
											"end": 13601,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13597,
											"end": 13598,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13590,
											"end": 13602,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13544,
											"end": 13604,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 13544,
											"end": 13604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13494,
											"end": 13610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13494,
											"end": 13610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13616,
											"end": 13753,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 13616,
											"end": 13753,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13670,
											"end": 13675,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13701,
											"end": 13707,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13695,
											"end": 13708,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13686,
											"end": 13708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13686,
											"end": 13708,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13717,
											"end": 13747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 13741,
											"end": 13746,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13717,
											"end": 13747,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 13717,
											"end": 13747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13717,
											"end": 13747,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 13717,
											"end": 13747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13616,
											"end": 13753,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13616,
											"end": 13753,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13616,
											"end": 13753,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13616,
											"end": 13753,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13616,
											"end": 13753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13759,
											"end": 14104,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 13759,
											"end": 14104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13826,
											"end": 13832,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13875,
											"end": 13877,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13863,
											"end": 13872,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13854,
											"end": 13861,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13850,
											"end": 13873,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13846,
											"end": 13878,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 13843,
											"end": 13962,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13843,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 13843,
											"end": 13962,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13881,
											"end": 13960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 13881,
											"end": 13960,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 13881,
											"end": 13960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13881,
											"end": 13960,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 13881,
											"end": 13960,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13843,
											"end": 13962,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 13843,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14001,
											"end": 14002,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14026,
											"end": 14087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 14079,
											"end": 14086,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14070,
											"end": 14076,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14059,
											"end": 14068,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14055,
											"end": 14077,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14026,
											"end": 14087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 14026,
											"end": 14087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14026,
											"end": 14087,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 14026,
											"end": 14087,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14016,
											"end": 14087,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14016,
											"end": 14087,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13972,
											"end": 14097,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13759,
											"end": 14104,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13759,
											"end": 14104,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13759,
											"end": 14104,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13759,
											"end": 14104,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13759,
											"end": 14104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14110,
											"end": 14290,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 14110,
											"end": 14290,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14158,
											"end": 14235,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14155,
											"end": 14156,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14148,
											"end": 14236,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14255,
											"end": 14259,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 14252,
											"end": 14253,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14245,
											"end": 14260,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14279,
											"end": 14283,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14276,
											"end": 14277,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14269,
											"end": 14284,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14296,
											"end": 14487,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 14296,
											"end": 14487,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14336,
											"end": 14339,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14355,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 14373,
											"end": 14374,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14355,
											"end": 14375,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 14355,
											"end": 14375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14355,
											"end": 14375,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 14355,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14350,
											"end": 14375,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14350,
											"end": 14375,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14389,
											"end": 14409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 14407,
											"end": 14408,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14389,
											"end": 14409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "219"
										},
										{
											"begin": 14389,
											"end": 14409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14389,
											"end": 14409,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 14389,
											"end": 14409,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14384,
											"end": 14409,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14384,
											"end": 14409,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14432,
											"end": 14433,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14429,
											"end": 14430,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14425,
											"end": 14434,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14418,
											"end": 14434,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14418,
											"end": 14434,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14453,
											"end": 14456,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14450,
											"end": 14451,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14447,
											"end": 14457,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14444,
											"end": 14480,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14444,
											"end": 14480,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 14444,
											"end": 14480,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14460,
											"end": 14478,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 14460,
											"end": 14478,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 14460,
											"end": 14478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14460,
											"end": 14478,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 14460,
											"end": 14478,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14444,
											"end": 14480,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 14444,
											"end": 14480,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14296,
											"end": 14487,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14296,
											"end": 14487,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14296,
											"end": 14487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14296,
											"end": 14487,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14296,
											"end": 14487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14493,
											"end": 14608,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 14493,
											"end": 14608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14578,
											"end": 14601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 14595,
											"end": 14600,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14578,
											"end": 14601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 14578,
											"end": 14601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14578,
											"end": 14601,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 14578,
											"end": 14601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14573,
											"end": 14576,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14566,
											"end": 14602,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14493,
											"end": 14608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14493,
											"end": 14608,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14493,
											"end": 14608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14614,
											"end": 14712,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 14614,
											"end": 14712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14665,
											"end": 14671,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14699,
											"end": 14704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14693,
											"end": 14705,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14683,
											"end": 14705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14683,
											"end": 14705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14614,
											"end": 14712,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14614,
											"end": 14712,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14614,
											"end": 14712,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14614,
											"end": 14712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14718,
											"end": 14886,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 14718,
											"end": 14886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14801,
											"end": 14812,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14835,
											"end": 14841,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14830,
											"end": 14833,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14823,
											"end": 14842,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14875,
											"end": 14879,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14870,
											"end": 14873,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14866,
											"end": 14880,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14851,
											"end": 14880,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14851,
											"end": 14880,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14718,
											"end": 14886,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14718,
											"end": 14886,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14718,
											"end": 14886,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14718,
											"end": 14886,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14718,
											"end": 14886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14892,
											"end": 15265,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 14892,
											"end": 15265,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14978,
											"end": 14981,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15006,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 15038,
											"end": 15043,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15006,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 15006,
											"end": 15044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15006,
											"end": 15044,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 15006,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15060,
											"end": 15130,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 15123,
											"end": 15129,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15118,
											"end": 15121,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15060,
											"end": 15130,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 15060,
											"end": 15130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15060,
											"end": 15130,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 15060,
											"end": 15130,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15053,
											"end": 15130,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 15053,
											"end": 15130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15139,
											"end": 15204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 15197,
											"end": 15203,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15192,
											"end": 15195,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15185,
											"end": 15189,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15178,
											"end": 15183,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15174,
											"end": 15190,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15139,
											"end": 15204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 15139,
											"end": 15204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15139,
											"end": 15204,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 15139,
											"end": 15204,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15229,
											"end": 15258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 15251,
											"end": 15257,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15229,
											"end": 15258,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 15229,
											"end": 15258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15229,
											"end": 15258,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 15229,
											"end": 15258,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15224,
											"end": 15227,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15220,
											"end": 15259,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15213,
											"end": 15259,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15213,
											"end": 15259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14982,
											"end": 15265,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14892,
											"end": 15265,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14892,
											"end": 15265,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14892,
											"end": 15265,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14892,
											"end": 15265,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14892,
											"end": 15265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15271,
											"end": 15792,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 15271,
											"end": 15792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15434,
											"end": 15438,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15472,
											"end": 15474,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 15461,
											"end": 15470,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15457,
											"end": 15475,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15449,
											"end": 15475,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15449,
											"end": 15475,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15485,
											"end": 15554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 15551,
											"end": 15552,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15540,
											"end": 15549,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15536,
											"end": 15553,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15527,
											"end": 15533,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15485,
											"end": 15554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 15485,
											"end": 15554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15485,
											"end": 15554,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 15485,
											"end": 15554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15601,
											"end": 15610,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15595,
											"end": 15599,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15591,
											"end": 15611,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15586,
											"end": 15588,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15575,
											"end": 15584,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15571,
											"end": 15589,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15564,
											"end": 15612,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15629,
											"end": 15705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 15700,
											"end": 15704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15691,
											"end": 15697,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15629,
											"end": 15705,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 15629,
											"end": 15705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15629,
											"end": 15705,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 15629,
											"end": 15705,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15621,
											"end": 15705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15621,
											"end": 15705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 15781,
											"end": 15783,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15770,
											"end": 15779,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15766,
											"end": 15784,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15757,
											"end": 15763,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 15715,
											"end": 15785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15715,
											"end": 15785,
											"name": "tag",
											"source": 11,
											"value": "427"
										},
										{
											"begin": 15715,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15271,
											"end": 15792,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 15271,
											"end": 15792,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 15271,
											"end": 15792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15271,
											"end": 15792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15271,
											"end": 15792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15271,
											"end": 15792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15271,
											"end": 15792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15798,
											"end": 15941,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 15798,
											"end": 15941,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15855,
											"end": 15860,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15886,
											"end": 15892,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15880,
											"end": 15893,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15871,
											"end": 15893,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15871,
											"end": 15893,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15902,
											"end": 15935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 15929,
											"end": 15934,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15902,
											"end": 15935,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 15902,
											"end": 15935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15902,
											"end": 15935,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 15902,
											"end": 15935,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15798,
											"end": 15941,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15798,
											"end": 15941,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15798,
											"end": 15941,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15798,
											"end": 15941,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15798,
											"end": 15941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15947,
											"end": 16298,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 15947,
											"end": 16298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16017,
											"end": 16023,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16066,
											"end": 16068,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16054,
											"end": 16063,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16045,
											"end": 16052,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16041,
											"end": 16064,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16037,
											"end": 16069,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 16034,
											"end": 16153,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16034,
											"end": 16153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 16034,
											"end": 16153,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16072,
											"end": 16151,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 16072,
											"end": 16151,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 16072,
											"end": 16151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16072,
											"end": 16151,
											"name": "tag",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 16072,
											"end": 16151,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16034,
											"end": 16153,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 16034,
											"end": 16153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16192,
											"end": 16193,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16217,
											"end": 16281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 16273,
											"end": 16280,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16264,
											"end": 16270,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16253,
											"end": 16262,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16249,
											"end": 16271,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16217,
											"end": 16281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 16217,
											"end": 16281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16217,
											"end": 16281,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 16217,
											"end": 16281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16207,
											"end": 16281,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16207,
											"end": 16281,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16163,
											"end": 16291,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15947,
											"end": 16298,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15947,
											"end": 16298,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15947,
											"end": 16298,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15947,
											"end": 16298,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15947,
											"end": 16298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16304,
											"end": 16478,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 16304,
											"end": 16478,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16444,
											"end": 16470,
											"name": "PUSH",
											"source": 11,
											"value": "584170703A20696E73756666696369656E742066756E64730000000000000000"
										},
										{
											"begin": 16440,
											"end": 16441,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16432,
											"end": 16438,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16428,
											"end": 16442,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16421,
											"end": 16471,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16304,
											"end": 16478,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16304,
											"end": 16478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16484,
											"end": 16850,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 16484,
											"end": 16850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16626,
											"end": 16629,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16647,
											"end": 16714,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 16711,
											"end": 16713,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 16706,
											"end": 16709,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16647,
											"end": 16714,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 16647,
											"end": 16714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16647,
											"end": 16714,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 16647,
											"end": 16714,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16640,
											"end": 16714,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16640,
											"end": 16714,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16723,
											"end": 16816,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 16812,
											"end": 16815,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16723,
											"end": 16816,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 16723,
											"end": 16816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16723,
											"end": 16816,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 16723,
											"end": 16816,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16841,
											"end": 16843,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16836,
											"end": 16839,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16832,
											"end": 16844,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16825,
											"end": 16844,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16825,
											"end": 16844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16484,
											"end": 16850,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16484,
											"end": 16850,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16484,
											"end": 16850,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16484,
											"end": 16850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16856,
											"end": 17275,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 16856,
											"end": 17275,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17022,
											"end": 17026,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17060,
											"end": 17062,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17049,
											"end": 17058,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17045,
											"end": 17063,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17037,
											"end": 17063,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17037,
											"end": 17063,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17109,
											"end": 17118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17103,
											"end": 17107,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17099,
											"end": 17119,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17095,
											"end": 17096,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17084,
											"end": 17093,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17080,
											"end": 17097,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17073,
											"end": 17120,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17137,
											"end": 17268,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 17263,
											"end": 17267,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17137,
											"end": 17268,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 17137,
											"end": 17268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17137,
											"end": 17268,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 17137,
											"end": 17268,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17129,
											"end": 17268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17129,
											"end": 17268,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16856,
											"end": 17275,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16856,
											"end": 17275,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16856,
											"end": 17275,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16856,
											"end": 17275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17281,
											"end": 18016,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 17281,
											"end": 18016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17496,
											"end": 17500,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17534,
											"end": 17537,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 17523,
											"end": 17532,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17519,
											"end": 17538,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17511,
											"end": 17538,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17511,
											"end": 17538,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17548,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 17614,
											"end": 17615,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17603,
											"end": 17612,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17599,
											"end": 17616,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17590,
											"end": 17596,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 17548,
											"end": 17617,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 17548,
											"end": 17617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17548,
											"end": 17617,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 17548,
											"end": 17617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17627,
											"end": 17695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 17691,
											"end": 17693,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17680,
											"end": 17689,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17676,
											"end": 17694,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17667,
											"end": 17673,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 17627,
											"end": 17695,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 17627,
											"end": 17695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17627,
											"end": 17695,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 17627,
											"end": 17695,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17705,
											"end": 17777,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 17773,
											"end": 17775,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 17762,
											"end": 17771,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17758,
											"end": 17776,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17749,
											"end": 17755,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 17705,
											"end": 17777,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 17705,
											"end": 17777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17705,
											"end": 17777,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 17705,
											"end": 17777,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17824,
											"end": 17833,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17818,
											"end": 17822,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17814,
											"end": 17834,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17809,
											"end": 17811,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 17798,
											"end": 17807,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17794,
											"end": 17812,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17787,
											"end": 17835,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17852,
											"end": 17928,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 17923,
											"end": 17927,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17914,
											"end": 17920,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 17852,
											"end": 17928,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 17852,
											"end": 17928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17852,
											"end": 17928,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 17852,
											"end": 17928,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17844,
											"end": 17928,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17844,
											"end": 17928,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17938,
											"end": 18009,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 18004,
											"end": 18007,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 17993,
											"end": 18002,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17989,
											"end": 18008,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17980,
											"end": 17986,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17938,
											"end": 18009,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 17938,
											"end": 18009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17938,
											"end": 18009,
											"name": "tag",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 17938,
											"end": 18009,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17281,
											"end": 18016,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": 17281,
											"end": 18016,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 17281,
											"end": 18016,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17281,
											"end": 18016,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17281,
											"end": 18016,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17281,
											"end": 18016,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17281,
											"end": 18016,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17281,
											"end": 18016,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17281,
											"end": 18016,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"lib/omni/contracts/core/src/interfaces/IOmniPortal.sol",
								"lib/omni/contracts/core/src/libraries/ConfLevel.sol",
								"lib/omni/contracts/core/src/libraries/XTypes.sol",
								"lib/omni/contracts/core/src/pkg/XApp.sol",
								"lib/omni/contracts/core/src/pkg/XAppBase.sol",
								"src/wstf token launch/contracts/interfaces/draft-IERC6093.sol",
								"src/wstf token launch/contracts/token/ERC20/IERC20.sol",
								"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol",
								"src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"src/wstf token launch/contracts/token/ERC20/implementation.sol",
								"src/wstf token launch/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"defaultConfLevel()": "74eeb847",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"omni()": "39acf9f1",
							"receiveTransfer(address,address,uint256)": "4a536a06",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transfer(uint64,address,uint256)": "d15dcd62",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"omniPortal\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"conf\",\"type\":\"uint8\"}],\"name\":\"DefaultConfLevelSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"omni\",\"type\":\"address\"}],\"name\":\"OmniPortalSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultConfLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"omni\",\"outputs\":[{\"internalType\":\"contract IOmniPortal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"receiveTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChain\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"DefaultConfLevelSet(uint8)\":{\"params\":{\"conf\":\"Confirmation level\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"events\":{\"DefaultConfLevelSet(uint8)\":{\"notice\":\"Emitted when the default confirmation level is set\"},\"OmniPortalSet(address)\":{\"notice\":\"Emitted when the OmniPortal contract address is set\"}},\"kind\":\"user\",\"methods\":{\"defaultConfLevel()\":{\"notice\":\"Default confirmation level for xcalls\"},\"omni()\":{\"notice\":\"The OmniPortal contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/wstf token launch/contracts/token/ERC20/implementation.sol\":\"MyOmniToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lib/omni/contracts/core/src/interfaces/IOmniPortal.sol\":{\"keccak256\":\"0x8010a586e7abcf478044249c104a6f01c1c6830b96f14273289e01303163342d\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://ac0f21a8ef960f9752f9dca194e53eb7073f66c9124ba86d827087b5e9ce6656\",\"dweb:/ipfs/QmT1UYic7cJg58iEN8pNF6CbhXyYiR16G4ihB9NsDwZpkG\"]},\"lib/omni/contracts/core/src/libraries/ConfLevel.sol\":{\"keccak256\":\"0xfce1f35d6bbec9bb0729a7322657cec8f1f7a8a25ae6318531b08ad928f58c32\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://cb8e1467528079ac0ff70e86207f1b4d25bbb236e5830fab9991c1c76b6ca623\",\"dweb:/ipfs/QmawXHbFRrPppPAG45mHRnCWJuQMYhe534CoicW4pF43EZ\"]},\"lib/omni/contracts/core/src/libraries/XTypes.sol\":{\"keccak256\":\"0x1a670aafb257d8d16c08b03b70a9ba2e4b9f4755198f52d14f5c8e6c5dc3b96a\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://7513bb80e3db2dbaccb687304988f3992f7097b16967f1844acb4038e833e511\",\"dweb:/ipfs/QmYBPaJ3PWnxxKywRVeZZ14YWH7bSMcKuUCPhcfjk8PENT\"]},\"lib/omni/contracts/core/src/pkg/XApp.sol\":{\"keccak256\":\"0x05f07a7701a5c34ecac52efcb76856b995fd655d97b4360118cb8ccb2ae49a8f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://fb3d62b18f80c88d04eb0489194be62be66d09390d75b1b4f18faa5df247959a\",\"dweb:/ipfs/QmZPmYoUw4BBfVBbfeBPcRHwcnHjSf9XJa7iu7CmfjUg4T\"]},\"lib/omni/contracts/core/src/pkg/XAppBase.sol\":{\"keccak256\":\"0xf2344afc8b2e59b84582a80db601c7550b8b96b2a0c55cc10dc734ff57d0e959\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://72ebf8503ca6283b1002be4f2d9309dafe5082514820dae3268115b5501c08f3\",\"dweb:/ipfs/QmTTbmECQD7p8mBjhgwPS2mpZkW8iQvKdaBFRaunw1BxKJ\"]},\"src/wstf token launch/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"src/wstf token launch/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol\":{\"keccak256\":\"0x38a91ca8999d6653dcbbb425e554569a977f4f1cd079f6f8fe59317a9a3d9044\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65b37c0e41685fa901401fa52cf50bcec23ad81acc3c77ff86ffec2e99723fad\",\"dweb:/ipfs/QmfMjoj5GW6YWnjQM4BMbNfyJMdv4GonRmphTtTNLS6Xak\"]},\"src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"src/wstf token launch/contracts/token/ERC20/implementation.sol\":{\"keccak256\":\"0xefba9f7e08ca406f022e9b1223a3af692a89f8ae5dff3ccf8572a1bf57014d73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60deb8f7f276df584b11cc900a9be71adbb15353a853acb87ebae00740fdca14\",\"dweb:/ipfs/QmPrmdx9GPdHc22QdBRUK1fGqsVsHu9SXiZUcbpkvVQd3d\"]},\"src/wstf token launch/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 349,
								"contract": "src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "omni",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IOmniPortal)175"
							},
							{
								"astId": 352,
								"contract": "src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "defaultConfLevel",
								"offset": 20,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 356,
								"contract": "src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "xmsg",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(MsgContext)245_storage"
							},
							{
								"astId": 824,
								"contract": "src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "_balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 830,
								"contract": "src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 832,
								"contract": "src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 834,
								"contract": "src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "_name",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 836,
								"contract": "src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IOmniPortal)175": {
								"encoding": "inplace",
								"label": "contract IOmniPortal",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(MsgContext)245_storage": {
								"encoding": "inplace",
								"label": "struct XTypes.MsgContext",
								"members": [
									{
										"astId": 242,
										"contract": "src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
										"label": "sourceChainId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint64"
									},
									{
										"astId": 244,
										"contract": "src/wstf token launch/contracts/token/ERC20/implementation.sol:MyOmniToken",
										"label": "sender",
										"offset": 8,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"events": {
							"DefaultConfLevelSet(uint8)": {
								"notice": "Emitted when the default confirmation level is set"
							},
							"OmniPortalSet(address)": {
								"notice": "Emitted when the OmniPortal contract address is set"
							}
						},
						"kind": "user",
						"methods": {
							"defaultConfLevel()": {
								"notice": "Default confirmation level for xcalls"
							},
							"omni()": {
								"notice": "The OmniPortal contract"
							}
						},
						"version": 1
					}
				}
			},
			"src/wstf token launch/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/wstf token launch/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/wstf token launch/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/omni/contracts/core/src/interfaces/IOmniPortal.sol": {
				"ast": {
					"absolutePath": "lib/omni/contracts/core/src/interfaces/IOmniPortal.sol",
					"exportedSymbols": {
						"IOmniPortal": [
							175
						],
						"XTypes": [
							302
						]
					},
					"id": 176,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:0"
						},
						{
							"absolutePath": "lib/omni/contracts/core/src/libraries/XTypes.sol",
							"file": "../libraries/XTypes.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 303,
							"src": "67:49:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "XTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 302,
										"src": "76:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOmniPortal",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "118:188:0",
								"text": " @title IOmniPortal\n @notice The OmniPortal is the on-chain interface to Omni's cross-chain\n         messaging protocol. It is used to initiate and execute cross-chain calls."
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175
							],
							"name": "IOmniPortal",
							"nameLocation": "317:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "335:534:0",
										"text": " @notice Emitted when an xcall is made to a contract on another chain\n @param destChainId   Destination chain ID\n @param offset        Offset this XMsg in the source -> dest XStream\n @param sender        msg.sender of the source xcall\n @param to            Address of the contract to call on the destination chain\n @param data          Encoded function calldata\n @param gasLimit      Gas limit for execution on destination chain\n @param fees          Fees paid for the xcall"
									},
									"eventSelector": "b7c8eb9d7a7fbcdab809ab7b8a7c41701eb3115e3fe99d30ff490d8552f72bfa",
									"id": 23,
									"name": "XMsg",
									"nameLocation": "880:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "destChainId",
												"nameLocation": "909:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "894:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 6,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "894:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "shardId",
												"nameLocation": "945:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "930:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 8,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "930:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "977:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "962:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 10,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "962:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1001:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "993:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1025:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1017:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1017:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1043:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1037:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 16,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1037:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": false,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "1064:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1057:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 18,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1057:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": false,
												"mutability": "mutable",
												"name": "fees",
												"nameLocation": "1090:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "1082:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:216:0"
									},
									"src": "874:227:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "1107:654:0",
										"text": " @notice Emitted when an XMsg is executed on its destination chain\n @param sourceChainId Source chain ID\n @param shardId       Shard ID of the XStream (first byte is the confirmation level)\n @param offset        Offset the XMsg in the source -> dest XStream\n @param gasUsed       Gas used in execution of the XMsg\n @param success       Whether the execution succeeded\n @param relayer       Address of the relayer who submitted the XMsg\n @param error         Result of XMsg execution, if success == false. Limited to\n                      xreceiptMaxErrorBytes(). Empty if success == true."
									},
									"eventSelector": "8277cab1f0fa69b34674f64a7d43f242b0bacece6f5b7e8652f1e0d88a9b873b",
									"id": 40,
									"name": "XReceipt",
									"nameLocation": "1772:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"indexed": true,
												"mutability": "mutable",
												"name": "sourceChainId",
												"nameLocation": "1805:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1790:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 25,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1790:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": true,
												"mutability": "mutable",
												"name": "shardId",
												"nameLocation": "1843:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1828:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 27,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1828:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "offset",
												"nameLocation": "1875:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1860:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 29,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1860:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": false,
												"mutability": "mutable",
												"name": "gasUsed",
												"nameLocation": "1899:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1891:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"indexed": false,
												"mutability": "mutable",
												"name": "relayer",
												"nameLocation": "1924:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1916:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 33,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"indexed": false,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1946:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1941:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 35,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1941:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "1969:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1963:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 37,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1963:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1780:200:0"
									},
									"src": "1766:215:0"
								},
								{
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1987:57:0",
										"text": " @notice Maximum allowed xmsg gas limit"
									},
									"functionSelector": "cf84c818",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "xmsgMaxGasLimit",
									"nameLocation": "2058:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2073:2:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2099:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 43,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2099:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2098:8:0"
									},
									"scope": 175,
									"src": "2049:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2113:57:0",
										"text": " @notice Minimum allowed xmsg gas limit"
									},
									"functionSelector": "78fe5307",
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "xmsgMinGasLimit",
									"nameLocation": "2184:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2199:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2225:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 49,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2225:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:8:0"
									},
									"scope": 175,
									"src": "2175:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2239:71:0",
										"text": " @notice Maximum number of bytes allowed in xmsg data"
									},
									"functionSelector": "b4d5afd1",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "xmsgMaxDataSize",
									"nameLocation": "2324:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2339:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2365:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 55,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2365:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2364:8:0"
									},
									"scope": 175,
									"src": "2315:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2379:76:0",
										"text": " @notice Maxium number of bytes allowed in xreceipt result"
									},
									"functionSelector": "c26dfc05",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "xreceiptMaxErrorSize",
									"nameLocation": "2469:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2515:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 61,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2515:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2514:8:0"
									},
									"scope": 175,
									"src": "2460:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2529:57:0",
										"text": " @notice Returns the fee oracle address"
									},
									"functionSelector": "500b19e7",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeOracle",
									"nameLocation": "2600:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2609:2:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2635:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2634:9:0"
									},
									"scope": 175,
									"src": "2591:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2650:93:0",
										"text": " @notice Returns the chain ID of the chain to which this portal is deployed"
									},
									"functionSelector": "9a8a0592",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "chainId",
									"nameLocation": "2757:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2790:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 73,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2790:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2789:8:0"
									},
									"scope": 175,
									"src": "2748:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "2804:77:0",
										"text": " @notice Returns the chain ID of Omni's EVM execution chain"
									},
									"functionSelector": "110ff5f1",
									"id": 82,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "omniChainId",
									"nameLocation": "2895:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2906:2:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "2932:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 79,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2932:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2931:8:0"
									},
									"scope": 175,
									"src": "2886:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2946:102:0",
										"text": " @notice Returns the offset of the last outbound XMsg sent to destChainId in shardId"
									},
									"functionSelector": "3aa87330",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "outXMsgOffset",
									"nameLocation": "3062:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "destChainId",
												"nameLocation": "3083:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3076:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 84,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3076:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "shardId",
												"nameLocation": "3103:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3096:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 86,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3096:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:36:0"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3135:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 89,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3135:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:8:0"
									},
									"scope": 175,
									"src": "3053:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3149:106:0",
										"text": " @notice Returns the offset of the last inbound XMsg received from srcChainId in shardId"
									},
									"functionSelector": "d051c97d",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "inXMsgOffset",
									"nameLocation": "3269:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "srcChainId",
												"nameLocation": "3289:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3282:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 94,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3282:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "shardId",
												"nameLocation": "3308:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3301:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 96,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3301:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3281:35:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "3340:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 99,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3340:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:8:0"
									},
									"scope": 175,
									"src": "3260:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "3354:108:0",
										"text": " @notice Returns the offset of the last inbound XBlock received from srcChainId in shardId"
									},
									"functionSelector": "3fd3b15e",
									"id": 112,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "inXBlockOffset",
									"nameLocation": "3476:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "srcChainId",
												"nameLocation": "3498:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3491:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 104,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "shardId",
												"nameLocation": "3517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3510:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 106,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3510:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:35:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "3549:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3549:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:8:0"
									},
									"scope": 175,
									"src": "3467:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "3563:392:0",
										"text": " @notice Returns the current XMsg being executed via this portal.\n          - xmsg().sourceChainId  Chain ID of the source xcall\n          - xmsg().sender         msg.sender of the source xcall\n         If no XMsg is being executed, all fields will be zero.\n          - xmsg().sourceChainId  == 0\n          - xmsg().sender         == address(0)"
									},
									"functionSelector": "2f32700e",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "xmsg",
									"nameLocation": "3969:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3973:2:0"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "3999:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MsgContext_$245_memory_ptr",
													"typeString": "struct XTypes.MsgContext"
												},
												"typeName": {
													"id": 116,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 115,
														"name": "XTypes.MsgContext",
														"nameLocations": [
															"3999:6:0",
															"4006:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 245,
														"src": "3999:17:0"
													},
													"referencedDeclaration": 245,
													"src": "3999:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MsgContext_$245_storage_ptr",
														"typeString": "struct XTypes.MsgContext"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:26:0"
									},
									"scope": 175,
									"src": "3960:65:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "4031:92:0",
										"text": " @notice Returns true the current transaction is an xcall, false otherwise"
									},
									"functionSelector": "55e2448e",
									"id": 125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isXCall",
									"nameLocation": "4137:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4144:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "4170:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4170:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4169:6:0"
									},
									"scope": 175,
									"src": "4128:48:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "4182:75:0",
										"text": " @notice Returns the shard ID is supported by this portal"
									},
									"functionSelector": "aaf1bc97",
									"id": 133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isSupportedShard",
									"nameLocation": "4271:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "shardId",
												"nameLocation": "4295:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4288:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 127,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4288:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4287:16:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4327:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 130,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4327:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4326:6:0"
									},
									"scope": 175,
									"src": "4262:71:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "4339:87:0",
										"text": " @notice Returns the destination chain ID is supported by this portal"
									},
									"functionSelector": "24278bbe",
									"id": 141,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isSupportedDest",
									"nameLocation": "4440:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "destChainId",
												"nameLocation": "4463:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4456:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 135,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4456:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4455:20:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4499:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4499:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4498:6:0"
									},
									"scope": 175,
									"src": "4431:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4511:306:0",
										"text": " @notice Calculate the fee for calling a contract on another chain\n         Fees denominated in wei.\n @param destChainId   Destination chain ID\n @param data          Encoded function calldata\n @param gasLimit      Execution gas limit, enforced on destination chain"
									},
									"functionSelector": "8dd9523c",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeFor",
									"nameLocation": "4831:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "destChainId",
												"nameLocation": "4845:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4838:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 143,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4838:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4873:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4858:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 145,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4858:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "4886:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4879:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 147,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4879:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4837:58:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "4919:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4918:9:0"
									},
									"scope": 175,
									"src": "4822:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 154,
										"nodeType": "StructuredDocumentation",
										"src": "4934:371:0",
										"text": " @notice Call a contract on another chain.\n @param destChainId   Destination chain ID\n @param conf          Confirmation level;\n @param to            Address of contract to call on destination chain\n @param data          ABI Encoded function calldata\n @param gasLimit      Execution gas limit, enforced on destination chain"
									},
									"functionSelector": "c21dda4f",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "xcall",
									"nameLocation": "5319:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "destChainId",
												"nameLocation": "5332:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5325:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 155,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5325:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "conf",
												"nameLocation": "5351:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5345:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 157,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5345:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5365:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5357:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5357:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5384:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5369:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5369:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "5397:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "5390:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 163,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5390:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:82:0"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5423:0:0"
									},
									"scope": 175,
									"src": "5310:114:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "5430:271:0",
										"text": " @notice Submit a batch of XMsgs to be executed on this chain\n @param xsub  An xchain submisison, including an attestation root w/ validator signatures,\n              and a block header and message batch, proven against the attestation root."
									},
									"functionSelector": "66a1eaf3",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "xsubmit",
									"nameLocation": "5715:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "xsub",
												"nameLocation": "5750:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "5723:31:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Submission_$282_calldata_ptr",
													"typeString": "struct XTypes.Submission"
												},
												"typeName": {
													"id": 170,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 169,
														"name": "XTypes.Submission",
														"nameLocations": [
															"5723:6:0",
															"5730:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 282,
														"src": "5723:17:0"
													},
													"referencedDeclaration": 282,
													"src": "5723:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Submission_$282_storage_ptr",
														"typeString": "struct XTypes.Submission"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5722:33:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5764:0:0"
									},
									"scope": 175,
									"src": "5706:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 176,
							"src": "307:5460:0",
							"usedErrors": [],
							"usedEvents": [
								23,
								40
							]
						}
					],
					"src": "41:5727:0"
				},
				"id": 0
			},
			"lib/omni/contracts/core/src/libraries/ConfLevel.sol": {
				"ast": {
					"absolutePath": "lib/omni/contracts/core/src/libraries/ConfLevel.sol",
					"exportedSymbols": {
						"ConfLevel": [
							220
						]
					},
					"id": 221,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ConfLevel",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 178,
								"nodeType": "StructuredDocumentation",
								"src": "67:354:1",
								"text": " @title ConfLevel\n @notice XMsg confirmation levels. Matches ConfLevels in lib/xchain/types.go\n @dev We prefer explicit constants over Enums, because we want uint8 values to start at 1, not 0, as they do in\n      lib/xchain/types.go, such that 0 can represent \"unset\". Note only latest and finalized levels are supported\n      on-chain."
							},
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220
							],
							"name": "ConfLevel",
							"nameLocation": "430:9:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "446:87:1",
										"text": " @notice XMsg confirmation level \"latest\", last byte of xmsg.shardId."
									},
									"id": 182,
									"mutability": "constant",
									"name": "Latest",
									"nameLocation": "562:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 220,
									"src": "538:34:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 180,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "538:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 181,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "571:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "579:90:1",
										"text": " @notice XMsg confirmation level \"finalized\", last byte of xmsg.shardId."
									},
									"id": 186,
									"mutability": "constant",
									"name": "Finalized",
									"nameLocation": "698:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 220,
									"src": "674:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 184,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "674:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "34",
										"id": 185,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "710:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4_by_1",
											"typeString": "int_const 4"
										},
										"value": "4"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "850:61:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 196,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 194,
															"name": "level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "867:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 195,
															"name": "Latest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "876:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "867:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 197,
															"name": "level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "886:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 198,
															"name": "Finalized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 186,
															"src": "895:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "886:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "867:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 193,
												"id": 201,
												"nodeType": "Return",
												"src": "860:44:1"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "718:68:1",
										"text": " @notice Returns true if the given level is valid."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isValid",
									"nameLocation": "800:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "814:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "808:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 188,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "808:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:13:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 191,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:1"
									},
									"scope": 220,
									"src": "791:120:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "1070:46:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 213,
																"name": "level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 206,
																"src": "1094:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1087:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 211,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "1087:6:1",
																"typeDescriptions": {}
															}
														},
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1087:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "|",
													"rightExpression": {
														"hexValue": "307830313030",
														"id": 215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1103:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "0x0100"
													},
													"src": "1087:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 210,
												"id": 217,
												"nodeType": "Return",
												"src": "1080:29:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "917:78:1",
										"text": " @notice Returns broadcast shard version of the given level."
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toBroadcastShard",
									"nameLocation": "1009:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "1032:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1026:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 205,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1026:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:13:1"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1062:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 208,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1062:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1061:8:1"
									},
									"scope": 220,
									"src": "1000:116:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 221,
							"src": "422:696:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "41:1078:1"
				},
				"id": 1
			},
			"lib/omni/contracts/core/src/libraries/XTypes.sol": {
				"ast": {
					"absolutePath": "lib/omni/contracts/core/src/libraries/XTypes.sol",
					"exportedSymbols": {
						"XTypes": [
							302
						]
					},
					"id": 303,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "XTypes",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 223,
								"nodeType": "StructuredDocumentation",
								"src": "67:166:2",
								"text": " @title XTypes\n @dev Defines xchain types, core to Omni's xchain messaging protocol. These\n      types mirror those defined in omni/lib/xchain/types.go."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "XTypes",
							"nameLocation": "242:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "XTypes.Msg",
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "255:852:2",
										"text": " @notice A cross chain message - the product of an xcall. This matches the XMsg type used\n        throughout Omni's cross-chain messaging protocol. Msg is used to construct and verify\n        XSubmission merkle trees / proofs.\n @custom:field destChainId    Chain ID of the destination chain\n @custom:field shardId        Shard ID of the XStream (first byte is the confirmation level)\n @custom:field offset         Monotonically incremented offset of Msg in source -> dest Stream\n @custom:field sender         msg.sender of xcall on source chain\n @custom:field to             Target address to call on destination chain\n @custom:field data           Data to provide to call on destination chain\n @custom:field gasLimit       Gas limit to use for call execution on destination chain"
									},
									"id": 239,
									"members": [
										{
											"constant": false,
											"id": 226,
											"mutability": "mutable",
											"name": "destChainId",
											"nameLocation": "1140:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "1133:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 225,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1133:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 228,
											"mutability": "mutable",
											"name": "shardId",
											"nameLocation": "1168:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "1161:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 227,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1161:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 230,
											"mutability": "mutable",
											"name": "offset",
											"nameLocation": "1192:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "1185:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 229,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1185:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 232,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "1216:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "1208:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 231,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 234,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "1240:2:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "1232:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 233,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1232:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 236,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "1258:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "1252:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 235,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1252:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 238,
											"mutability": "mutable",
											"name": "gasLimit",
											"nameLocation": "1279:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 239,
											"src": "1272:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 237,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1272:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Msg",
									"nameLocation": "1119:3:2",
									"nodeType": "StructDefinition",
									"scope": 302,
									"src": "1112:182:2",
									"visibility": "public"
								},
								{
									"canonicalName": "XTypes.MsgContext",
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1300:224:2",
										"text": " @notice Msg context exposed during its execution to consuming xapps.\n @custom:field sourceChainId  Chain ID of the source chain\n @custom:field sender         msg.sender of xcall on source chain"
									},
									"id": 245,
									"members": [
										{
											"constant": false,
											"id": 242,
											"mutability": "mutable",
											"name": "sourceChainId",
											"nameLocation": "1564:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 245,
											"src": "1557:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 241,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "1557:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 244,
											"mutability": "mutable",
											"name": "sender",
											"nameLocation": "1595:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 245,
											"src": "1587:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 243,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MsgContext",
									"nameLocation": "1536:10:2",
									"nodeType": "StructDefinition",
									"scope": 302,
									"src": "1529:79:2",
									"visibility": "public"
								},
								{
									"canonicalName": "XTypes.BlockHeader",
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "1614:498:2",
										"text": " @notice BlockHeader of an XBlock.\n @custom:field sourceChainId      Chain ID of the source chain\n @custom:field sourceChainId      Chain ID of the Omni consensus chain\n @custom:field confLevel          Confirmation level of the cross chain block\n @custom:field offset             Offset of the cross chain block\n @custom:field sourceBlockHeight  Height of the source chain block\n @custom:field sourceBlockHash    Hash of the source chain block"
									},
									"id": 259,
									"members": [
										{
											"constant": false,
											"id": 248,
											"mutability": "mutable",
											"name": "sourceChainId",
											"nameLocation": "2153:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 259,
											"src": "2146:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 247,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2146:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 250,
											"mutability": "mutable",
											"name": "consensusChainId",
											"nameLocation": "2183:16:2",
											"nodeType": "VariableDeclaration",
											"scope": 259,
											"src": "2176:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 249,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2176:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 252,
											"mutability": "mutable",
											"name": "confLevel",
											"nameLocation": "2215:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 259,
											"src": "2209:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 251,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2209:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 254,
											"mutability": "mutable",
											"name": "offset",
											"nameLocation": "2241:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 259,
											"src": "2234:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 253,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2234:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 256,
											"mutability": "mutable",
											"name": "sourceBlockHeight",
											"nameLocation": "2264:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 259,
											"src": "2257:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 255,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2257:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 258,
											"mutability": "mutable",
											"name": "sourceBlockHash",
											"nameLocation": "2299:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 259,
											"src": "2291:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 257,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2291:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BlockHeader",
									"nameLocation": "2124:11:2",
									"nodeType": "StructDefinition",
									"scope": 302,
									"src": "2117:204:2",
									"visibility": "public"
								},
								{
									"canonicalName": "XTypes.Submission",
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "2327:823:2",
										"text": " @notice The required parameters to submit xmsgs to an OmniPortal. Constructed by the relayer\n         by watching Omni's consensus chain, and source chain blocks.\n @custom:field attestationRoot  Merkle root of xchain block (XBlockRoot), attested to and signed by validators\n @custom:field validatorSetId   Unique identifier of the validator set that attested to this root\n @custom:field blockHeader      Block header, identifies xchain block\n @custom:field msgs             Messages to execute\n @custom:field proof            Multi proof of block header and messages, proven against attestationRoot\n @custom:field proofFlags       Multi proof flags\n @custom:field signatures       Array of validator signatures of the attestationRoot, and their public keys"
									},
									"id": 282,
									"members": [
										{
											"constant": false,
											"id": 262,
											"mutability": "mutable",
											"name": "attestationRoot",
											"nameLocation": "3191:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 282,
											"src": "3183:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 261,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "3183:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 264,
											"mutability": "mutable",
											"name": "validatorSetId",
											"nameLocation": "3223:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 282,
											"src": "3216:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 263,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "3216:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 267,
											"mutability": "mutable",
											"name": "blockHeader",
											"nameLocation": "3259:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 282,
											"src": "3247:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_BlockHeader_$259_storage_ptr",
												"typeString": "struct XTypes.BlockHeader"
											},
											"typeName": {
												"id": 266,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 265,
													"name": "BlockHeader",
													"nameLocations": [
														"3247:11:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 259,
													"src": "3247:11:2"
												},
												"referencedDeclaration": 259,
												"src": "3247:11:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BlockHeader_$259_storage_ptr",
													"typeString": "struct XTypes.BlockHeader"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 271,
											"mutability": "mutable",
											"name": "msgs",
											"nameLocation": "3286:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 282,
											"src": "3280:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Msg_$239_storage_$dyn_storage_ptr",
												"typeString": "struct XTypes.Msg[]"
											},
											"typeName": {
												"baseType": {
													"id": 269,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 268,
														"name": "Msg",
														"nameLocations": [
															"3280:3:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 239,
														"src": "3280:3:2"
													},
													"referencedDeclaration": 239,
													"src": "3280:3:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Msg_$239_storage_ptr",
														"typeString": "struct XTypes.Msg"
													}
												},
												"id": 270,
												"nodeType": "ArrayTypeName",
												"src": "3280:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Msg_$239_storage_$dyn_storage_ptr",
													"typeString": "struct XTypes.Msg[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 274,
											"mutability": "mutable",
											"name": "proof",
											"nameLocation": "3310:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 282,
											"src": "3300:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 272,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3300:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 273,
												"nodeType": "ArrayTypeName",
												"src": "3300:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 277,
											"mutability": "mutable",
											"name": "proofFlags",
											"nameLocation": "3332:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 282,
											"src": "3325:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
												"typeString": "bool[]"
											},
											"typeName": {
												"baseType": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3325:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 276,
												"nodeType": "ArrayTypeName",
												"src": "3325:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
													"typeString": "bool[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 281,
											"mutability": "mutable",
											"name": "signatures",
											"nameLocation": "3363:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 282,
											"src": "3352:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_SigTuple_$288_storage_$dyn_storage_ptr",
												"typeString": "struct XTypes.SigTuple[]"
											},
											"typeName": {
												"baseType": {
													"id": 279,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 278,
														"name": "SigTuple",
														"nameLocations": [
															"3352:8:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 288,
														"src": "3352:8:2"
													},
													"referencedDeclaration": 288,
													"src": "3352:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SigTuple_$288_storage_ptr",
														"typeString": "struct XTypes.SigTuple"
													}
												},
												"id": 280,
												"nodeType": "ArrayTypeName",
												"src": "3352:10:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_SigTuple_$288_storage_$dyn_storage_ptr",
													"typeString": "struct XTypes.SigTuple[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Submission",
									"nameLocation": "3162:10:2",
									"nodeType": "StructDefinition",
									"scope": 302,
									"src": "3155:225:2",
									"visibility": "public"
								},
								{
									"canonicalName": "XTypes.SigTuple",
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "3386:277:2",
										"text": " @notice A tuple of a validator's ethereum address and signature over some digest.\n @custom:field validatorAddr  Validator ethereum address\n @custom:field signature      Validator signature over some digest; Ethereum 65 bytes [R || S || V] format."
									},
									"id": 288,
									"members": [
										{
											"constant": false,
											"id": 285,
											"mutability": "mutable",
											"name": "validatorAddr",
											"nameLocation": "3702:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "3694:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 284,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3694:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 287,
											"mutability": "mutable",
											"name": "signature",
											"nameLocation": "3731:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 288,
											"src": "3725:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 286,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "3725:5:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "SigTuple",
									"nameLocation": "3675:8:2",
									"nodeType": "StructDefinition",
									"scope": 302,
									"src": "3668:79:2",
									"visibility": "public"
								},
								{
									"canonicalName": "XTypes.Validator",
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "3753:205:2",
										"text": " @notice An Omni validator, specified by their etheruem address and voting power.\n @custom:field addr   Validator ethereum address\n @custom:field power  Validator voting power"
									},
									"id": 294,
									"members": [
										{
											"constant": false,
											"id": 291,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "3998:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 294,
											"src": "3990:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 290,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3990:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 293,
											"mutability": "mutable",
											"name": "power",
											"nameLocation": "4019:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 294,
											"src": "4012:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 292,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "4012:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Validator",
									"nameLocation": "3970:9:2",
									"nodeType": "StructDefinition",
									"scope": 302,
									"src": "3963:68:2",
									"visibility": "public"
								},
								{
									"canonicalName": "XTypes.Chain",
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "4037:190:2",
										"text": " @notice A chain in the \"omni network\" specified by its chain ID and supported shards.\n @custom:field chainId  Chain ID\n @custom:field shards   Supported shards"
									},
									"id": 301,
									"members": [
										{
											"constant": false,
											"id": 297,
											"mutability": "mutable",
											"name": "chainId",
											"nameLocation": "4262:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 301,
											"src": "4255:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 296,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "4255:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 300,
											"mutability": "mutable",
											"name": "shards",
											"nameLocation": "4288:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 301,
											"src": "4279:15:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
												"typeString": "uint64[]"
											},
											"typeName": {
												"baseType": {
													"id": 298,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4279:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 299,
												"nodeType": "ArrayTypeName",
												"src": "4279:8:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
													"typeString": "uint64[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Chain",
									"nameLocation": "4239:5:2",
									"nodeType": "StructDefinition",
									"scope": 302,
									"src": "4232:69:2",
									"visibility": "public"
								}
							],
							"scope": 303,
							"src": "234:4069:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "41:4263:2"
				},
				"id": 2
			},
			"lib/omni/contracts/core/src/pkg/XApp.sol": {
				"ast": {
					"absolutePath": "lib/omni/contracts/core/src/pkg/XApp.sol",
					"exportedSymbols": {
						"XApp": [
							326
						],
						"XAppBase": [
							581
						]
					},
					"id": 327,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:3"
						},
						{
							"absolutePath": "lib/omni/contracts/core/src/pkg/XAppBase.sol",
							"file": "./XAppBase.sol",
							"id": 306,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 327,
							"sourceUnit": 582,
							"src": "67:42:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 305,
										"name": "XAppBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 581,
										"src": "76:8:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 308,
										"name": "XAppBase",
										"nameLocations": [
											"219:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 581,
										"src": "219:8:3"
									},
									"id": 309,
									"nodeType": "InheritanceSpecifier",
									"src": "219:8:3"
								}
							],
							"canonicalName": "XApp",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 307,
								"nodeType": "StructuredDocumentation",
								"src": "111:81:3",
								"text": " @title XApp\n @notice Base contract for Omni cross-chain applications"
							},
							"fullyImplemented": true,
							"id": 326,
							"linearizedBaseContracts": [
								326,
								581
							],
							"name": "XApp",
							"nameLocation": "211:4:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "286:87:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 317,
															"name": "omni_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 311,
															"src": "311:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 316,
														"name": "_setOmniPortal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 580,
														"src": "296:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "296:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "296:21:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 321,
															"name": "defaultConfLevel_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "348:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 320,
														"name": "_setDefaultConfLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "327:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "327:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "327:39:3"
											}
										]
									},
									"id": 325,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "omni_",
												"nameLocation": "254:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "246:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "defaultConfLevel_",
												"nameLocation": "267:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "261:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 312,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "261:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:40:3"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:0:3"
									},
									"scope": 326,
									"src": "234:139:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 327,
							"src": "193:182:3",
							"usedErrors": [],
							"usedEvents": [
								340,
								345
							]
						}
					],
					"src": "41:335:3"
				},
				"id": 3
			},
			"lib/omni/contracts/core/src/pkg/XAppBase.sol": {
				"ast": {
					"absolutePath": "lib/omni/contracts/core/src/pkg/XAppBase.sol",
					"exportedSymbols": {
						"ConfLevel": [
							220
						],
						"IOmniPortal": [
							175
						],
						"XAppBase": [
							581
						],
						"XTypes": [
							302
						]
					},
					"id": 582,
					"license": "GPL-3.0-only",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 328,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "41:24:4"
						},
						{
							"absolutePath": "lib/omni/contracts/core/src/interfaces/IOmniPortal.sol",
							"file": "../interfaces/IOmniPortal.sol",
							"id": 330,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 582,
							"sourceUnit": 176,
							"src": "67:60:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 329,
										"name": "IOmniPortal",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "76:11:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/omni/contracts/core/src/libraries/XTypes.sol",
							"file": "../libraries/XTypes.sol",
							"id": 332,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 582,
							"sourceUnit": 303,
							"src": "128:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 331,
										"name": "XTypes",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 302,
										"src": "137:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/omni/contracts/core/src/libraries/ConfLevel.sol",
							"file": "../libraries/ConfLevel.sol",
							"id": 334,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 582,
							"sourceUnit": 221,
							"src": "178:55:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 333,
										"name": "ConfLevel",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 220,
										"src": "187:9:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "XAppBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 335,
								"nodeType": "StructuredDocumentation",
								"src": "235:68:4",
								"text": " @title XAppBase\n @notice Shared XApp storage and logic."
							},
							"fullyImplemented": true,
							"id": 581,
							"linearizedBaseContracts": [
								581
							],
							"name": "XAppBase",
							"nameLocation": "322:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "337:78:4",
										"text": " @notice Emitted when the OmniPortal contract address is set"
									},
									"eventSelector": "79162c8d053a07e70cdc1ccc536f0440b571f8508377d2bef51094fadab98f47",
									"id": 340,
									"name": "OmniPortalSet",
									"nameLocation": "426:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"indexed": false,
												"mutability": "mutable",
												"name": "omni",
												"nameLocation": "448:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "440:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:14:4"
									},
									"src": "420:34:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "460:116:4",
										"text": " @notice Emitted when the default confirmation level is set\n @param conf  Confirmation level"
									},
									"eventSelector": "8de08a798b4e50b4f351c1eaa91a11530043802be3ffac2df87db0c45a2e8483",
									"id": 345,
									"name": "DefaultConfLevelSet",
									"nameLocation": "587:19:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"indexed": false,
												"mutability": "mutable",
												"name": "conf",
												"nameLocation": "613:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "607:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 342,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "607:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "606:12:4"
									},
									"src": "581:38:4"
								},
								{
									"constant": false,
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "625:50:4",
										"text": " @notice The OmniPortal contract"
									},
									"functionSelector": "39acf9f1",
									"id": 349,
									"mutability": "mutable",
									"name": "omni",
									"nameLocation": "699:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 581,
									"src": "680:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IOmniPortal_$175",
										"typeString": "contract IOmniPortal"
									},
									"typeName": {
										"id": 348,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 347,
											"name": "IOmniPortal",
											"nameLocations": [
												"680:11:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 175,
											"src": "680:11:4"
										},
										"referencedDeclaration": 175,
										"src": "680:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IOmniPortal_$175",
											"typeString": "contract IOmniPortal"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "710:64:4",
										"text": " @notice Default confirmation level for xcalls"
									},
									"functionSelector": "74eeb847",
									"id": 352,
									"mutability": "mutable",
									"name": "defaultConfLevel",
									"nameLocation": "792:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 581,
									"src": "779:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 351,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "779:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "815:65:4",
										"text": " @notice Transient storage for the current xmsg"
									},
									"id": 356,
									"mutability": "mutable",
									"name": "xmsg",
									"nameLocation": "912:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 581,
									"src": "885:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_MsgContext_$245_storage",
										"typeString": "struct XTypes.MsgContext"
									},
									"typeName": {
										"id": 355,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 354,
											"name": "XTypes.MsgContext",
											"nameLocations": [
												"885:6:4",
												"892:10:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 245,
											"src": "885:17:4"
										},
										"referencedDeclaration": 245,
										"src": "885:17:4",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_MsgContext_$245_storage_ptr",
											"typeString": "struct XTypes.MsgContext"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "1041:67:4",
										"statements": [
											{
												"expression": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 359,
														"name": "xmsg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "1051:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MsgContext_$245_storage",
															"typeString": "struct XTypes.MsgContext storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 360,
																"name": "omni",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1058:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IOmniPortal_$175",
																	"typeString": "contract IOmniPortal"
																}
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1063:4:4",
															"memberName": "xmsg",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 119,
															"src": "1058:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_struct$_MsgContext_$245_memory_ptr_$",
																"typeString": "function () view external returns (struct XTypes.MsgContext memory)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1058:11:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MsgContext_$245_memory_ptr",
															"typeString": "struct XTypes.MsgContext memory"
														}
													},
													"src": "1051:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MsgContext_$245_storage",
														"typeString": "struct XTypes.MsgContext storage ref"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "1051:18:4"
											},
											{
												"id": 365,
												"nodeType": "PlaceholderStatement",
												"src": "1079:1:4"
											},
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "1090:11:4",
													"subExpression": {
														"id": 366,
														"name": "xmsg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "1097:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MsgContext_$245_storage",
															"typeString": "struct XTypes.MsgContext storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "1090:11:4"
											}
										]
									},
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "923:96:4",
										"text": " @notice Read current xmsg into storage before execution, delete it afterwards"
									},
									"id": 370,
									"name": "xrecv",
									"nameLocation": "1033:5:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1038:2:4"
									},
									"src": "1024:84:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "1257:69:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 376,
																"name": "omni",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "1274:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IOmniPortal_$175",
																	"typeString": "contract IOmniPortal"
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1279:7:4",
															"memberName": "isXCall",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 125,
															"src": "1274:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
																"typeString": "function () view external returns (bool)"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1274:14:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 379,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1292:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1296:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1292:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 383,
																	"name": "omni",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 349,
																	"src": "1314:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IOmniPortal_$175",
																		"typeString": "contract IOmniPortal"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IOmniPortal_$175",
																		"typeString": "contract IOmniPortal"
																	}
																],
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1306:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 381,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1306:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1306:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1292:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1274:45:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 375,
												"id": 387,
												"nodeType": "Return",
												"src": "1267:52:4"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "1114:90:4",
										"text": " @notice Return true if the current call is an xcall from the OmniPortal"
									},
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isXCall",
									"nameLocation": "1218:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1225:2:4"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1251:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1251:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:6:4"
									},
									"scope": 581,
									"src": "1209:117:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "1553:64:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 403,
															"name": "destChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "1582:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 404,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "1595:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 405,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "1601:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"id": 401,
															"name": "omni",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "1570:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOmniPortal_$175",
																"typeString": "contract IOmniPortal"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1575:6:4",
														"memberName": "feeFor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 153,
														"src": "1570:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint64_$_t_bytes_memory_ptr_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint64,bytes memory,uint64) view external returns (uint256)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1570:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 400,
												"id": 407,
												"nodeType": "Return",
												"src": "1563:47:4"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "1332:112:4",
										"text": " @notice Retruns the fee for calling a contract on another chain, with the specified gas limit"
									},
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "feeFor",
									"nameLocation": "1458:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "destChainId",
												"nameLocation": "1472:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1465:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 391,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1465:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1498:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1485:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1485:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "1511:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1504:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 395,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1504:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1464:56:4"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1544:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:9:4"
									},
									"scope": 581,
									"src": "1449:168:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "1766:42:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 415,
															"name": "omni",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "1783:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOmniPortal_$175",
																"typeString": "contract IOmniPortal"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1788:11:4",
														"memberName": "omniChainId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 82,
														"src": "1783:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint64_$",
															"typeString": "function () view external returns (uint64)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1783:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 414,
												"id": 418,
												"nodeType": "Return",
												"src": "1776:25:4"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1623:84:4",
										"text": " @notice Returns the chain ID of the Omni EVM in this Omni network"
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "omniChainId",
									"nameLocation": "1721:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1732:2:4"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "1758:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 412,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "1758:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1757:8:4"
									},
									"scope": 581,
									"src": "1712:96:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "2266:271:4",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "2284:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "2276:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 434,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2276:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [
														{
															"id": 438,
															"name": "destChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "2302:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 439,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "2315:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 440,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "2321:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"id": 436,
															"name": "omni",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "2290:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOmniPortal_$175",
																"typeString": "contract IOmniPortal"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2295:6:4",
														"memberName": "feeFor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 153,
														"src": "2290:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint64_$_t_bytes_memory_ptr_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint64,bytes memory,uint64) view external returns (uint256)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2276:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 446,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2356:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_XAppBase_$581",
																					"typeString": "contract XAppBase"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_XAppBase_$581",
																					"typeString": "contract XAppBase"
																				}
																			],
																			"id": 445,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2348:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 444,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2348:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2348:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2362:7:4",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "2348:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 449,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "2373:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2348:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 451,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2380:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2384:5:4",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2380:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 453,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "2393:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2380:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2348:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "584170703a20696e73756666696369656e742066756e6473",
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2398:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6",
																"typeString": "literal_string \"XApp: insufficient funds\""
															},
															"value": "XApp: insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6",
																"typeString": "literal_string \"XApp: insufficient funds\""
															}
														],
														"id": 443,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2340:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2340:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "2340:85:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 464,
															"name": "destChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "2460:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 465,
															"name": "defaultConfLevel",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "2473:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 466,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "2491:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "2495:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 468,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "2501:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"expression": {
																"id": 459,
																"name": "omni",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "2435:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IOmniPortal_$175",
																	"typeString": "contract IOmniPortal"
																}
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2440:5:4",
															"memberName": "xcall",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 167,
															"src": "2435:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint64_$_t_uint8_$_t_address_$_t_bytes_memory_ptr_$_t_uint64_$returns$__$",
																"typeString": "function (uint64,uint8,address,bytes memory,uint64) payable external"
															}
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 462,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "2454:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2435:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint64_$_t_uint8_$_t_address_$_t_bytes_memory_ptr_$_t_uint64_$returns$__$value",
															"typeString": "function (uint64,uint8,address,bytes memory,uint64) payable external"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2435:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "2435:75:4"
											},
											{
												"expression": {
													"id": 471,
													"name": "fee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 435,
													"src": "2527:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 433,
												"id": 472,
												"nodeType": "Return",
												"src": "2520:10:4"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "1814:337:4",
										"text": " @notice Call a contract on another. (Default ConfLevel)\n @param destChainId   Destination chain ID\n @param to            Address of contract to call on destination chain\n @param data          ABI Encoded function calldata\n @param gasLimit      Execution gas limit, enforced on destination chain"
									},
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "xcall",
									"nameLocation": "2165:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "destChainId",
												"nameLocation": "2178:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2171:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 422,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2171:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2199:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2191:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2191:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2216:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2203:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 426,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2203:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "2229:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2222:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 428,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2222:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2170:68:4"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2257:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2257:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:9:4"
									},
									"scope": 581,
									"src": "2156:381:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "3081:259:4",
										"statements": [
											{
												"assignments": [
													491
												],
												"declarations": [
													{
														"constant": false,
														"id": 491,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "3099:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 529,
														"src": "3091:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3091:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 498,
												"initialValue": {
													"arguments": [
														{
															"id": 494,
															"name": "destChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3117:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 495,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "3130:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 496,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "3136:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"id": 492,
															"name": "omni",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "3105:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IOmniPortal_$175",
																"typeString": "contract IOmniPortal"
															}
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3110:6:4",
														"memberName": "feeFor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 153,
														"src": "3105:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint64_$_t_bytes_memory_ptr_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint64,bytes memory,uint64) view external returns (uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3105:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3091:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 502,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3171:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_XAppBase_$581",
																					"typeString": "contract XAppBase"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_XAppBase_$581",
																					"typeString": "contract XAppBase"
																				}
																			],
																			"id": 501,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3163:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 500,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3163:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3163:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3177:7:4",
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"src": "3163:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 505,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "3188:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3163:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 507,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3195:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3199:5:4",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "3195:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 509,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "3208:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3195:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3163:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "584170703a20696e73756666696369656e742066756e6473",
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3213:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6",
																"typeString": "literal_string \"XApp: insufficient funds\""
															},
															"value": "XApp: insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e788de9a6ada95826979b10a92ade57522bb1a67757288eb146a3600bac434a6",
																"typeString": "literal_string \"XApp: insufficient funds\""
															}
														],
														"id": 499,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3155:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3155:85:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "3155:85:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 520,
															"name": "destChainId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "3275:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 521,
															"name": "conf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "3288:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 522,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "3294:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "3298:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 524,
															"name": "gasLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "3304:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"expression": {
																"id": 515,
																"name": "omni",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "3250:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IOmniPortal_$175",
																	"typeString": "contract IOmniPortal"
																}
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3255:5:4",
															"memberName": "xcall",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 167,
															"src": "3250:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_uint64_$_t_uint8_$_t_address_$_t_bytes_memory_ptr_$_t_uint64_$returns$__$",
																"typeString": "function (uint64,uint8,address,bytes memory,uint64) payable external"
															}
														},
														"id": 519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 518,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "3269:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3250:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_uint64_$_t_uint8_$_t_address_$_t_bytes_memory_ptr_$_t_uint64_$returns$__$value",
															"typeString": "function (uint64,uint8,address,bytes memory,uint64) payable external"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3250:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "3250:63:4"
											},
											{
												"expression": {
													"id": 527,
													"name": "fee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 491,
													"src": "3330:3:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 489,
												"id": 528,
												"nodeType": "Return",
												"src": "3323:10:4"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "2543:391:4",
										"text": " @notice Call a contract on another chain. (Explicit ConfLevel)\n @param destChainId   Destination chain ID\n @param conf          Confirmation level\n @param to            Address of contract to call on destination chain\n @param data          ABI Encoded function calldata\n @param gasLimit      Execution gas limit, enforced on destination chain"
									},
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "xcall",
									"nameLocation": "2948:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "destChainId",
												"nameLocation": "2961:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2954:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 476,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2954:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "conf",
												"nameLocation": "2980:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2974:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2974:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2994:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2986:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2986:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3011:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2998:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 482,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2998:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "gasLimit",
												"nameLocation": "3024:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "3017:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 484,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3017:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2953:80:4"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "3068:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3068:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3067:9:4"
									},
									"scope": 581,
									"src": "2939:401:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "3513:150:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 539,
																	"name": "conf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "3549:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																],
																"expression": {
																	"id": 537,
																	"name": "ConfLevel",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "3531:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ConfLevel_$220_$",
																		"typeString": "type(library ConfLevel)"
																	}
																},
																"id": 538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3541:7:4",
																"memberName": "isValid",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 203,
																"src": "3531:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint8_$returns$_t_bool_$",
																	"typeString": "function (uint8) pure returns (bool)"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3531:23:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "584170703a20696e76616c696420636f6e66206c6576656c",
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3556:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5",
																"typeString": "literal_string \"XApp: invalid conf level\""
															},
															"value": "XApp: invalid conf level"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_567240275ae6d9125bb589b32e94d6d2897ef2a6e0a9ccb8c54b9e6386da74c5",
																"typeString": "literal_string \"XApp: invalid conf level\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3523:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3523:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "3523:60:4"
											},
											{
												"expression": {
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 544,
														"name": "defaultConfLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "3593:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 545,
														"name": "conf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 533,
														"src": "3612:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "3593:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "3593:23:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 549,
															"name": "conf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "3651:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 548,
														"name": "DefaultConfLevelSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "3631:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3631:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "EmitStatement",
												"src": "3626:30:4"
											}
										]
									},
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "3346:111:4",
										"text": " @notice Set the default confirmation level for xcalls\n @param conf  Confirmation level"
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setDefaultConfLevel",
									"nameLocation": "3471:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "conf",
												"nameLocation": "3498:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3492:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 532,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3492:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:12:4"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3513:0:4"
									},
									"scope": 581,
									"src": "3462:201:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 579,
										"nodeType": "Block",
										"src": "3839:137:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "_omni",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "3857:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3874:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3866:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 561,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3866:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3866:10:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3857:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "584170703a206e6f207a65726f206f6d6e69",
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3878:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52",
																"typeString": "literal_string \"XApp: no zero omni\""
															},
															"value": "XApp: no zero omni"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_055fe6444e11a5737bc919627cc5db0322f7a79f668881c1b9154b3b91e50f52",
																"typeString": "literal_string \"XApp: no zero omni\""
															}
														],
														"id": 559,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3849:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3849:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "3849:50:4"
											},
											{
												"expression": {
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 569,
														"name": "omni",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "3909:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOmniPortal_$175",
															"typeString": "contract IOmniPortal"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 571,
																"name": "_omni",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 556,
																"src": "3928:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 570,
															"name": "IOmniPortal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3916:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IOmniPortal_$175_$",
																"typeString": "type(contract IOmniPortal)"
															}
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3916:18:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IOmniPortal_$175",
															"typeString": "contract IOmniPortal"
														}
													},
													"src": "3909:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IOmniPortal_$175",
														"typeString": "contract IOmniPortal"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "3909:25:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 576,
															"name": "_omni",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "3963:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 575,
														"name": "OmniPortalSet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "3949:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3949:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "EmitStatement",
												"src": "3944:25:4"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "3669:117:4",
										"text": " @notice Set the OmniPortal contract address\n @param _omni    The OmniPortal contract address"
									},
									"id": 580,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOmniPortal",
									"nameLocation": "3800:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "_omni",
												"nameLocation": "3823:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "3815:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3814:15:4"
									},
									"returnParameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3839:0:4"
									},
									"scope": 581,
									"src": "3791:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 582,
							"src": "304:3674:4",
							"usedErrors": [],
							"usedEvents": [
								340,
								345
							]
						}
					],
					"src": "41:3938:4"
				},
				"id": 4
			},
			"src/wstf token launch/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "src/wstf token launch/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							718
						],
						"IERC20Errors": [
							623
						],
						"IERC721Errors": [
							671
						]
					},
					"id": 719,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 583,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 584,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:5",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 623,
							"linearizedBaseContracts": [
								623
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:5",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 593,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "652:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "668:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "685:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:5"
									},
									"src": "621:80:5"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 598,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "889:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:5"
									},
									"src": "864:41:5"
								},
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 603,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1102:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:5"
									},
									"src": "1075:45:5"
								},
								{
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:5",
										"text": " @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 612,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "1509:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "1526:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "1545:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:5"
									},
									"src": "1476:85:5"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 617,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "1773:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:5"
									},
									"src": "1746:45:5"
								},
								{
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:5",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 622,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "2023:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:5"
									},
									"src": "1997:43:5"
								}
							],
							"scope": 719,
							"src": "278:1764:5",
							"usedErrors": [
								593,
								598,
								603,
								612,
								617,
								622
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 624,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:5",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 671,
							"linearizedBaseContracts": [
								671
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:5",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 629,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "2465:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:5"
									},
									"src": "2440:40:5"
								},
								{
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:5",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 634,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "2652:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:5"
									},
									"src": "2623:46:5"
								},
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:5",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 643,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "2996:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "3012:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "3029:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:5"
									},
									"src": "2969:75:5"
								},
								{
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 648,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3233:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:5"
									},
									"src": "3207:42:5"
								},
								{
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 653,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "3447:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:5"
									},
									"src": "3419:46:5"
								},
								{
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:5",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 660,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "3756:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 660,
												"src": "3774:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:5"
									},
									"src": "3723:68:5"
								},
								{
									"documentation": {
										"id": 661,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 665,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "4004:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:5"
									},
									"src": "3976:46:5"
								},
								{
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:5",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 670,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "4258:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:5"
									},
									"src": "4230:46:5"
								}
							],
							"scope": 719,
							"src": "2186:2092:5",
							"usedErrors": [
								629,
								634,
								643,
								648,
								653,
								660,
								665,
								670
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 672,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:5",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 718,
							"linearizedBaseContracts": [
								718
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:5",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 683,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4854:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4870:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4887:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4903:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:5"
									},
									"src": "4821:99:5"
								},
								{
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 688,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "5110:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:5"
									},
									"src": "5083:43:5"
								},
								{
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 693,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "5325:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:5"
									},
									"src": "5296:47:5"
								},
								{
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:5",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 700,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "5645:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "5663:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:5"
									},
									"src": "5610:68:5"
								},
								{
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 705,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "5892:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:5"
									},
									"src": "5863:47:5"
								},
								{
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:5",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 710,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "6147:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:5"
									},
									"src": "6118:47:5"
								},
								{
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:5",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 717,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "6488:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "6507:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:5"
									},
									"src": "6456:73:5"
								}
							],
							"scope": 719,
							"src": "4424:2107:5",
							"usedErrors": [
								683,
								688,
								693,
								700,
								705,
								710,
								717
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:5"
				},
				"id": 5
			},
			"src/wstf token launch/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "src/wstf token launch/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							796
						]
					},
					"id": 797,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 720,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 721,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 796,
							"linearizedBaseContracts": [
								796
							],
							"name": "IERC20",
							"nameLocation": "213:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 730,
									"name": "Transfer",
									"nameLocation": "395:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "404:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "426:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "446:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:6"
									},
									"src": "389:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 739,
									"name": "Approval",
									"nameLocation": "626:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "635:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "658:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "683:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:6"
									},
									"src": "620:78:6"
								},
								{
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:6"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "820:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:6"
									},
									"scope": 796,
									"src": "774:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "930:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:6"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "970:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:6"
									},
									"scope": 796,
									"src": "911:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 763,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1221:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1233:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:6"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "1266:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:6"
									},
									"scope": 796,
									"src": "1203:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 773,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "1566:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "1581:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:6"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "1621:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:6"
									},
									"scope": 796,
									"src": "1547:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 783,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "2325:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:6"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 780,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 796,
									"src": "2308:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2711:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2725:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2737:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:6"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "2770:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 792,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:6"
									},
									"scope": 796,
									"src": "2689:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 797,
							"src": "203:2575:6",
							"usedErrors": [],
							"usedEvents": [
								730,
								739
							]
						}
					],
					"src": "106:2673:6"
				},
				"id": 6
			},
			"src/wstf token launch/contracts/token/ERC20/OmniERC20.sol": {
				"ast": {
					"absolutePath": "src/wstf token launch/contracts/token/ERC20/OmniERC20.sol",
					"exportedSymbols": {
						"ConfLevel": [
							220
						],
						"Context": [
							1464
						],
						"IERC20": [
							796
						],
						"IERC20Errors": [
							623
						],
						"IERC20Metadata": [
							1360
						],
						"OmniERC20": [
							1334
						],
						"XApp": [
							326
						]
					},
					"id": 1335,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 798,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "src/wstf token launch/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 800,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1335,
							"sourceUnit": 797,
							"src": "58:36:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 799,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 796,
										"src": "66:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 802,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1335,
							"sourceUnit": 1361,
							"src": "95:63:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 801,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1360,
										"src": "103:14:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/wstf token launch/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 804,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1335,
							"sourceUnit": 1465,
							"src": "159:48:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 803,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1464,
										"src": "167:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "src/wstf token launch/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 806,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1335,
							"sourceUnit": 719,
							"src": "208:65:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 805,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 623,
										"src": "216:12:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/omni/contracts/core/src/pkg/XApp.sol",
							"file": "../../../../../lib/omni/contracts/core/src/pkg/XApp.sol",
							"id": 808,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1335,
							"sourceUnit": 327,
							"src": "274:77:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 807,
										"name": "XApp",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 326,
										"src": "282:4:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "lib/omni/contracts/core/src/libraries/ConfLevel.sol",
							"file": "../../../../../lib/omni/contracts/core/src/libraries/ConfLevel.sol",
							"id": 810,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1335,
							"sourceUnit": 221,
							"src": "352:93:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 809,
										"name": "ConfLevel",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 220,
										"src": "360:9:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 811,
										"name": "Context",
										"nameLocations": [
											"479:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1464,
										"src": "479:7:7"
									},
									"id": 812,
									"nodeType": "InheritanceSpecifier",
									"src": "479:7:7"
								},
								{
									"baseName": {
										"id": 813,
										"name": "IERC20",
										"nameLocations": [
											"488:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 796,
										"src": "488:6:7"
									},
									"id": 814,
									"nodeType": "InheritanceSpecifier",
									"src": "488:6:7"
								},
								{
									"baseName": {
										"id": 815,
										"name": "IERC20Metadata",
										"nameLocations": [
											"496:14:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1360,
										"src": "496:14:7"
									},
									"id": 816,
									"nodeType": "InheritanceSpecifier",
									"src": "496:14:7"
								},
								{
									"baseName": {
										"id": 817,
										"name": "IERC20Errors",
										"nameLocations": [
											"512:12:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "512:12:7"
									},
									"id": 818,
									"nodeType": "InheritanceSpecifier",
									"src": "512:12:7"
								},
								{
									"baseName": {
										"id": 819,
										"name": "XApp",
										"nameLocations": [
											"526:4:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 326,
										"src": "526:4:7"
									},
									"id": 820,
									"nodeType": "InheritanceSpecifier",
									"src": "526:4:7"
								}
							],
							"canonicalName": "OmniERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1334,
							"linearizedBaseContracts": [
								1334,
								326,
								581,
								623,
								1360,
								796,
								1464
							],
							"name": "OmniERC20",
							"nameLocation": "466:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 824,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "581:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1334,
									"src": "537:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 823,
										"keyName": "account",
										"keyNameLocation": "553:7:7",
										"keyType": {
											"id": 821,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "545:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "537:35:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 822,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "564:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 830,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "668:11:7",
									"nodeType": "VariableDeclaration",
									"scope": 1334,
									"src": "596:83:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 829,
										"keyName": "account",
										"keyNameLocation": "612:7:7",
										"keyType": {
											"id": 825,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "604:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "596:63:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 828,
											"keyName": "spender",
											"keyNameLocation": "639:7:7",
											"keyType": {
												"id": 826,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "631:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "623:35:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 827,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "650:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 832,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "701:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1334,
									"src": "685:28:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 831,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "685:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 834,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "734:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1334,
									"src": "719:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 833,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "719:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 836,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "760:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1334,
									"src": "745:22:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 835,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "745:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "885:57:7",
										"statements": [
											{
												"expression": {
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 850,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "895:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 851,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "903:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "895:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "895:13:7"
											},
											{
												"expression": {
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 854,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "918:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 855,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "928:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "918:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "918:17:7"
											}
										]
									},
									"id": 859,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 845,
													"name": "omniPortal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 842,
													"src": "855:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"expression": {
														"id": 846,
														"name": "ConfLevel",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "867:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ConfLevel_$220_$",
															"typeString": "type(library ConfLevel)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "877:6:7",
													"memberName": "Latest",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 182,
													"src": "867:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												}
											],
											"id": 848,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 844,
												"name": "XApp",
												"nameLocations": [
													"850:4:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 326,
												"src": "850:4:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "850:34:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "800:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "786:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 837,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "786:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "821:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "807:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 839,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "807:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "omniPortal",
												"nameLocation": "838:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "830:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "830:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "785:64:7"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "885:0:7"
									},
									"scope": 1334,
									"src": "774:168:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1347
									],
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "1017:29:7",
										"statements": [
											{
												"expression": {
													"id": 865,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 834,
													"src": "1034:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 864,
												"id": 866,
												"nodeType": "Return",
												"src": "1027:12:7"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "957:4:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 861,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "984:8:7"
									},
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "961:2:7"
									},
									"returnParameters": {
										"id": 864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1002:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 862,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1002:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:15:7"
									},
									"scope": 1334,
									"src": "948:98:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1353
									],
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "1123:31:7",
										"statements": [
											{
												"expression": {
													"id": 874,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 836,
													"src": "1140:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 873,
												"id": 875,
												"nodeType": "Return",
												"src": "1133:14:7"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1061:6:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 870,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1090:8:7"
									},
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:2:7"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 877,
												"src": "1108:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 871,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1108:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:15:7"
									},
									"scope": 1334,
									"src": "1052:102:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1359
									],
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "1225:26:7",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1242:2:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 882,
												"id": 884,
												"nodeType": "Return",
												"src": "1235:9:7"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 886,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1169:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 879,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1200:8:7"
									},
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:2:7"
									},
									"returnParameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "1218:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 880,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1218:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1217:7:7"
									},
									"scope": 1334,
									"src": "1160:91:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										745
									],
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "1327:36:7",
										"statements": [
											{
												"expression": {
													"id": 892,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 832,
													"src": "1344:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 891,
												"id": 893,
												"nodeType": "Return",
												"src": "1337:19:7"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1266:11:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 888,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1300:8:7"
									},
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1277:2:7"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "1318:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1318:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1317:9:7"
									},
									"scope": 1334,
									"src": "1257:106:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										753
									],
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "1452:42:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 903,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "1469:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 905,
													"indexExpression": {
														"id": 904,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 897,
														"src": "1479:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1469:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 902,
												"id": 906,
												"nodeType": "Return",
												"src": "1462:25:7"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1378:9:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 899,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1425:8:7"
									},
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1396:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "1388:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1388:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1387:17:7"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "1443:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:9:7"
									},
									"scope": 1334,
									"src": "1369:125:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										773
									],
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "1599:51:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 918,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "1616:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 920,
														"indexExpression": {
															"id": 919,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "1628:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1616:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 922,
													"indexExpression": {
														"id": 921,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "1635:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1616:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 917,
												"id": 923,
												"nodeType": "Return",
												"src": "1609:34:7"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1510:9:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 914,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1572:8:7"
									},
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1528:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1520:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1520:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1543:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1535:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1535:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1519:32:7"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1590:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1590:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1589:9:7"
									},
									"scope": 1334,
									"src": "1501:149:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										783
									],
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "1744:107:7",
										"statements": [
											{
												"assignments": [
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "1762:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 948,
														"src": "1754:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 935,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1754:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 939,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 937,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "1770:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1754:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "1801:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "1808:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "1817:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 940,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1227,
															1286
														],
														"referencedDeclaration": 1227,
														"src": "1792:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1792:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "1792:31:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1840:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 934,
												"id": 947,
												"nodeType": "Return",
												"src": "1833:11:7"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1665:7:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 931,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1720:8:7"
									},
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1681:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "1673:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1673:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1698:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "1690:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1690:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1672:32:7"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "1738:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 932,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1738:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1737:6:7"
									},
									"scope": 1334,
									"src": "1656:195:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										795
									],
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "1959:151:7",
										"statements": [
											{
												"assignments": [
													962
												],
												"declarations": [
													{
														"constant": false,
														"id": 962,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "1977:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 980,
														"src": "1969:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 961,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1969:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 965,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 963,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "1987:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1987:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1969:30:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 967,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "2025:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 968,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "2031:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "2040:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 966,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "2009:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "2009:37:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 973,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "2066:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2072:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 975,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "2076:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 972,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "2056:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2056:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "2056:26:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2099:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 960,
												"id": 979,
												"nodeType": "Return",
												"src": "2092:11:7"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1866:12:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 957,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1935:8:7"
									},
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1887:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1879:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1879:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1901:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1893:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1893:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1913:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1905:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1905:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1878:41:7"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "1953:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 958,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1953:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1952:6:7"
									},
									"scope": 1334,
									"src": "1857:253:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										763
									],
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "2201:103:7",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2219:5:7",
														"nodeType": "VariableDeclaration",
														"scope": 1004,
														"src": "2211:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 991,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2211:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 993,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "2227:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2227:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2211:28:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 997,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "2259:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 998,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "2266:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 999,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "2270:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 996,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "2249:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "2249:27:7"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2293:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 990,
												"id": 1003,
												"nodeType": "Return",
												"src": "2286:11:7"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2126:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 987,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2177:8:7"
									},
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2143:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2135:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2155:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2147:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2147:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2134:27:7"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "2195:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2195:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2194:6:7"
									},
									"scope": 1334,
									"src": "2117:187:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "2389:364:7",
										"statements": [
											{
												"assignments": [
													1015
												],
												"declarations": [
													{
														"constant": false,
														"id": 1015,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "2408:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "2400:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1014,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2400:7:7",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1018,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1016,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "2415:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2415:12:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2400:27:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1020,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "2447:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1023,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2461:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OmniERC20_$1334",
																		"typeString": "contract OmniERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OmniERC20_$1334",
																		"typeString": "contract OmniERC20"
																	}
																],
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2453:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1021,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2453:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2453:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1025,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "2468:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1019,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "2437:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2437:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "2437:37:7"
											},
											{
												"assignments": [
													1029
												],
												"declarations": [
													{
														"constant": false,
														"id": 1029,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2534:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "2521:17:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1028,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2521:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1042,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1032,
																"name": "OmniERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "2556:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_OmniERC20_$1334_$",
																	"typeString": "type(contract OmniERC20)"
																}
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2566:15:7",
															"memberName": "receiveTransfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1088,
															"src": "2556:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function OmniERC20.receiveTransfer(address,address,uint256)"
															}
														},
														{
															"components": [
																{
																	"arguments": [
																		{
																			"id": 1036,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2592:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_OmniERC20_$1334",
																				"typeString": "contract OmniERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_OmniERC20_$1334",
																				"typeString": "contract OmniERC20"
																			}
																		],
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2584:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1034,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2584:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2584:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1038,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1009,
																	"src": "2599:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1039,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "2603:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1040,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2583:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																"typeString": "function OmniERC20.receiveTransfer(address,address,uint256)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,address,uint256)"
															}
														],
														"expression": {
															"id": 1030,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "2541:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2545:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "2541:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2541:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2521:89:7"
											},
											{
												"assignments": [
													1044
												],
												"declarations": [
													{
														"constant": false,
														"id": 1044,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "2628:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1063,
														"src": "2620:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1043,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2620:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1054,
												"initialValue": {
													"arguments": [
														{
															"id": 1046,
															"name": "destChain",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "2640:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"arguments": [
																{
																	"id": 1049,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2659:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_OmniERC20_$1334",
																		"typeString": "contract OmniERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_OmniERC20_$1334",
																		"typeString": "contract OmniERC20"
																	}
																],
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2651:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1047,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2651:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2651:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1051,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "2666:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "313530303030",
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2672:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_150000_by_1",
																"typeString": "int_const 150000"
															},
															"value": "150000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_150000_by_1",
																"typeString": "int_const 150000"
															}
														],
														"id": 1045,
														"name": "xcall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															474,
															530
														],
														"referencedDeclaration": 474,
														"src": "2634:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint64_$_t_address_$_t_bytes_memory_ptr_$_t_uint64_$returns$_t_uint256_$",
															"typeString": "function (uint64,address,bytes memory,uint64) returns (uint256)"
														}
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2634:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2620:59:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1056,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2697:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2701:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2697:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1058,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "2710:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2697:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6d6e6945524332303a20496e73756666696369656e7420666565",
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2715:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805",
																"typeString": "literal_string \"OmniERC20: Insufficient fee\""
															},
															"value": "OmniERC20: Insufficient fee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c4f1851d01a3830f5e6852dd516b299dc9c48877fe71fa30612fd94ca9e36805",
																"typeString": "literal_string \"OmniERC20: Insufficient fee\""
															}
														],
														"id": 1055,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2689:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2689:56:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "2689:56:7"
											}
										]
									},
									"functionSelector": "d15dcd62",
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2318:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "destChain",
												"nameLocation": "2334:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "2327:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1006,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "2327:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2353:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "2345:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2345:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2365:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "2357:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:45:7"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2389:0:7"
									},
									"scope": 1334,
									"src": "2309:444:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "2840:123:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1076,
																"name": "isXCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "2859:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2859:9:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6d6e6945524332303a204f6e6c792063616c6c61626c65207669612063726f73732d636861696e206d657373616765",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2870:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808",
																"typeString": "literal_string \"OmniERC20: Only callable via cross-chain message\""
															},
															"value": "OmniERC20: Only callable via cross-chain message"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c44ccc1f142d75ae54de7b75add3856d4f48b93faf53b2662b27617ea5ae808",
																"typeString": "literal_string \"OmniERC20: Only callable via cross-chain message\""
															}
														],
														"id": 1075,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2851:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2851:70:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "2851:70:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1082,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "2939:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1083,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "2945:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1084,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "2949:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1081,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "2931:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2931:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "2931:24:7"
											}
										]
									},
									"functionSelector": "4a536a06",
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1073,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1072,
												"name": "xrecv",
												"nameLocations": [
													"2834:5:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 370,
												"src": "2834:5:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2834:5:7"
										}
									],
									"name": "receiveTransfer",
									"nameLocation": "2768:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2792:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "2784:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2784:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2806:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "2798:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2818:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "2810:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2810:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2783:41:7"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2840:0:7"
									},
									"scope": 1334,
									"src": "2759:204:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "3046:232:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1097,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "3060:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3076:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3068:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1098,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3068:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3068:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3060:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1111,
												"nodeType": "IfStatement",
												"src": "3056:86:7",
												"trueBody": {
													"id": 1110,
													"nodeType": "Block",
													"src": "3080:62:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1106,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3128:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3120:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1104,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3120:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3120:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1103,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 598,
																	"src": "3101:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3101:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1109,
															"nodeType": "RevertStatement",
															"src": "3094:37:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1112,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "3155:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3169:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3161:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1113,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3161:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3161:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3155:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1126,
												"nodeType": "IfStatement",
												"src": "3151:86:7",
												"trueBody": {
													"id": 1125,
													"nodeType": "Block",
													"src": "3173:64:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3223:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3215:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1119,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3215:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3215:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1118,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "3194:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3194:32:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1124,
															"nodeType": "RevertStatement",
															"src": "3187:39:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1128,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "3255:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1129,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "3261:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1130,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "3265:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1127,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "3247:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3247:24:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "3247:24:7"
											}
										]
									},
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "2978:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2996:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2988:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2988:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3010:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "3002:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3002:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3022:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "3014:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3014:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2987:41:7"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3046:0:7"
									},
									"scope": 1334,
									"src": "2969:309:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "3360:631:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1143,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "3374:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3390:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3382:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1144,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3382:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3382:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3374:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1180,
													"nodeType": "Block",
													"src": "3446:283:7",
													"statements": [
														{
															"assignments": [
																1155
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1155,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "3468:11:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1180,
																	"src": "3460:19:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1154,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3460:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1159,
															"initialValue": {
																"baseExpression": {
																	"id": 1156,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 824,
																	"src": "3482:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1158,
																"indexExpression": {
																	"id": 1157,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "3492:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3482:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3460:37:7"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1160,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "3515:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1161,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "3529:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3515:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1170,
															"nodeType": "IfStatement",
															"src": "3511:115:7",
															"trueBody": {
																"id": 1169,
																"nodeType": "Block",
																"src": "3536:90:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1164,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1136,
																					"src": "3586:4:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1165,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "3592:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1166,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1140,
																					"src": "3605:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1163,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 593,
																				"src": "3561:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1167,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3561:50:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1168,
																		"nodeType": "RevertStatement",
																		"src": "3554:57:7"
																	}
																]
															}
														},
														{
															"id": 1179,
															"nodeType": "UncheckedBlock",
															"src": "3639:80:7",
															"statements": [
																{
																	"expression": {
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1171,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 824,
																				"src": "3667:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1173,
																			"indexExpression": {
																				"id": 1172,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1136,
																				"src": "3677:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "3667:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1174,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1155,
																				"src": "3685:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1175,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1140,
																				"src": "3699:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3685:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3667:37:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1178,
																	"nodeType": "ExpressionStatement",
																	"src": "3667:37:7"
																}
															]
														}
													]
												},
												"id": 1181,
												"nodeType": "IfStatement",
												"src": "3370:359:7",
												"trueBody": {
													"id": 1153,
													"nodeType": "Block",
													"src": "3394:46:7",
													"statements": [
														{
															"expression": {
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1149,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "3408:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1150,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "3424:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3408:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1152,
															"nodeType": "ExpressionStatement",
															"src": "3408:21:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1182,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "3743:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3757:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3749:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1183,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3749:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3749:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3743:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1201,
													"nodeType": "Block",
													"src": "3855:89:7",
													"statements": [
														{
															"id": 1200,
															"nodeType": "UncheckedBlock",
															"src": "3869:65:7",
															"statements": [
																{
																	"expression": {
																		"id": 1198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1194,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 824,
																				"src": "3897:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1196,
																			"indexExpression": {
																				"id": 1195,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1138,
																				"src": "3907:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "3897:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1197,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1140,
																			"src": "3914:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3897:22:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1199,
																	"nodeType": "ExpressionStatement",
																	"src": "3897:22:7"
																}
															]
														}
													]
												},
												"id": 1202,
												"nodeType": "IfStatement",
												"src": "3739:205:7",
												"trueBody": {
													"id": 1193,
													"nodeType": "Block",
													"src": "3761:88:7",
													"statements": [
														{
															"id": 1192,
															"nodeType": "UncheckedBlock",
															"src": "3775:64:7",
															"statements": [
																{
																	"expression": {
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1188,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 832,
																			"src": "3803:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1189,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1140,
																			"src": "3819:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3803:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1191,
																	"nodeType": "ExpressionStatement",
																	"src": "3803:21:7"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1204,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "3968:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1205,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "3974:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1206,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "3978:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1203,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "3959:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3959:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "EmitStatement",
												"src": "3954:30:7"
											}
										]
									},
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "3294:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3310:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "3302:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3302:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3324:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "3316:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3336:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "3328:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3328:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3301:41:7"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3360:0:7"
									},
									"scope": 1334,
									"src": "3285:706:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "4072:54:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1220,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "4091:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1221,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "4098:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1222,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1216,
															"src": "4107:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4114:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1219,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1227,
															1286
														],
														"referencedDeclaration": 1286,
														"src": "4082:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4082:37:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "4082:37:7"
											}
										]
									},
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "4007:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4024:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "4016:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4016:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4039:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "4031:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4031:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4056:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "4048:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4048:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:47:7"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4072:0:7"
									},
									"scope": 1334,
									"src": "3998:128:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "4230:334:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1238,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "4244:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4261:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4253:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1239,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4253:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4253:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4244:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1252,
												"nodeType": "IfStatement",
												"src": "4240:89:7",
												"trueBody": {
													"id": 1251,
													"nodeType": "Block",
													"src": "4265:64:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4315:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4307:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1245,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4307:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4307:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1244,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "4286:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4286:32:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1250,
															"nodeType": "RevertStatement",
															"src": "4279:39:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1253,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "4342:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4361:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4353:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1254,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4353:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4353:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4342:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1267,
												"nodeType": "IfStatement",
												"src": "4338:90:7",
												"trueBody": {
													"id": 1266,
													"nodeType": "Block",
													"src": "4365:63:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4414:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4406:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1260,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4406:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4406:10:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1259,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "4386:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4386:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1265,
															"nodeType": "RevertStatement",
															"src": "4379:38:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1268,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "4437:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1271,
															"indexExpression": {
																"id": 1269,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1229,
																"src": "4449:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4437:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1272,
														"indexExpression": {
															"id": 1270,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "4456:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4437:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1273,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1233,
														"src": "4467:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4437:35:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1275,
												"nodeType": "ExpressionStatement",
												"src": "4437:35:7"
											},
											{
												"condition": {
													"id": 1276,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1235,
													"src": "4486:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1284,
												"nodeType": "IfStatement",
												"src": "4482:76:7",
												"trueBody": {
													"id": 1283,
													"nodeType": "Block",
													"src": "4497:61:7",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1278,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1229,
																		"src": "4525:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1279,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "4532:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1280,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1233,
																		"src": "4541:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1277,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "4516:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4516:31:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1282,
															"nodeType": "EmitStatement",
															"src": "4511:36:7"
														}
													]
												}
											}
										]
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "4141:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4158:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "4150:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4173:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "4165:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4190:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "4182:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4182:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "4202:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "4197:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4197:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4149:63:7"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4230:0:7"
									},
									"scope": 1334,
									"src": "4132:432:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "4659:388:7",
										"statements": [
											{
												"assignments": [
													1296
												],
												"declarations": [
													{
														"constant": false,
														"id": 1296,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "4677:16:7",
														"nodeType": "VariableDeclaration",
														"scope": 1332,
														"src": "4669:24:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1295,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4669:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1301,
												"initialValue": {
													"arguments": [
														{
															"id": 1298,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "4706:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1299,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "4713:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1297,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "4696:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4696:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4669:52:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1302,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "4735:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4760:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1304,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4760:7:7",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1303,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4755:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4755:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4769:3:7",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4755:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4735:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1331,
												"nodeType": "IfStatement",
												"src": "4731:310:7",
												"trueBody": {
													"id": 1330,
													"nodeType": "Block",
													"src": "4774:267:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1309,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1296,
																	"src": "4792:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1310,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1292,
																	"src": "4811:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4792:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1319,
															"nodeType": "IfStatement",
															"src": "4788:130:7",
															"trueBody": {
																"id": 1318,
																"nodeType": "Block",
																"src": "4818:100:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1313,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1290,
																					"src": "4870:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1314,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1296,
																					"src": "4879:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1315,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1292,
																					"src": "4897:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1312,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 612,
																				"src": "4843:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4843:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1317,
																		"nodeType": "RevertStatement",
																		"src": "4836:67:7"
																	}
																]
															}
														},
														{
															"id": 1329,
															"nodeType": "UncheckedBlock",
															"src": "4931:100:7",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1321,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1288,
																				"src": "4968:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1322,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1290,
																				"src": "4975:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1325,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1323,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1296,
																					"src": "4984:16:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1324,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1292,
																					"src": "5003:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4984:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1326,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5010:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1320,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1227,
																				1286
																			],
																			"referencedDeclaration": 1286,
																			"src": "4959:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4959:57:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1328,
																	"nodeType": "ExpressionStatement",
																	"src": "4959:57:7"
																}
															]
														}
													]
												}
											}
										]
									},
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "4579:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4603:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "4595:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4595:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4618:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "4610:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4610:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4635:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "4627:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4627:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4594:47:7"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4659:0:7"
									},
									"scope": 1334,
									"src": "4570:477:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1335,
							"src": "448:4601:7",
							"usedErrors": [
								593,
								598,
								603,
								612,
								617,
								622
							],
							"usedEvents": [
								340,
								345,
								730,
								739
							]
						}
					],
					"src": "32:5018:7"
				},
				"id": 7
			},
			"src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "src/wstf token launch/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							796
						],
						"IERC20Metadata": [
							1360
						]
					},
					"id": 1361,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1336,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:8"
						},
						{
							"absolutePath": "src/wstf token launch/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1338,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1361,
							"sourceUnit": 797,
							"src": "151:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1337,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 796,
										"src": "159:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1340,
										"name": "IERC20",
										"nameLocations": [
											"305:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 796,
										"src": "305:6:8"
									},
									"id": 1341,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:8"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1339,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:8",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1360,
							"linearizedBaseContracts": [
								1360,
								796
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:8"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "416:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1344,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:8"
									},
									"scope": 1360,
									"src": "377:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:8",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:8"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "539:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1350,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:8"
									},
									"scope": 1360,
									"src": "498:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:8",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:8"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "673:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1356,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:8"
									},
									"scope": 1360,
									"src": "630:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1361,
							"src": "277:405:8",
							"usedErrors": [],
							"usedEvents": [
								730,
								739
							]
						}
					],
					"src": "125:558:8"
				},
				"id": 8
			},
			"src/wstf token launch/contracts/token/ERC20/implementation.sol": {
				"ast": {
					"absolutePath": "src/wstf token launch/contracts/token/ERC20/implementation.sol",
					"exportedSymbols": {
						"ConfLevel": [
							220
						],
						"Context": [
							1464
						],
						"IERC20": [
							796
						],
						"IERC20Errors": [
							623
						],
						"IERC20Metadata": [
							1360
						],
						"MyOmniToken": [
							1434
						],
						"OmniERC20": [
							1334
						],
						"XApp": [
							326
						]
					},
					"id": 1435,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1362,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "src/wstf token launch/contracts/token/ERC20/OmniERC20.sol",
							"file": "./OmniERC20.sol",
							"id": 1363,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1435,
							"sourceUnit": 1335,
							"src": "58:25:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1364,
										"name": "OmniERC20",
										"nameLocations": [
											"152:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1334,
										"src": "152:9:9"
									},
									"id": 1365,
									"nodeType": "InheritanceSpecifier",
									"src": "152:9:9"
								}
							],
							"canonicalName": "MyOmniToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1434,
							"linearizedBaseContracts": [
								1434,
								1334,
								326,
								581,
								623,
								1360,
								796,
								1464
							],
							"name": "MyOmniToken",
							"nameLocation": "137:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "344:128:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1382,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "439:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "443:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "439:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1384,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "451:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1381,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "433:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "433:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1386,
												"nodeType": "ExpressionStatement",
												"src": "433:32:9"
											}
										]
									},
									"id": 1388,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1376,
													"name": "name_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1367,
													"src": "316:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1377,
													"name": "symbol_",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1369,
													"src": "323:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1378,
													"name": "omniPortal",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1371,
													"src": "332:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1379,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1375,
												"name": "OmniERC20",
												"nameLocations": [
													"306:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1334,
												"src": "306:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "306:37:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "204:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "190:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1366,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "190:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "233:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "219:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1368,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "219:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "omniPortal",
												"nameLocation": "258:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "250:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "286:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "278:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "180:125:9"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "344:0:9"
									},
									"scope": 1434,
									"src": "169:303:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "630:108:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1396,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "716:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1397,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "725:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1395,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "710:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "710:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1399,
												"nodeType": "ExpressionStatement",
												"src": "710:21:9"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "586:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "599:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "591:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "591:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "616:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "608:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "590:32:9"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "630:0:9"
									},
									"scope": 1434,
									"src": "577:161:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "830:152:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1408,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "844:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "863:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "855:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1409,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "855:7:9",
																"typeDescriptions": {}
															}
														},
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "855:10:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "844:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1422,
												"nodeType": "IfStatement",
												"src": "840:91:9",
												"trueBody": {
													"id": 1421,
													"nodeType": "Block",
													"src": "867:64:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "917:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "909:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1415,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "909:7:9",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "909:10:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1414,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "888:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "888:32:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1420,
															"nodeType": "RevertStatement",
															"src": "881:39:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "956:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "948:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1424,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "948:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "948:10:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1428,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "960:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1429,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "969:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1423,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "940:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "940:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "940:35:9"
											}
										]
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "783:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "797:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "789:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "789:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "814:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "806:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:32:9"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "830:0:9"
									},
									"scope": 1434,
									"src": "774:208:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1435,
							"src": "128:856:9",
							"usedErrors": [
								593,
								598,
								603,
								612,
								617,
								622
							],
							"usedEvents": [
								340,
								345,
								730,
								739
							]
						}
					],
					"src": "32:953:9"
				},
				"id": 9
			},
			"src/wstf token launch/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "src/wstf token launch/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1464
						]
					},
					"id": 1465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1436,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1437,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1464,
							"linearizedBaseContracts": [
								1464
							],
							"name": "Context",
							"nameLocation": "642:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1445,
										"nodeType": "Block",
										"src": "718:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1442,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1441,
												"id": 1444,
												"nodeType": "Return",
												"src": "728:17:10"
											}
										]
									},
									"id": 1446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:10"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "709:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:10"
									},
									"scope": 1464,
									"src": "656:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1454,
										"nodeType": "Block",
										"src": "825:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1451,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1450,
												"id": 1453,
												"nodeType": "Return",
												"src": "835:15:10"
											}
										]
									},
									"id": 1455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:10"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "809:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1448,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:10"
									},
									"scope": 1464,
									"src": "758:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "935:25:10",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1459,
												"id": 1461,
												"nodeType": "Return",
												"src": "945:8:10"
											}
										]
									},
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:10"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "926:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:10"
									},
									"scope": 1464,
									"src": "863:97:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1465,
							"src": "624:338:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:10"
				},
				"id": 10
			}
		}
	}
}